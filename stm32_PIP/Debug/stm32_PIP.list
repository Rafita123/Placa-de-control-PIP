
stm32_PIP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009f84  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000244  0800a094  0800a094  0001a094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a2d8  0800a2d8  000200a0  2**0
                  CONTENTS
  4 .ARM          00000000  0800a2d8  0800a2d8  000200a0  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800a2d8  0800a2d8  000200a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a2d8  0800a2d8  0001a2d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800a2dc  0800a2dc  0001a2dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000a0  20000000  0800a2e0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000107c  200000a0  0800a380  000200a0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000111c  0800a380  0002111c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001d958  00000000  00000000  000200c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003e23  00000000  00000000  0003da21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001690  00000000  00000000  00041848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001530  00000000  00000000  00042ed8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001b1fc  00000000  00000000  00044408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019279  00000000  00000000  0005f604  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009b69b  00000000  00000000  0007887d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00113f18  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000636c  00000000  00000000  00113f6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000a0 	.word	0x200000a0
 800012c:	00000000 	.word	0x00000000
 8000130:	0800a07c 	.word	0x0800a07c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200000a4 	.word	0x200000a4
 800014c:	0800a07c 	.word	0x0800a07c

08000150 <__aeabi_frsub>:
 8000150:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000154:	e002      	b.n	800015c <__addsf3>
 8000156:	bf00      	nop

08000158 <__aeabi_fsub>:
 8000158:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

0800015c <__addsf3>:
 800015c:	0042      	lsls	r2, r0, #1
 800015e:	bf1f      	itttt	ne
 8000160:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000164:	ea92 0f03 	teqne	r2, r3
 8000168:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 800016c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000170:	d06a      	beq.n	8000248 <__addsf3+0xec>
 8000172:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000176:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 800017a:	bfc1      	itttt	gt
 800017c:	18d2      	addgt	r2, r2, r3
 800017e:	4041      	eorgt	r1, r0
 8000180:	4048      	eorgt	r0, r1
 8000182:	4041      	eorgt	r1, r0
 8000184:	bfb8      	it	lt
 8000186:	425b      	neglt	r3, r3
 8000188:	2b19      	cmp	r3, #25
 800018a:	bf88      	it	hi
 800018c:	4770      	bxhi	lr
 800018e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000192:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000196:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800019a:	bf18      	it	ne
 800019c:	4240      	negne	r0, r0
 800019e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001a2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80001a6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80001aa:	bf18      	it	ne
 80001ac:	4249      	negne	r1, r1
 80001ae:	ea92 0f03 	teq	r2, r3
 80001b2:	d03f      	beq.n	8000234 <__addsf3+0xd8>
 80001b4:	f1a2 0201 	sub.w	r2, r2, #1
 80001b8:	fa41 fc03 	asr.w	ip, r1, r3
 80001bc:	eb10 000c 	adds.w	r0, r0, ip
 80001c0:	f1c3 0320 	rsb	r3, r3, #32
 80001c4:	fa01 f103 	lsl.w	r1, r1, r3
 80001c8:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80001cc:	d502      	bpl.n	80001d4 <__addsf3+0x78>
 80001ce:	4249      	negs	r1, r1
 80001d0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80001d4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80001d8:	d313      	bcc.n	8000202 <__addsf3+0xa6>
 80001da:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80001de:	d306      	bcc.n	80001ee <__addsf3+0x92>
 80001e0:	0840      	lsrs	r0, r0, #1
 80001e2:	ea4f 0131 	mov.w	r1, r1, rrx
 80001e6:	f102 0201 	add.w	r2, r2, #1
 80001ea:	2afe      	cmp	r2, #254	; 0xfe
 80001ec:	d251      	bcs.n	8000292 <__addsf3+0x136>
 80001ee:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80001f2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001f6:	bf08      	it	eq
 80001f8:	f020 0001 	biceq.w	r0, r0, #1
 80001fc:	ea40 0003 	orr.w	r0, r0, r3
 8000200:	4770      	bx	lr
 8000202:	0049      	lsls	r1, r1, #1
 8000204:	eb40 0000 	adc.w	r0, r0, r0
 8000208:	3a01      	subs	r2, #1
 800020a:	bf28      	it	cs
 800020c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000210:	d2ed      	bcs.n	80001ee <__addsf3+0x92>
 8000212:	fab0 fc80 	clz	ip, r0
 8000216:	f1ac 0c08 	sub.w	ip, ip, #8
 800021a:	ebb2 020c 	subs.w	r2, r2, ip
 800021e:	fa00 f00c 	lsl.w	r0, r0, ip
 8000222:	bfaa      	itet	ge
 8000224:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000228:	4252      	neglt	r2, r2
 800022a:	4318      	orrge	r0, r3
 800022c:	bfbc      	itt	lt
 800022e:	40d0      	lsrlt	r0, r2
 8000230:	4318      	orrlt	r0, r3
 8000232:	4770      	bx	lr
 8000234:	f092 0f00 	teq	r2, #0
 8000238:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 800023c:	bf06      	itte	eq
 800023e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000242:	3201      	addeq	r2, #1
 8000244:	3b01      	subne	r3, #1
 8000246:	e7b5      	b.n	80001b4 <__addsf3+0x58>
 8000248:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800024c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000250:	bf18      	it	ne
 8000252:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000256:	d021      	beq.n	800029c <__addsf3+0x140>
 8000258:	ea92 0f03 	teq	r2, r3
 800025c:	d004      	beq.n	8000268 <__addsf3+0x10c>
 800025e:	f092 0f00 	teq	r2, #0
 8000262:	bf08      	it	eq
 8000264:	4608      	moveq	r0, r1
 8000266:	4770      	bx	lr
 8000268:	ea90 0f01 	teq	r0, r1
 800026c:	bf1c      	itt	ne
 800026e:	2000      	movne	r0, #0
 8000270:	4770      	bxne	lr
 8000272:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000276:	d104      	bne.n	8000282 <__addsf3+0x126>
 8000278:	0040      	lsls	r0, r0, #1
 800027a:	bf28      	it	cs
 800027c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000280:	4770      	bx	lr
 8000282:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000286:	bf3c      	itt	cc
 8000288:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 800028c:	4770      	bxcc	lr
 800028e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000292:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000296:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800029a:	4770      	bx	lr
 800029c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80002a0:	bf16      	itet	ne
 80002a2:	4608      	movne	r0, r1
 80002a4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80002a8:	4601      	movne	r1, r0
 80002aa:	0242      	lsls	r2, r0, #9
 80002ac:	bf06      	itte	eq
 80002ae:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80002b2:	ea90 0f01 	teqeq	r0, r1
 80002b6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80002ba:	4770      	bx	lr

080002bc <__aeabi_ui2f>:
 80002bc:	f04f 0300 	mov.w	r3, #0
 80002c0:	e004      	b.n	80002cc <__aeabi_i2f+0x8>
 80002c2:	bf00      	nop

080002c4 <__aeabi_i2f>:
 80002c4:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80002c8:	bf48      	it	mi
 80002ca:	4240      	negmi	r0, r0
 80002cc:	ea5f 0c00 	movs.w	ip, r0
 80002d0:	bf08      	it	eq
 80002d2:	4770      	bxeq	lr
 80002d4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80002d8:	4601      	mov	r1, r0
 80002da:	f04f 0000 	mov.w	r0, #0
 80002de:	e01c      	b.n	800031a <__aeabi_l2f+0x2a>

080002e0 <__aeabi_ul2f>:
 80002e0:	ea50 0201 	orrs.w	r2, r0, r1
 80002e4:	bf08      	it	eq
 80002e6:	4770      	bxeq	lr
 80002e8:	f04f 0300 	mov.w	r3, #0
 80002ec:	e00a      	b.n	8000304 <__aeabi_l2f+0x14>
 80002ee:	bf00      	nop

080002f0 <__aeabi_l2f>:
 80002f0:	ea50 0201 	orrs.w	r2, r0, r1
 80002f4:	bf08      	it	eq
 80002f6:	4770      	bxeq	lr
 80002f8:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 80002fc:	d502      	bpl.n	8000304 <__aeabi_l2f+0x14>
 80002fe:	4240      	negs	r0, r0
 8000300:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000304:	ea5f 0c01 	movs.w	ip, r1
 8000308:	bf02      	ittt	eq
 800030a:	4684      	moveq	ip, r0
 800030c:	4601      	moveq	r1, r0
 800030e:	2000      	moveq	r0, #0
 8000310:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000314:	bf08      	it	eq
 8000316:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 800031a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800031e:	fabc f28c 	clz	r2, ip
 8000322:	3a08      	subs	r2, #8
 8000324:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000328:	db10      	blt.n	800034c <__aeabi_l2f+0x5c>
 800032a:	fa01 fc02 	lsl.w	ip, r1, r2
 800032e:	4463      	add	r3, ip
 8000330:	fa00 fc02 	lsl.w	ip, r0, r2
 8000334:	f1c2 0220 	rsb	r2, r2, #32
 8000338:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800033c:	fa20 f202 	lsr.w	r2, r0, r2
 8000340:	eb43 0002 	adc.w	r0, r3, r2
 8000344:	bf08      	it	eq
 8000346:	f020 0001 	biceq.w	r0, r0, #1
 800034a:	4770      	bx	lr
 800034c:	f102 0220 	add.w	r2, r2, #32
 8000350:	fa01 fc02 	lsl.w	ip, r1, r2
 8000354:	f1c2 0220 	rsb	r2, r2, #32
 8000358:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 800035c:	fa21 f202 	lsr.w	r2, r1, r2
 8000360:	eb43 0002 	adc.w	r0, r3, r2
 8000364:	bf08      	it	eq
 8000366:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800036a:	4770      	bx	lr

0800036c <__aeabi_fmul>:
 800036c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000370:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000374:	bf1e      	ittt	ne
 8000376:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800037a:	ea92 0f0c 	teqne	r2, ip
 800037e:	ea93 0f0c 	teqne	r3, ip
 8000382:	d06f      	beq.n	8000464 <__aeabi_fmul+0xf8>
 8000384:	441a      	add	r2, r3
 8000386:	ea80 0c01 	eor.w	ip, r0, r1
 800038a:	0240      	lsls	r0, r0, #9
 800038c:	bf18      	it	ne
 800038e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000392:	d01e      	beq.n	80003d2 <__aeabi_fmul+0x66>
 8000394:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000398:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800039c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80003a0:	fba0 3101 	umull	r3, r1, r0, r1
 80003a4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80003a8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80003ac:	bf3e      	ittt	cc
 80003ae:	0049      	lslcc	r1, r1, #1
 80003b0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80003b4:	005b      	lslcc	r3, r3, #1
 80003b6:	ea40 0001 	orr.w	r0, r0, r1
 80003ba:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80003be:	2afd      	cmp	r2, #253	; 0xfd
 80003c0:	d81d      	bhi.n	80003fe <__aeabi_fmul+0x92>
 80003c2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80003c6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003ca:	bf08      	it	eq
 80003cc:	f020 0001 	biceq.w	r0, r0, #1
 80003d0:	4770      	bx	lr
 80003d2:	f090 0f00 	teq	r0, #0
 80003d6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80003da:	bf08      	it	eq
 80003dc:	0249      	lsleq	r1, r1, #9
 80003de:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80003e2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80003e6:	3a7f      	subs	r2, #127	; 0x7f
 80003e8:	bfc2      	ittt	gt
 80003ea:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80003ee:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80003f2:	4770      	bxgt	lr
 80003f4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80003f8:	f04f 0300 	mov.w	r3, #0
 80003fc:	3a01      	subs	r2, #1
 80003fe:	dc5d      	bgt.n	80004bc <__aeabi_fmul+0x150>
 8000400:	f112 0f19 	cmn.w	r2, #25
 8000404:	bfdc      	itt	le
 8000406:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800040a:	4770      	bxle	lr
 800040c:	f1c2 0200 	rsb	r2, r2, #0
 8000410:	0041      	lsls	r1, r0, #1
 8000412:	fa21 f102 	lsr.w	r1, r1, r2
 8000416:	f1c2 0220 	rsb	r2, r2, #32
 800041a:	fa00 fc02 	lsl.w	ip, r0, r2
 800041e:	ea5f 0031 	movs.w	r0, r1, rrx
 8000422:	f140 0000 	adc.w	r0, r0, #0
 8000426:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800042a:	bf08      	it	eq
 800042c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000430:	4770      	bx	lr
 8000432:	f092 0f00 	teq	r2, #0
 8000436:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800043a:	bf02      	ittt	eq
 800043c:	0040      	lsleq	r0, r0, #1
 800043e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000442:	3a01      	subeq	r2, #1
 8000444:	d0f9      	beq.n	800043a <__aeabi_fmul+0xce>
 8000446:	ea40 000c 	orr.w	r0, r0, ip
 800044a:	f093 0f00 	teq	r3, #0
 800044e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000452:	bf02      	ittt	eq
 8000454:	0049      	lsleq	r1, r1, #1
 8000456:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800045a:	3b01      	subeq	r3, #1
 800045c:	d0f9      	beq.n	8000452 <__aeabi_fmul+0xe6>
 800045e:	ea41 010c 	orr.w	r1, r1, ip
 8000462:	e78f      	b.n	8000384 <__aeabi_fmul+0x18>
 8000464:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000468:	ea92 0f0c 	teq	r2, ip
 800046c:	bf18      	it	ne
 800046e:	ea93 0f0c 	teqne	r3, ip
 8000472:	d00a      	beq.n	800048a <__aeabi_fmul+0x11e>
 8000474:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000478:	bf18      	it	ne
 800047a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800047e:	d1d8      	bne.n	8000432 <__aeabi_fmul+0xc6>
 8000480:	ea80 0001 	eor.w	r0, r0, r1
 8000484:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000488:	4770      	bx	lr
 800048a:	f090 0f00 	teq	r0, #0
 800048e:	bf17      	itett	ne
 8000490:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000494:	4608      	moveq	r0, r1
 8000496:	f091 0f00 	teqne	r1, #0
 800049a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800049e:	d014      	beq.n	80004ca <__aeabi_fmul+0x15e>
 80004a0:	ea92 0f0c 	teq	r2, ip
 80004a4:	d101      	bne.n	80004aa <__aeabi_fmul+0x13e>
 80004a6:	0242      	lsls	r2, r0, #9
 80004a8:	d10f      	bne.n	80004ca <__aeabi_fmul+0x15e>
 80004aa:	ea93 0f0c 	teq	r3, ip
 80004ae:	d103      	bne.n	80004b8 <__aeabi_fmul+0x14c>
 80004b0:	024b      	lsls	r3, r1, #9
 80004b2:	bf18      	it	ne
 80004b4:	4608      	movne	r0, r1
 80004b6:	d108      	bne.n	80004ca <__aeabi_fmul+0x15e>
 80004b8:	ea80 0001 	eor.w	r0, r0, r1
 80004bc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80004c0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80004c4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80004c8:	4770      	bx	lr
 80004ca:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80004ce:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80004d2:	4770      	bx	lr

080004d4 <__aeabi_fdiv>:
 80004d4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004d8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80004dc:	bf1e      	ittt	ne
 80004de:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80004e2:	ea92 0f0c 	teqne	r2, ip
 80004e6:	ea93 0f0c 	teqne	r3, ip
 80004ea:	d069      	beq.n	80005c0 <__aeabi_fdiv+0xec>
 80004ec:	eba2 0203 	sub.w	r2, r2, r3
 80004f0:	ea80 0c01 	eor.w	ip, r0, r1
 80004f4:	0249      	lsls	r1, r1, #9
 80004f6:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80004fa:	d037      	beq.n	800056c <__aeabi_fdiv+0x98>
 80004fc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000500:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000504:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000508:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800050c:	428b      	cmp	r3, r1
 800050e:	bf38      	it	cc
 8000510:	005b      	lslcc	r3, r3, #1
 8000512:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000516:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800051a:	428b      	cmp	r3, r1
 800051c:	bf24      	itt	cs
 800051e:	1a5b      	subcs	r3, r3, r1
 8000520:	ea40 000c 	orrcs.w	r0, r0, ip
 8000524:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000528:	bf24      	itt	cs
 800052a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800052e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000532:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000536:	bf24      	itt	cs
 8000538:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 800053c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000540:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000544:	bf24      	itt	cs
 8000546:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800054a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800054e:	011b      	lsls	r3, r3, #4
 8000550:	bf18      	it	ne
 8000552:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000556:	d1e0      	bne.n	800051a <__aeabi_fdiv+0x46>
 8000558:	2afd      	cmp	r2, #253	; 0xfd
 800055a:	f63f af50 	bhi.w	80003fe <__aeabi_fmul+0x92>
 800055e:	428b      	cmp	r3, r1
 8000560:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000564:	bf08      	it	eq
 8000566:	f020 0001 	biceq.w	r0, r0, #1
 800056a:	4770      	bx	lr
 800056c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000570:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000574:	327f      	adds	r2, #127	; 0x7f
 8000576:	bfc2      	ittt	gt
 8000578:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800057c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000580:	4770      	bxgt	lr
 8000582:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000586:	f04f 0300 	mov.w	r3, #0
 800058a:	3a01      	subs	r2, #1
 800058c:	e737      	b.n	80003fe <__aeabi_fmul+0x92>
 800058e:	f092 0f00 	teq	r2, #0
 8000592:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000596:	bf02      	ittt	eq
 8000598:	0040      	lsleq	r0, r0, #1
 800059a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800059e:	3a01      	subeq	r2, #1
 80005a0:	d0f9      	beq.n	8000596 <__aeabi_fdiv+0xc2>
 80005a2:	ea40 000c 	orr.w	r0, r0, ip
 80005a6:	f093 0f00 	teq	r3, #0
 80005aa:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80005ae:	bf02      	ittt	eq
 80005b0:	0049      	lsleq	r1, r1, #1
 80005b2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80005b6:	3b01      	subeq	r3, #1
 80005b8:	d0f9      	beq.n	80005ae <__aeabi_fdiv+0xda>
 80005ba:	ea41 010c 	orr.w	r1, r1, ip
 80005be:	e795      	b.n	80004ec <__aeabi_fdiv+0x18>
 80005c0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80005c4:	ea92 0f0c 	teq	r2, ip
 80005c8:	d108      	bne.n	80005dc <__aeabi_fdiv+0x108>
 80005ca:	0242      	lsls	r2, r0, #9
 80005cc:	f47f af7d 	bne.w	80004ca <__aeabi_fmul+0x15e>
 80005d0:	ea93 0f0c 	teq	r3, ip
 80005d4:	f47f af70 	bne.w	80004b8 <__aeabi_fmul+0x14c>
 80005d8:	4608      	mov	r0, r1
 80005da:	e776      	b.n	80004ca <__aeabi_fmul+0x15e>
 80005dc:	ea93 0f0c 	teq	r3, ip
 80005e0:	d104      	bne.n	80005ec <__aeabi_fdiv+0x118>
 80005e2:	024b      	lsls	r3, r1, #9
 80005e4:	f43f af4c 	beq.w	8000480 <__aeabi_fmul+0x114>
 80005e8:	4608      	mov	r0, r1
 80005ea:	e76e      	b.n	80004ca <__aeabi_fmul+0x15e>
 80005ec:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80005f0:	bf18      	it	ne
 80005f2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80005f6:	d1ca      	bne.n	800058e <__aeabi_fdiv+0xba>
 80005f8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 80005fc:	f47f af5c 	bne.w	80004b8 <__aeabi_fmul+0x14c>
 8000600:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000604:	f47f af3c 	bne.w	8000480 <__aeabi_fmul+0x114>
 8000608:	e75f      	b.n	80004ca <__aeabi_fmul+0x15e>
 800060a:	bf00      	nop

0800060c <__gesf2>:
 800060c:	f04f 3cff 	mov.w	ip, #4294967295
 8000610:	e006      	b.n	8000620 <__cmpsf2+0x4>
 8000612:	bf00      	nop

08000614 <__lesf2>:
 8000614:	f04f 0c01 	mov.w	ip, #1
 8000618:	e002      	b.n	8000620 <__cmpsf2+0x4>
 800061a:	bf00      	nop

0800061c <__cmpsf2>:
 800061c:	f04f 0c01 	mov.w	ip, #1
 8000620:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000624:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000628:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800062c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000630:	bf18      	it	ne
 8000632:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000636:	d011      	beq.n	800065c <__cmpsf2+0x40>
 8000638:	b001      	add	sp, #4
 800063a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800063e:	bf18      	it	ne
 8000640:	ea90 0f01 	teqne	r0, r1
 8000644:	bf58      	it	pl
 8000646:	ebb2 0003 	subspl.w	r0, r2, r3
 800064a:	bf88      	it	hi
 800064c:	17c8      	asrhi	r0, r1, #31
 800064e:	bf38      	it	cc
 8000650:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000654:	bf18      	it	ne
 8000656:	f040 0001 	orrne.w	r0, r0, #1
 800065a:	4770      	bx	lr
 800065c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000660:	d102      	bne.n	8000668 <__cmpsf2+0x4c>
 8000662:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000666:	d105      	bne.n	8000674 <__cmpsf2+0x58>
 8000668:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800066c:	d1e4      	bne.n	8000638 <__cmpsf2+0x1c>
 800066e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000672:	d0e1      	beq.n	8000638 <__cmpsf2+0x1c>
 8000674:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000678:	4770      	bx	lr
 800067a:	bf00      	nop

0800067c <__aeabi_cfrcmple>:
 800067c:	4684      	mov	ip, r0
 800067e:	4608      	mov	r0, r1
 8000680:	4661      	mov	r1, ip
 8000682:	e7ff      	b.n	8000684 <__aeabi_cfcmpeq>

08000684 <__aeabi_cfcmpeq>:
 8000684:	b50f      	push	{r0, r1, r2, r3, lr}
 8000686:	f7ff ffc9 	bl	800061c <__cmpsf2>
 800068a:	2800      	cmp	r0, #0
 800068c:	bf48      	it	mi
 800068e:	f110 0f00 	cmnmi.w	r0, #0
 8000692:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000694 <__aeabi_fcmpeq>:
 8000694:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000698:	f7ff fff4 	bl	8000684 <__aeabi_cfcmpeq>
 800069c:	bf0c      	ite	eq
 800069e:	2001      	moveq	r0, #1
 80006a0:	2000      	movne	r0, #0
 80006a2:	f85d fb08 	ldr.w	pc, [sp], #8
 80006a6:	bf00      	nop

080006a8 <__aeabi_fcmplt>:
 80006a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006ac:	f7ff ffea 	bl	8000684 <__aeabi_cfcmpeq>
 80006b0:	bf34      	ite	cc
 80006b2:	2001      	movcc	r0, #1
 80006b4:	2000      	movcs	r0, #0
 80006b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80006ba:	bf00      	nop

080006bc <__aeabi_fcmple>:
 80006bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006c0:	f7ff ffe0 	bl	8000684 <__aeabi_cfcmpeq>
 80006c4:	bf94      	ite	ls
 80006c6:	2001      	movls	r0, #1
 80006c8:	2000      	movhi	r0, #0
 80006ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80006ce:	bf00      	nop

080006d0 <__aeabi_fcmpge>:
 80006d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006d4:	f7ff ffd2 	bl	800067c <__aeabi_cfrcmple>
 80006d8:	bf94      	ite	ls
 80006da:	2001      	movls	r0, #1
 80006dc:	2000      	movhi	r0, #0
 80006de:	f85d fb08 	ldr.w	pc, [sp], #8
 80006e2:	bf00      	nop

080006e4 <__aeabi_fcmpgt>:
 80006e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006e8:	f7ff ffc8 	bl	800067c <__aeabi_cfrcmple>
 80006ec:	bf34      	ite	cc
 80006ee:	2001      	movcc	r0, #1
 80006f0:	2000      	movcs	r0, #0
 80006f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80006f6:	bf00      	nop

080006f8 <RingAdd>:
 80006f8:	b480      	push	{r7}
 80006fa:	b083      	sub	sp, #12
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
 8000700:	460b      	mov	r3, r1
 8000702:	70fb      	strb	r3, [r7, #3]
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 800070a:	4619      	mov	r1, r3
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	78fa      	ldrb	r2, [r7, #3]
 8000710:	545a      	strb	r2, [r3, r1]
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8000718:	3301      	adds	r3, #1
 800071a:	425a      	negs	r2, r3
 800071c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000720:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8000724:	bf58      	it	pl
 8000726:	4253      	negpl	r3, r2
 8000728:	b2da      	uxtb	r2, r3
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8000736:	2b80      	cmp	r3, #128	; 0x80
 8000738:	d113      	bne.n	8000762 <RingAdd+0x6a>
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	2201      	movs	r2, #1
 800073e:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8000748:	3301      	adds	r3, #1
 800074a:	425a      	negs	r2, r3
 800074c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000750:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8000754:	bf58      	it	pl
 8000756:	4253      	negpl	r3, r2
 8000758:	b2da      	uxtb	r2, r3
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8000760:	e00b      	b.n	800077a <RingAdd+0x82>
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	2200      	movs	r2, #0
 8000766:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8000770:	3301      	adds	r3, #1
 8000772:	b2da      	uxtb	r2, r3
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 800077a:	bf00      	nop
 800077c:	370c      	adds	r7, #12
 800077e:	46bd      	mov	sp, r7
 8000780:	bc80      	pop	{r7}
 8000782:	4770      	bx	lr

08000784 <RingGetAllBytes>:
 8000784:	b580      	push	{r7, lr}
 8000786:	b082      	sub	sp, #8
 8000788:	af00      	add	r7, sp, #0
 800078a:	6078      	str	r0, [r7, #4]
 800078c:	6039      	str	r1, [r7, #0]
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8000794:	461a      	mov	r2, r3
 8000796:	6839      	ldr	r1, [r7, #0]
 8000798:	6878      	ldr	r0, [r7, #4]
 800079a:	f000 f805 	bl	80007a8 <RingGetNBytes>
 800079e:	4603      	mov	r3, r0
 80007a0:	4618      	mov	r0, r3
 80007a2:	3708      	adds	r7, #8
 80007a4:	46bd      	mov	sp, r7
 80007a6:	bd80      	pop	{r7, pc}

080007a8 <RingGetNBytes>:
 80007a8:	b580      	push	{r7, lr}
 80007aa:	b086      	sub	sp, #24
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	60f8      	str	r0, [r7, #12]
 80007b0:	60b9      	str	r1, [r7, #8]
 80007b2:	4613      	mov	r3, r2
 80007b4:	71fb      	strb	r3, [r7, #7]
 80007b6:	68fb      	ldr	r3, [r7, #12]
 80007b8:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 80007bc:	2b00      	cmp	r3, #0
 80007be:	d002      	beq.n	80007c6 <RingGetNBytes+0x1e>
 80007c0:	79fb      	ldrb	r3, [r7, #7]
 80007c2:	2b00      	cmp	r3, #0
 80007c4:	d101      	bne.n	80007ca <RingGetNBytes+0x22>
 80007c6:	2300      	movs	r3, #0
 80007c8:	e03e      	b.n	8000848 <RingGetNBytes+0xa0>
 80007ca:	79fb      	ldrb	r3, [r7, #7]
 80007cc:	2b80      	cmp	r3, #128	; 0x80
 80007ce:	d901      	bls.n	80007d4 <RingGetNBytes+0x2c>
 80007d0:	2300      	movs	r3, #0
 80007d2:	e039      	b.n	8000848 <RingGetNBytes+0xa0>
 80007d4:	2300      	movs	r3, #0
 80007d6:	75fb      	strb	r3, [r7, #23]
 80007d8:	e01b      	b.n	8000812 <RingGetNBytes+0x6a>
 80007da:	68fb      	ldr	r3, [r7, #12]
 80007dc:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80007e0:	4619      	mov	r1, r3
 80007e2:	7dfb      	ldrb	r3, [r7, #23]
 80007e4:	68ba      	ldr	r2, [r7, #8]
 80007e6:	4413      	add	r3, r2
 80007e8:	68fa      	ldr	r2, [r7, #12]
 80007ea:	5c52      	ldrb	r2, [r2, r1]
 80007ec:	701a      	strb	r2, [r3, #0]
 80007ee:	68fb      	ldr	r3, [r7, #12]
 80007f0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80007f4:	3301      	adds	r3, #1
 80007f6:	425a      	negs	r2, r3
 80007f8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80007fc:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8000800:	bf58      	it	pl
 8000802:	4253      	negpl	r3, r2
 8000804:	b2da      	uxtb	r2, r3
 8000806:	68fb      	ldr	r3, [r7, #12]
 8000808:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800080c:	7dfb      	ldrb	r3, [r7, #23]
 800080e:	3301      	adds	r3, #1
 8000810:	75fb      	strb	r3, [r7, #23]
 8000812:	7dfa      	ldrb	r2, [r7, #23]
 8000814:	79fb      	ldrb	r3, [r7, #7]
 8000816:	429a      	cmp	r2, r3
 8000818:	d205      	bcs.n	8000826 <RingGetNBytes+0x7e>
 800081a:	68fb      	ldr	r3, [r7, #12]
 800081c:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8000820:	7dfa      	ldrb	r2, [r7, #23]
 8000822:	429a      	cmp	r2, r3
 8000824:	d3d9      	bcc.n	80007da <RingGetNBytes+0x32>
 8000826:	68fb      	ldr	r3, [r7, #12]
 8000828:	f893 2082 	ldrb.w	r2, [r3, #130]	; 0x82
 800082c:	7dfb      	ldrb	r3, [r7, #23]
 800082e:	1ad3      	subs	r3, r2, r3
 8000830:	b2da      	uxtb	r2, r3
 8000832:	68fb      	ldr	r3, [r7, #12]
 8000834:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 8000838:	68fb      	ldr	r3, [r7, #12]
 800083a:	2200      	movs	r2, #0
 800083c:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8000840:	68f8      	ldr	r0, [r7, #12]
 8000842:	f000 f805 	bl	8000850 <RingClear>
 8000846:	7dfb      	ldrb	r3, [r7, #23]
 8000848:	4618      	mov	r0, r3
 800084a:	3718      	adds	r7, #24
 800084c:	46bd      	mov	sp, r7
 800084e:	bd80      	pop	{r7, pc}

08000850 <RingClear>:
 8000850:	b480      	push	{r7}
 8000852:	b083      	sub	sp, #12
 8000854:	af00      	add	r7, sp, #0
 8000856:	6078      	str	r0, [r7, #4]
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	2200      	movs	r2, #0
 800085c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	2200      	movs	r2, #0
 8000864:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	2200      	movs	r2, #0
 800086c:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 8000870:	687b      	ldr	r3, [r7, #4]
 8000872:	2200      	movs	r2, #0
 8000874:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8000878:	bf00      	nop
 800087a:	370c      	adds	r7, #12
 800087c:	46bd      	mov	sp, r7
 800087e:	bc80      	pop	{r7}
 8000880:	4770      	bx	lr
	...

08000884 <ModbusInit>:
 8000884:	b580      	push	{r7, lr}
 8000886:	b084      	sub	sp, #16
 8000888:	af02      	add	r7, sp, #8
 800088a:	6078      	str	r0, [r7, #4]
 800088c:	4b42      	ldr	r3, [pc, #264]	; (8000998 <ModbusInit+0x114>)
 800088e:	781b      	ldrb	r3, [r3, #0]
 8000890:	2b01      	cmp	r3, #1
 8000892:	d87d      	bhi.n	8000990 <ModbusInit+0x10c>
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	33bc      	adds	r3, #188	; 0xbc
 8000898:	4618      	mov	r0, r3
 800089a:	f7ff ffd9 	bl	8000850 <RingClear>
 800089e:	687b      	ldr	r3, [r7, #4]
 80008a0:	781b      	ldrb	r3, [r3, #0]
 80008a2:	2b03      	cmp	r3, #3
 80008a4:	d109      	bne.n	80008ba <ModbusInit+0x36>
 80008a6:	4a3d      	ldr	r2, [pc, #244]	; (800099c <ModbusInit+0x118>)
 80008a8:	6879      	ldr	r1, [r7, #4]
 80008aa:	483d      	ldr	r0, [pc, #244]	; (80009a0 <ModbusInit+0x11c>)
 80008ac:	f005 fd5c 	bl	8006368 <osThreadNew>
 80008b0:	4602      	mov	r2, r0
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 80008b8:	e033      	b.n	8000922 <ModbusInit+0x9e>
 80008ba:	687b      	ldr	r3, [r7, #4]
 80008bc:	781b      	ldrb	r3, [r3, #0]
 80008be:	2b04      	cmp	r3, #4
 80008c0:	d12e      	bne.n	8000920 <ModbusInit+0x9c>
 80008c2:	4a38      	ldr	r2, [pc, #224]	; (80009a4 <ModbusInit+0x120>)
 80008c4:	6879      	ldr	r1, [r7, #4]
 80008c6:	4838      	ldr	r0, [pc, #224]	; (80009a8 <ModbusInit+0x124>)
 80008c8:	f005 fd4e 	bl	8006368 <osThreadNew>
 80008cc:	4602      	mov	r2, r0
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 80008da:	4619      	mov	r1, r3
 80008dc:	687b      	ldr	r3, [r7, #4]
 80008de:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80008e2:	4a32      	ldr	r2, [pc, #200]	; (80009ac <ModbusInit+0x128>)
 80008e4:	9200      	str	r2, [sp, #0]
 80008e6:	2200      	movs	r2, #0
 80008e8:	4831      	ldr	r0, [pc, #196]	; (80009b0 <ModbusInit+0x12c>)
 80008ea:	f008 fa17 	bl	8008d1c <xTimerCreate>
 80008ee:	4602      	mov	r2, r0
 80008f0:	687b      	ldr	r3, [r7, #4]
 80008f2:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80008fc:	2b00      	cmp	r3, #0
 80008fe:	d100      	bne.n	8000902 <ModbusInit+0x7e>
 8000900:	e7fe      	b.n	8000900 <ModbusInit+0x7c>
 8000902:	4a2c      	ldr	r2, [pc, #176]	; (80009b4 <ModbusInit+0x130>)
 8000904:	2110      	movs	r1, #16
 8000906:	2002      	movs	r0, #2
 8000908:	f005 fea2 	bl	8006650 <osMessageQueueNew>
 800090c:	4602      	mov	r2, r0
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800091a:	2b00      	cmp	r3, #0
 800091c:	d101      	bne.n	8000922 <ModbusInit+0x9e>
 800091e:	e7fe      	b.n	800091e <ModbusInit+0x9a>
 8000920:	e7fe      	b.n	8000920 <ModbusInit+0x9c>
 8000922:	687b      	ldr	r3, [r7, #4]
 8000924:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8000928:	2b00      	cmp	r3, #0
 800092a:	d100      	bne.n	800092e <ModbusInit+0xaa>
 800092c:	e7fe      	b.n	800092c <ModbusInit+0xa8>
 800092e:	687b      	ldr	r3, [r7, #4]
 8000930:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000934:	4a20      	ldr	r2, [pc, #128]	; (80009b8 <ModbusInit+0x134>)
 8000936:	9200      	str	r2, [sp, #0]
 8000938:	2200      	movs	r2, #0
 800093a:	2105      	movs	r1, #5
 800093c:	481f      	ldr	r0, [pc, #124]	; (80009bc <ModbusInit+0x138>)
 800093e:	f008 f9ed 	bl	8008d1c <xTimerCreate>
 8000942:	4602      	mov	r2, r0
 8000944:	687b      	ldr	r3, [r7, #4]
 8000946:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000950:	2b00      	cmp	r3, #0
 8000952:	d100      	bne.n	8000956 <ModbusInit+0xd2>
 8000954:	e7fe      	b.n	8000954 <ModbusInit+0xd0>
 8000956:	4a1a      	ldr	r2, [pc, #104]	; (80009c0 <ModbusInit+0x13c>)
 8000958:	2101      	movs	r1, #1
 800095a:	2001      	movs	r0, #1
 800095c:	f005 fddc 	bl	8006518 <osSemaphoreNew>
 8000960:	4602      	mov	r2, r0
 8000962:	687b      	ldr	r3, [r7, #4]
 8000964:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 8000968:	687b      	ldr	r3, [r7, #4]
 800096a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800096e:	2b00      	cmp	r3, #0
 8000970:	d100      	bne.n	8000974 <ModbusInit+0xf0>
 8000972:	e7fe      	b.n	8000972 <ModbusInit+0xee>
 8000974:	4b08      	ldr	r3, [pc, #32]	; (8000998 <ModbusInit+0x114>)
 8000976:	781b      	ldrb	r3, [r3, #0]
 8000978:	4619      	mov	r1, r3
 800097a:	4a12      	ldr	r2, [pc, #72]	; (80009c4 <ModbusInit+0x140>)
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8000982:	4b05      	ldr	r3, [pc, #20]	; (8000998 <ModbusInit+0x114>)
 8000984:	781b      	ldrb	r3, [r3, #0]
 8000986:	3301      	adds	r3, #1
 8000988:	b2da      	uxtb	r2, r3
 800098a:	4b03      	ldr	r3, [pc, #12]	; (8000998 <ModbusInit+0x114>)
 800098c:	701a      	strb	r2, [r3, #0]
 800098e:	e000      	b.n	8000992 <ModbusInit+0x10e>
 8000990:	e7fe      	b.n	8000990 <ModbusInit+0x10c>
 8000992:	3708      	adds	r7, #8
 8000994:	46bd      	mov	sp, r7
 8000996:	bd80      	pop	{r7, pc}
 8000998:	200000bc 	.word	0x200000bc
 800099c:	0800a184 	.word	0x0800a184
 80009a0:	08000bb1 	.word	0x08000bb1
 80009a4:	0800a1a8 	.word	0x0800a1a8
 80009a8:	08001025 	.word	0x08001025
 80009ac:	08000b55 	.word	0x08000b55
 80009b0:	0800a0d8 	.word	0x0800a0d8
 80009b4:	0800a16c 	.word	0x0800a16c
 80009b8:	08000ad1 	.word	0x08000ad1
 80009bc:	0800a0e8 	.word	0x0800a0e8
 80009c0:	0800a1cc 	.word	0x0800a1cc
 80009c4:	20000dd8 	.word	0x20000dd8

080009c8 <ModbusStart>:
 80009c8:	b580      	push	{r7, lr}
 80009ca:	b082      	sub	sp, #8
 80009cc:	af00      	add	r7, sp, #0
 80009ce:	6078      	str	r0, [r7, #4]
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 80009d6:	2b01      	cmp	r3, #1
 80009d8:	d00f      	beq.n	80009fa <ModbusStart+0x32>
 80009da:	687b      	ldr	r3, [r7, #4]
 80009dc:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 80009e0:	2b03      	cmp	r3, #3
 80009e2:	d00a      	beq.n	80009fa <ModbusStart+0x32>
 80009e4:	687b      	ldr	r3, [r7, #4]
 80009e6:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 80009ea:	2b02      	cmp	r3, #2
 80009ec:	d005      	beq.n	80009fa <ModbusStart+0x32>
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 80009f4:	2b04      	cmp	r3, #4
 80009f6:	d000      	beq.n	80009fa <ModbusStart+0x32>
 80009f8:	e7fe      	b.n	80009f8 <ModbusStart+0x30>
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 8000a00:	2b04      	cmp	r3, #4
 8000a02:	d100      	bne.n	8000a06 <ModbusStart+0x3e>
 8000a04:	e7fe      	b.n	8000a04 <ModbusStart+0x3c>
 8000a06:	687b      	ldr	r3, [r7, #4]
 8000a08:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 8000a0c:	2b01      	cmp	r3, #1
 8000a0e:	d004      	beq.n	8000a1a <ModbusStart+0x52>
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 8000a16:	2b04      	cmp	r3, #4
 8000a18:	d13c      	bne.n	8000a94 <ModbusStart+0xcc>
 8000a1a:	687b      	ldr	r3, [r7, #4]
 8000a1c:	68db      	ldr	r3, [r3, #12]
 8000a1e:	2b00      	cmp	r3, #0
 8000a20:	d007      	beq.n	8000a32 <ModbusStart+0x6a>
 8000a22:	687b      	ldr	r3, [r7, #4]
 8000a24:	68d8      	ldr	r0, [r3, #12]
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	8a1b      	ldrh	r3, [r3, #16]
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	f003 f9b1 	bl	8003d94 <HAL_GPIO_WritePin>
 8000a32:	687b      	ldr	r3, [r7, #4]
 8000a34:	781b      	ldrb	r3, [r3, #0]
 8000a36:	2b03      	cmp	r3, #3
 8000a38:	d105      	bne.n	8000a46 <ModbusStart+0x7e>
 8000a3a:	687b      	ldr	r3, [r7, #4]
 8000a3c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8000a40:	2b00      	cmp	r3, #0
 8000a42:	d100      	bne.n	8000a46 <ModbusStart+0x7e>
 8000a44:	e7fe      	b.n	8000a44 <ModbusStart+0x7c>
 8000a46:	bf00      	nop
 8000a48:	687b      	ldr	r3, [r7, #4]
 8000a4a:	685b      	ldr	r3, [r3, #4]
 8000a4c:	4618      	mov	r0, r3
 8000a4e:	f005 f9d8 	bl	8005e02 <HAL_UART_GetState>
 8000a52:	4603      	mov	r3, r0
 8000a54:	2b20      	cmp	r3, #32
 8000a56:	d1f7      	bne.n	8000a48 <ModbusStart+0x80>
 8000a58:	687b      	ldr	r3, [r7, #4]
 8000a5a:	6858      	ldr	r0, [r3, #4]
 8000a5c:	687b      	ldr	r3, [r7, #4]
 8000a5e:	33a6      	adds	r3, #166	; 0xa6
 8000a60:	2201      	movs	r2, #1
 8000a62:	4619      	mov	r1, r3
 8000a64:	f004 ff06 	bl	8005874 <HAL_UART_Receive_IT>
 8000a68:	4603      	mov	r3, r0
 8000a6a:	2b00      	cmp	r3, #0
 8000a6c:	d000      	beq.n	8000a70 <ModbusStart+0xa8>
 8000a6e:	e7fe      	b.n	8000a6e <ModbusStart+0xa6>
 8000a70:	687b      	ldr	r3, [r7, #4]
 8000a72:	7a1b      	ldrb	r3, [r3, #8]
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d004      	beq.n	8000a82 <ModbusStart+0xba>
 8000a78:	687b      	ldr	r3, [r7, #4]
 8000a7a:	781b      	ldrb	r3, [r3, #0]
 8000a7c:	2b04      	cmp	r3, #4
 8000a7e:	d100      	bne.n	8000a82 <ModbusStart+0xba>
 8000a80:	e7fe      	b.n	8000a80 <ModbusStart+0xb8>
 8000a82:	687b      	ldr	r3, [r7, #4]
 8000a84:	7a1b      	ldrb	r3, [r3, #8]
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	d104      	bne.n	8000a94 <ModbusStart+0xcc>
 8000a8a:	687b      	ldr	r3, [r7, #4]
 8000a8c:	781b      	ldrb	r3, [r3, #0]
 8000a8e:	2b03      	cmp	r3, #3
 8000a90:	d100      	bne.n	8000a94 <ModbusStart+0xcc>
 8000a92:	e7fe      	b.n	8000a92 <ModbusStart+0xca>
 8000a94:	687b      	ldr	r3, [r7, #4]
 8000a96:	2200      	movs	r2, #0
 8000a98:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000a9c:	687b      	ldr	r3, [r7, #4]
 8000a9e:	f893 2093 	ldrb.w	r2, [r3, #147]	; 0x93
 8000aa2:	687b      	ldr	r3, [r7, #4]
 8000aa4:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 8000aa8:	687b      	ldr	r3, [r7, #4]
 8000aaa:	2200      	movs	r2, #0
 8000aac:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 8000ab0:	687b      	ldr	r3, [r7, #4]
 8000ab2:	f8b3 20a0 	ldrh.w	r2, [r3, #160]	; 0xa0
 8000ab6:	687b      	ldr	r3, [r7, #4]
 8000ab8:	f8a3 209e 	strh.w	r2, [r3, #158]	; 0x9e
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	f8b3 209e 	ldrh.w	r2, [r3, #158]	; 0x9e
 8000ac2:	687b      	ldr	r3, [r7, #4]
 8000ac4:	f8a3 209c 	strh.w	r2, [r3, #156]	; 0x9c
 8000ac8:	bf00      	nop
 8000aca:	3708      	adds	r7, #8
 8000acc:	46bd      	mov	sp, r7
 8000ace:	bd80      	pop	{r7, pc}

08000ad0 <vTimerCallbackT35>:
 8000ad0:	b580      	push	{r7, lr}
 8000ad2:	b086      	sub	sp, #24
 8000ad4:	af02      	add	r7, sp, #8
 8000ad6:	6078      	str	r0, [r7, #4]
 8000ad8:	2300      	movs	r3, #0
 8000ada:	60fb      	str	r3, [r7, #12]
 8000adc:	e02a      	b.n	8000b34 <vTimerCallbackT35+0x64>
 8000ade:	4a1b      	ldr	r2, [pc, #108]	; (8000b4c <vTimerCallbackT35+0x7c>)
 8000ae0:	68fb      	ldr	r3, [r7, #12]
 8000ae2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000ae6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8000aea:	687a      	ldr	r2, [r7, #4]
 8000aec:	429a      	cmp	r2, r3
 8000aee:	d11e      	bne.n	8000b2e <vTimerCallbackT35+0x5e>
 8000af0:	4a16      	ldr	r2, [pc, #88]	; (8000b4c <vTimerCallbackT35+0x7c>)
 8000af2:	68fb      	ldr	r3, [r7, #12]
 8000af4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000af8:	781b      	ldrb	r3, [r3, #0]
 8000afa:	2b04      	cmp	r3, #4
 8000afc:	d10c      	bne.n	8000b18 <vTimerCallbackT35+0x48>
 8000afe:	4a13      	ldr	r2, [pc, #76]	; (8000b4c <vTimerCallbackT35+0x7c>)
 8000b00:	68fb      	ldr	r3, [r7, #12]
 8000b02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b06:	f8d3 00b4 	ldr.w	r0, [r3, #180]	; 0xb4
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	9300      	str	r3, [sp, #0]
 8000b0e:	2300      	movs	r3, #0
 8000b10:	2200      	movs	r2, #0
 8000b12:	2103      	movs	r1, #3
 8000b14:	f008 f956 	bl	8008dc4 <xTimerGenericCommand>
 8000b18:	4a0c      	ldr	r2, [pc, #48]	; (8000b4c <vTimerCallbackT35+0x7c>)
 8000b1a:	68fb      	ldr	r3, [r7, #12]
 8000b1c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b20:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
 8000b24:	2300      	movs	r3, #0
 8000b26:	2203      	movs	r2, #3
 8000b28:	2100      	movs	r1, #0
 8000b2a:	f007 feed 	bl	8008908 <xTaskGenericNotify>
 8000b2e:	68fb      	ldr	r3, [r7, #12]
 8000b30:	3301      	adds	r3, #1
 8000b32:	60fb      	str	r3, [r7, #12]
 8000b34:	4b06      	ldr	r3, [pc, #24]	; (8000b50 <vTimerCallbackT35+0x80>)
 8000b36:	781b      	ldrb	r3, [r3, #0]
 8000b38:	461a      	mov	r2, r3
 8000b3a:	68fb      	ldr	r3, [r7, #12]
 8000b3c:	4293      	cmp	r3, r2
 8000b3e:	dbce      	blt.n	8000ade <vTimerCallbackT35+0xe>
 8000b40:	bf00      	nop
 8000b42:	bf00      	nop
 8000b44:	3710      	adds	r7, #16
 8000b46:	46bd      	mov	sp, r7
 8000b48:	bd80      	pop	{r7, pc}
 8000b4a:	bf00      	nop
 8000b4c:	20000dd8 	.word	0x20000dd8
 8000b50:	200000bc 	.word	0x200000bc

08000b54 <vTimerCallbackTimeout>:
 8000b54:	b580      	push	{r7, lr}
 8000b56:	b084      	sub	sp, #16
 8000b58:	af00      	add	r7, sp, #0
 8000b5a:	6078      	str	r0, [r7, #4]
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	60fb      	str	r3, [r7, #12]
 8000b60:	e017      	b.n	8000b92 <vTimerCallbackTimeout+0x3e>
 8000b62:	4a11      	ldr	r2, [pc, #68]	; (8000ba8 <vTimerCallbackTimeout+0x54>)
 8000b64:	68fb      	ldr	r3, [r7, #12]
 8000b66:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b6a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8000b6e:	687a      	ldr	r2, [r7, #4]
 8000b70:	429a      	cmp	r2, r3
 8000b72:	d10b      	bne.n	8000b8c <vTimerCallbackTimeout+0x38>
 8000b74:	4a0c      	ldr	r2, [pc, #48]	; (8000ba8 <vTimerCallbackTimeout+0x54>)
 8000b76:	68fb      	ldr	r3, [r7, #12]
 8000b78:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b7c:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
 8000b80:	2300      	movs	r3, #0
 8000b82:	2203      	movs	r2, #3
 8000b84:	f06f 0107 	mvn.w	r1, #7
 8000b88:	f007 febe 	bl	8008908 <xTaskGenericNotify>
 8000b8c:	68fb      	ldr	r3, [r7, #12]
 8000b8e:	3301      	adds	r3, #1
 8000b90:	60fb      	str	r3, [r7, #12]
 8000b92:	4b06      	ldr	r3, [pc, #24]	; (8000bac <vTimerCallbackTimeout+0x58>)
 8000b94:	781b      	ldrb	r3, [r3, #0]
 8000b96:	461a      	mov	r2, r3
 8000b98:	68fb      	ldr	r3, [r7, #12]
 8000b9a:	4293      	cmp	r3, r2
 8000b9c:	dbe1      	blt.n	8000b62 <vTimerCallbackTimeout+0xe>
 8000b9e:	bf00      	nop
 8000ba0:	bf00      	nop
 8000ba2:	3710      	adds	r7, #16
 8000ba4:	46bd      	mov	sp, r7
 8000ba6:	bd80      	pop	{r7, pc}
 8000ba8:	20000dd8 	.word	0x20000dd8
 8000bac:	200000bc 	.word	0x200000bc

08000bb0 <StartTaskModbusSlave>:
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	b084      	sub	sp, #16
 8000bb4:	af00      	add	r7, sp, #0
 8000bb6:	6078      	str	r0, [r7, #4]
 8000bb8:	687b      	ldr	r3, [r7, #4]
 8000bba:	60fb      	str	r3, [r7, #12]
 8000bbc:	68fb      	ldr	r3, [r7, #12]
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	749a      	strb	r2, [r3, #18]
 8000bc2:	68fb      	ldr	r3, [r7, #12]
 8000bc4:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 8000bc8:	2b01      	cmp	r3, #1
 8000bca:	d004      	beq.n	8000bd6 <StartTaskModbusSlave+0x26>
 8000bcc:	68fb      	ldr	r3, [r7, #12]
 8000bce:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 8000bd2:	2b04      	cmp	r3, #4
 8000bd4:	d117      	bne.n	8000c06 <StartTaskModbusSlave+0x56>
 8000bd6:	f04f 31ff 	mov.w	r1, #4294967295
 8000bda:	2001      	movs	r0, #1
 8000bdc:	f007 fe4c 	bl	8008878 <ulTaskNotifyTake>
 8000be0:	68f8      	ldr	r0, [r7, #12]
 8000be2:	f000 fbe9 	bl	80013b8 <getRxBuffer>
 8000be6:	4603      	mov	r3, r0
 8000be8:	f113 0f03 	cmn.w	r3, #3
 8000bec:	d10b      	bne.n	8000c06 <StartTaskModbusSlave+0x56>
 8000bee:	68fb      	ldr	r3, [r7, #12]
 8000bf0:	22fd      	movs	r2, #253	; 0xfd
 8000bf2:	749a      	strb	r2, [r3, #18]
 8000bf4:	68fb      	ldr	r3, [r7, #12]
 8000bf6:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 8000bfa:	3301      	adds	r3, #1
 8000bfc:	b29a      	uxth	r2, r3
 8000bfe:	68fb      	ldr	r3, [r7, #12]
 8000c00:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 8000c04:	e0a1      	b.n	8000d4a <StartTaskModbusSlave+0x19a>
 8000c06:	68fb      	ldr	r3, [r7, #12]
 8000c08:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000c0c:	2b06      	cmp	r3, #6
 8000c0e:	d80b      	bhi.n	8000c28 <StartTaskModbusSlave+0x78>
 8000c10:	68fb      	ldr	r3, [r7, #12]
 8000c12:	22fa      	movs	r2, #250	; 0xfa
 8000c14:	749a      	strb	r2, [r3, #18]
 8000c16:	68fb      	ldr	r3, [r7, #12]
 8000c18:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 8000c1c:	3301      	adds	r3, #1
 8000c1e:	b29a      	uxth	r2, r3
 8000c20:	68fb      	ldr	r3, [r7, #12]
 8000c22:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 8000c26:	e090      	b.n	8000d4a <StartTaskModbusSlave+0x19a>
 8000c28:	68fb      	ldr	r3, [r7, #12]
 8000c2a:	7cda      	ldrb	r2, [r3, #19]
 8000c2c:	68fb      	ldr	r3, [r7, #12]
 8000c2e:	7a1b      	ldrb	r3, [r3, #8]
 8000c30:	429a      	cmp	r2, r3
 8000c32:	f040 8089 	bne.w	8000d48 <StartTaskModbusSlave+0x198>
 8000c36:	68f8      	ldr	r0, [r7, #12]
 8000c38:	f000 fc08 	bl	800144c <validateRequest>
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	72fb      	strb	r3, [r7, #11]
 8000c40:	7afb      	ldrb	r3, [r7, #11]
 8000c42:	2b00      	cmp	r3, #0
 8000c44:	d00c      	beq.n	8000c60 <StartTaskModbusSlave+0xb0>
 8000c46:	7afb      	ldrb	r3, [r7, #11]
 8000c48:	68f9      	ldr	r1, [r7, #12]
 8000c4a:	4618      	mov	r0, r3
 8000c4c:	f000 fda0 	bl	8001790 <buildException>
 8000c50:	68f8      	ldr	r0, [r7, #12]
 8000c52:	f000 fdbb 	bl	80017cc <sendTxBuffer>
 8000c56:	f997 200b 	ldrsb.w	r2, [r7, #11]
 8000c5a:	68fb      	ldr	r3, [r7, #12]
 8000c5c:	749a      	strb	r2, [r3, #18]
 8000c5e:	e074      	b.n	8000d4a <StartTaskModbusSlave+0x19a>
 8000c60:	68fb      	ldr	r3, [r7, #12]
 8000c62:	2200      	movs	r2, #0
 8000c64:	749a      	strb	r2, [r3, #18]
 8000c66:	68fb      	ldr	r3, [r7, #12]
 8000c68:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8000c6c:	f04f 31ff 	mov.w	r1, #4294967295
 8000c70:	4618      	mov	r0, r3
 8000c72:	f006 fae7 	bl	8007244 <xQueueSemaphoreTake>
 8000c76:	68fb      	ldr	r3, [r7, #12]
 8000c78:	7d1b      	ldrb	r3, [r3, #20]
 8000c7a:	3b01      	subs	r3, #1
 8000c7c:	2b0f      	cmp	r3, #15
 8000c7e:	d859      	bhi.n	8000d34 <StartTaskModbusSlave+0x184>
 8000c80:	a201      	add	r2, pc, #4	; (adr r2, 8000c88 <StartTaskModbusSlave+0xd8>)
 8000c82:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c86:	bf00      	nop
 8000c88:	08000cc9 	.word	0x08000cc9
 8000c8c:	08000cc9 	.word	0x08000cc9
 8000c90:	08000cdb 	.word	0x08000cdb
 8000c94:	08000cdb 	.word	0x08000cdb
 8000c98:	08000ced 	.word	0x08000ced
 8000c9c:	08000cff 	.word	0x08000cff
 8000ca0:	08000d35 	.word	0x08000d35
 8000ca4:	08000d35 	.word	0x08000d35
 8000ca8:	08000d35 	.word	0x08000d35
 8000cac:	08000d35 	.word	0x08000d35
 8000cb0:	08000d35 	.word	0x08000d35
 8000cb4:	08000d35 	.word	0x08000d35
 8000cb8:	08000d35 	.word	0x08000d35
 8000cbc:	08000d35 	.word	0x08000d35
 8000cc0:	08000d11 	.word	0x08000d11
 8000cc4:	08000d23 	.word	0x08000d23
 8000cc8:	68f8      	ldr	r0, [r7, #12]
 8000cca:	f000 fe0f 	bl	80018ec <process_FC1>
 8000cce:	4603      	mov	r3, r0
 8000cd0:	461a      	mov	r2, r3
 8000cd2:	68fb      	ldr	r3, [r7, #12]
 8000cd4:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8000cd8:	e02d      	b.n	8000d36 <StartTaskModbusSlave+0x186>
 8000cda:	68f8      	ldr	r0, [r7, #12]
 8000cdc:	f000 febb 	bl	8001a56 <process_FC3>
 8000ce0:	4603      	mov	r3, r0
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	68fb      	ldr	r3, [r7, #12]
 8000ce6:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8000cea:	e024      	b.n	8000d36 <StartTaskModbusSlave+0x186>
 8000cec:	68f8      	ldr	r0, [r7, #12]
 8000cee:	f000 ff1d 	bl	8001b2c <process_FC5>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	68fb      	ldr	r3, [r7, #12]
 8000cf8:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8000cfc:	e01b      	b.n	8000d36 <StartTaskModbusSlave+0x186>
 8000cfe:	68f8      	ldr	r0, [r7, #12]
 8000d00:	f000 ff6d 	bl	8001bde <process_FC6>
 8000d04:	4603      	mov	r3, r0
 8000d06:	461a      	mov	r2, r3
 8000d08:	68fb      	ldr	r3, [r7, #12]
 8000d0a:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8000d0e:	e012      	b.n	8000d36 <StartTaskModbusSlave+0x186>
 8000d10:	68f8      	ldr	r0, [r7, #12]
 8000d12:	f000 ff96 	bl	8001c42 <process_FC15>
 8000d16:	4603      	mov	r3, r0
 8000d18:	461a      	mov	r2, r3
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8000d20:	e009      	b.n	8000d36 <StartTaskModbusSlave+0x186>
 8000d22:	68f8      	ldr	r0, [r7, #12]
 8000d24:	f001 f81b 	bl	8001d5e <process_FC16>
 8000d28:	4603      	mov	r3, r0
 8000d2a:	461a      	mov	r2, r3
 8000d2c:	68fb      	ldr	r3, [r7, #12]
 8000d2e:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8000d32:	e000      	b.n	8000d36 <StartTaskModbusSlave+0x186>
 8000d34:	bf00      	nop
 8000d36:	68fb      	ldr	r3, [r7, #12]
 8000d38:	f8d3 00b8 	ldr.w	r0, [r3, #184]	; 0xb8
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	2200      	movs	r2, #0
 8000d40:	2100      	movs	r1, #0
 8000d42:	f006 f809 	bl	8006d58 <xQueueGenericSend>
 8000d46:	e000      	b.n	8000d4a <StartTaskModbusSlave+0x19a>
 8000d48:	bf00      	nop
 8000d4a:	e737      	b.n	8000bbc <StartTaskModbusSlave+0xc>

08000d4c <SendQuery>:
 8000d4c:	b084      	sub	sp, #16
 8000d4e:	b580      	push	{r7, lr}
 8000d50:	b084      	sub	sp, #16
 8000d52:	af00      	add	r7, sp, #0
 8000d54:	6078      	str	r0, [r7, #4]
 8000d56:	f107 001c 	add.w	r0, r7, #28
 8000d5a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8000d5e:	2300      	movs	r3, #0
 8000d60:	73bb      	strb	r3, [r7, #14]
 8000d62:	687b      	ldr	r3, [r7, #4]
 8000d64:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8000d68:	f04f 31ff 	mov.w	r1, #4294967295
 8000d6c:	4618      	mov	r0, r3
 8000d6e:	f006 fa69 	bl	8007244 <xQueueSemaphoreTake>
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	7a1b      	ldrb	r3, [r3, #8]
 8000d76:	2b00      	cmp	r3, #0
 8000d78:	d001      	beq.n	8000d7e <SendQuery+0x32>
 8000d7a:	23ff      	movs	r3, #255	; 0xff
 8000d7c:	73bb      	strb	r3, [r7, #14]
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	f993 30a7 	ldrsb.w	r3, [r3, #167]	; 0xa7
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d001      	beq.n	8000d8c <SendQuery+0x40>
 8000d88:	23fe      	movs	r3, #254	; 0xfe
 8000d8a:	73bb      	strb	r3, [r7, #14]
 8000d8c:	7f3b      	ldrb	r3, [r7, #28]
 8000d8e:	2b00      	cmp	r3, #0
 8000d90:	d002      	beq.n	8000d98 <SendQuery+0x4c>
 8000d92:	7f3b      	ldrb	r3, [r7, #28]
 8000d94:	2bf7      	cmp	r3, #247	; 0xf7
 8000d96:	d901      	bls.n	8000d9c <SendQuery+0x50>
 8000d98:	23f7      	movs	r3, #247	; 0xf7
 8000d9a:	73bb      	strb	r3, [r7, #14]
 8000d9c:	7bbb      	ldrb	r3, [r7, #14]
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d00e      	beq.n	8000dc0 <SendQuery+0x74>
 8000da2:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	749a      	strb	r2, [r3, #18]
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	f8d3 00b8 	ldr.w	r0, [r3, #184]	; 0xb8
 8000db0:	2300      	movs	r3, #0
 8000db2:	2200      	movs	r2, #0
 8000db4:	2100      	movs	r1, #0
 8000db6:	f005 ffcf 	bl	8006d58 <xQueueGenericSend>
 8000dba:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8000dbe:	e129      	b.n	8001014 <SendQuery+0x2c8>
 8000dc0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000dc2:	687b      	ldr	r3, [r7, #4]
 8000dc4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8000dc8:	7f3a      	ldrb	r2, [r7, #28]
 8000dca:	687b      	ldr	r3, [r7, #4]
 8000dcc:	74da      	strb	r2, [r3, #19]
 8000dce:	7f7a      	ldrb	r2, [r7, #29]
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	751a      	strb	r2, [r3, #20]
 8000dd4:	8bfb      	ldrh	r3, [r7, #30]
 8000dd6:	0a1b      	lsrs	r3, r3, #8
 8000dd8:	b29b      	uxth	r3, r3
 8000dda:	b2da      	uxtb	r2, r3
 8000ddc:	687b      	ldr	r3, [r7, #4]
 8000dde:	755a      	strb	r2, [r3, #21]
 8000de0:	8bfb      	ldrh	r3, [r7, #30]
 8000de2:	b2da      	uxtb	r2, r3
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	759a      	strb	r2, [r3, #22]
 8000de8:	7f7b      	ldrb	r3, [r7, #29]
 8000dea:	3b01      	subs	r3, #1
 8000dec:	2b0f      	cmp	r3, #15
 8000dee:	f200 80fe 	bhi.w	8000fee <SendQuery+0x2a2>
 8000df2:	a201      	add	r2, pc, #4	; (adr r2, 8000df8 <SendQuery+0xac>)
 8000df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000df8:	08000e39 	.word	0x08000e39
 8000dfc:	08000e39 	.word	0x08000e39
 8000e00:	08000e39 	.word	0x08000e39
 8000e04:	08000e39 	.word	0x08000e39
 8000e08:	08000e57 	.word	0x08000e57
 8000e0c:	08000e79 	.word	0x08000e79
 8000e10:	08000fef 	.word	0x08000fef
 8000e14:	08000fef 	.word	0x08000fef
 8000e18:	08000fef 	.word	0x08000fef
 8000e1c:	08000fef 	.word	0x08000fef
 8000e20:	08000fef 	.word	0x08000fef
 8000e24:	08000fef 	.word	0x08000fef
 8000e28:	08000fef 	.word	0x08000fef
 8000e2c:	08000fef 	.word	0x08000fef
 8000e30:	08000e9b 	.word	0x08000e9b
 8000e34:	08000f59 	.word	0x08000f59
 8000e38:	8c3b      	ldrh	r3, [r7, #32]
 8000e3a:	0a1b      	lsrs	r3, r3, #8
 8000e3c:	b29b      	uxth	r3, r3
 8000e3e:	b2da      	uxtb	r2, r3
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	75da      	strb	r2, [r3, #23]
 8000e44:	8c3b      	ldrh	r3, [r7, #32]
 8000e46:	b2da      	uxtb	r2, r3
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	761a      	strb	r2, [r3, #24]
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	2206      	movs	r2, #6
 8000e50:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000e54:	e0cb      	b.n	8000fee <SendQuery+0x2a2>
 8000e56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e58:	881b      	ldrh	r3, [r3, #0]
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d001      	beq.n	8000e62 <SendQuery+0x116>
 8000e5e:	22ff      	movs	r2, #255	; 0xff
 8000e60:	e000      	b.n	8000e64 <SendQuery+0x118>
 8000e62:	2200      	movs	r2, #0
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	75da      	strb	r2, [r3, #23]
 8000e68:	687b      	ldr	r3, [r7, #4]
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	761a      	strb	r2, [r3, #24]
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	2206      	movs	r2, #6
 8000e72:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000e76:	e0ba      	b.n	8000fee <SendQuery+0x2a2>
 8000e78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e7a:	881b      	ldrh	r3, [r3, #0]
 8000e7c:	0a1b      	lsrs	r3, r3, #8
 8000e7e:	b29b      	uxth	r3, r3
 8000e80:	b2da      	uxtb	r2, r3
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	75da      	strb	r2, [r3, #23]
 8000e86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e88:	881b      	ldrh	r3, [r3, #0]
 8000e8a:	b2da      	uxtb	r2, r3
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	761a      	strb	r2, [r3, #24]
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	2206      	movs	r2, #6
 8000e94:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000e98:	e0a9      	b.n	8000fee <SendQuery+0x2a2>
 8000e9a:	8c3b      	ldrh	r3, [r7, #32]
 8000e9c:	091b      	lsrs	r3, r3, #4
 8000e9e:	b29b      	uxth	r3, r3
 8000ea0:	727b      	strb	r3, [r7, #9]
 8000ea2:	7a7b      	ldrb	r3, [r7, #9]
 8000ea4:	005b      	lsls	r3, r3, #1
 8000ea6:	73fb      	strb	r3, [r7, #15]
 8000ea8:	8c3b      	ldrh	r3, [r7, #32]
 8000eaa:	f003 030f 	and.w	r3, r3, #15
 8000eae:	b29b      	uxth	r3, r3
 8000eb0:	2b00      	cmp	r3, #0
 8000eb2:	d005      	beq.n	8000ec0 <SendQuery+0x174>
 8000eb4:	7bfb      	ldrb	r3, [r7, #15]
 8000eb6:	3301      	adds	r3, #1
 8000eb8:	73fb      	strb	r3, [r7, #15]
 8000eba:	7a7b      	ldrb	r3, [r7, #9]
 8000ebc:	3301      	adds	r3, #1
 8000ebe:	727b      	strb	r3, [r7, #9]
 8000ec0:	8c3b      	ldrh	r3, [r7, #32]
 8000ec2:	0a1b      	lsrs	r3, r3, #8
 8000ec4:	b29b      	uxth	r3, r3
 8000ec6:	b2da      	uxtb	r2, r3
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	75da      	strb	r2, [r3, #23]
 8000ecc:	8c3b      	ldrh	r3, [r7, #32]
 8000ece:	b2da      	uxtb	r2, r3
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	761a      	strb	r2, [r3, #24]
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	7bfa      	ldrb	r2, [r7, #15]
 8000ed8:	765a      	strb	r2, [r3, #25]
 8000eda:	687b      	ldr	r3, [r7, #4]
 8000edc:	2207      	movs	r2, #7
 8000ede:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	81bb      	strh	r3, [r7, #12]
 8000ee6:	e031      	b.n	8000f4c <SendQuery+0x200>
 8000ee8:	89bb      	ldrh	r3, [r7, #12]
 8000eea:	f003 0301 	and.w	r3, r3, #1
 8000eee:	b29b      	uxth	r3, r3
 8000ef0:	2b00      	cmp	r3, #0
 8000ef2:	d00f      	beq.n	8000f14 <SendQuery+0x1c8>
 8000ef4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000ef6:	89bb      	ldrh	r3, [r7, #12]
 8000ef8:	085b      	lsrs	r3, r3, #1
 8000efa:	b29b      	uxth	r3, r3
 8000efc:	005b      	lsls	r3, r3, #1
 8000efe:	4413      	add	r3, r2
 8000f00:	881a      	ldrh	r2, [r3, #0]
 8000f02:	687b      	ldr	r3, [r7, #4]
 8000f04:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000f08:	4619      	mov	r1, r3
 8000f0a:	b2d2      	uxtb	r2, r2
 8000f0c:	687b      	ldr	r3, [r7, #4]
 8000f0e:	440b      	add	r3, r1
 8000f10:	74da      	strb	r2, [r3, #19]
 8000f12:	e010      	b.n	8000f36 <SendQuery+0x1ea>
 8000f14:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000f16:	89bb      	ldrh	r3, [r7, #12]
 8000f18:	085b      	lsrs	r3, r3, #1
 8000f1a:	b29b      	uxth	r3, r3
 8000f1c:	005b      	lsls	r3, r3, #1
 8000f1e:	4413      	add	r3, r2
 8000f20:	881b      	ldrh	r3, [r3, #0]
 8000f22:	0a1b      	lsrs	r3, r3, #8
 8000f24:	b29a      	uxth	r2, r3
 8000f26:	687b      	ldr	r3, [r7, #4]
 8000f28:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000f2c:	4619      	mov	r1, r3
 8000f2e:	b2d2      	uxtb	r2, r2
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	440b      	add	r3, r1
 8000f34:	74da      	strb	r2, [r3, #19]
 8000f36:	687b      	ldr	r3, [r7, #4]
 8000f38:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000f3c:	3301      	adds	r3, #1
 8000f3e:	b2da      	uxtb	r2, r3
 8000f40:	687b      	ldr	r3, [r7, #4]
 8000f42:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000f46:	89bb      	ldrh	r3, [r7, #12]
 8000f48:	3301      	adds	r3, #1
 8000f4a:	81bb      	strh	r3, [r7, #12]
 8000f4c:	7bfb      	ldrb	r3, [r7, #15]
 8000f4e:	b29b      	uxth	r3, r3
 8000f50:	89ba      	ldrh	r2, [r7, #12]
 8000f52:	429a      	cmp	r2, r3
 8000f54:	d3c8      	bcc.n	8000ee8 <SendQuery+0x19c>
 8000f56:	e04a      	b.n	8000fee <SendQuery+0x2a2>
 8000f58:	8c3b      	ldrh	r3, [r7, #32]
 8000f5a:	0a1b      	lsrs	r3, r3, #8
 8000f5c:	b29b      	uxth	r3, r3
 8000f5e:	b2da      	uxtb	r2, r3
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	75da      	strb	r2, [r3, #23]
 8000f64:	8c3b      	ldrh	r3, [r7, #32]
 8000f66:	b2da      	uxtb	r2, r3
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	761a      	strb	r2, [r3, #24]
 8000f6c:	8c3b      	ldrh	r3, [r7, #32]
 8000f6e:	b2db      	uxtb	r3, r3
 8000f70:	005b      	lsls	r3, r3, #1
 8000f72:	b2da      	uxtb	r2, r3
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	765a      	strb	r2, [r3, #25]
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	2207      	movs	r2, #7
 8000f7c:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000f80:	2300      	movs	r3, #0
 8000f82:	817b      	strh	r3, [r7, #10]
 8000f84:	e02e      	b.n	8000fe4 <SendQuery+0x298>
 8000f86:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000f88:	897b      	ldrh	r3, [r7, #10]
 8000f8a:	005b      	lsls	r3, r3, #1
 8000f8c:	4413      	add	r3, r2
 8000f8e:	881b      	ldrh	r3, [r3, #0]
 8000f90:	0a1b      	lsrs	r3, r3, #8
 8000f92:	b29a      	uxth	r2, r3
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000f9a:	4619      	mov	r1, r3
 8000f9c:	b2d2      	uxtb	r2, r2
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	440b      	add	r3, r1
 8000fa2:	74da      	strb	r2, [r3, #19]
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000faa:	3301      	adds	r3, #1
 8000fac:	b2da      	uxtb	r2, r3
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000fb4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000fb6:	897b      	ldrh	r3, [r7, #10]
 8000fb8:	005b      	lsls	r3, r3, #1
 8000fba:	4413      	add	r3, r2
 8000fbc:	881a      	ldrh	r2, [r3, #0]
 8000fbe:	687b      	ldr	r3, [r7, #4]
 8000fc0:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000fc4:	4619      	mov	r1, r3
 8000fc6:	b2d2      	uxtb	r2, r2
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	440b      	add	r3, r1
 8000fcc:	74da      	strb	r2, [r3, #19]
 8000fce:	687b      	ldr	r3, [r7, #4]
 8000fd0:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8000fd4:	3301      	adds	r3, #1
 8000fd6:	b2da      	uxtb	r2, r3
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8000fde:	897b      	ldrh	r3, [r7, #10]
 8000fe0:	3301      	adds	r3, #1
 8000fe2:	817b      	strh	r3, [r7, #10]
 8000fe4:	8c3b      	ldrh	r3, [r7, #32]
 8000fe6:	897a      	ldrh	r2, [r7, #10]
 8000fe8:	429a      	cmp	r2, r3
 8000fea:	d3cc      	bcc.n	8000f86 <SendQuery+0x23a>
 8000fec:	bf00      	nop
 8000fee:	6878      	ldr	r0, [r7, #4]
 8000ff0:	f000 fbec 	bl	80017cc <sendTxBuffer>
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	f8d3 00b8 	ldr.w	r0, [r3, #184]	; 0xb8
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	2100      	movs	r1, #0
 8001000:	f005 feaa 	bl	8006d58 <xQueueGenericSend>
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	2201      	movs	r2, #1
 8001008:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	2200      	movs	r2, #0
 8001010:	749a      	strb	r2, [r3, #18]
 8001012:	2300      	movs	r3, #0
 8001014:	4618      	mov	r0, r3
 8001016:	3710      	adds	r7, #16
 8001018:	46bd      	mov	sp, r7
 800101a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800101e:	b004      	add	sp, #16
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop

08001024 <StartTaskModbusMaster>:
 8001024:	b580      	push	{r7, lr}
 8001026:	b08c      	sub	sp, #48	; 0x30
 8001028:	af02      	add	r7, sp, #8
 800102a:	6078      	str	r0, [r7, #4]
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	627b      	str	r3, [r7, #36]	; 0x24
 8001030:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001032:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8001036:	f107 010c 	add.w	r1, r7, #12
 800103a:	f04f 32ff 	mov.w	r2, #4294967295
 800103e:	4618      	mov	r0, r3
 8001040:	f006 f820 	bl	8007084 <xQueueReceive>
 8001044:	69bb      	ldr	r3, [r7, #24]
 8001046:	9300      	str	r3, [sp, #0]
 8001048:	f107 030c 	add.w	r3, r7, #12
 800104c:	cb0e      	ldmia	r3, {r1, r2, r3}
 800104e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8001050:	f7ff fe7c 	bl	8000d4c <SendQuery>
 8001054:	f04f 31ff 	mov.w	r1, #4294967295
 8001058:	2001      	movs	r0, #1
 800105a:	f007 fc0d 	bl	8008878 <ulTaskNotifyTake>
 800105e:	6238      	str	r0, [r7, #32]
 8001060:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001062:	2200      	movs	r2, #0
 8001064:	749a      	strb	r2, [r3, #18]
 8001066:	6a3b      	ldr	r3, [r7, #32]
 8001068:	2b00      	cmp	r3, #0
 800106a:	d018      	beq.n	800109e <StartTaskModbusMaster+0x7a>
 800106c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800106e:	2200      	movs	r2, #0
 8001070:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 8001074:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001076:	22f8      	movs	r2, #248	; 0xf8
 8001078:	749a      	strb	r2, [r3, #18]
 800107a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800107c:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 8001080:	3301      	adds	r3, #1
 8001082:	b29a      	uxth	r2, r3
 8001084:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001086:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 800108a:	69b8      	ldr	r0, [r7, #24]
 800108c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800108e:	f993 3012 	ldrsb.w	r3, [r3, #18]
 8001092:	4619      	mov	r1, r3
 8001094:	2300      	movs	r3, #0
 8001096:	2203      	movs	r2, #3
 8001098:	f007 fc36 	bl	8008908 <xTaskGenericNotify>
 800109c:	e097      	b.n	80011ce <StartTaskModbusMaster+0x1aa>
 800109e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80010a0:	f000 f98a 	bl	80013b8 <getRxBuffer>
 80010a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010a6:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80010aa:	2b05      	cmp	r3, #5
 80010ac:	d818      	bhi.n	80010e0 <StartTaskModbusMaster+0xbc>
 80010ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010b0:	2200      	movs	r2, #0
 80010b2:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 80010b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010b8:	22fa      	movs	r2, #250	; 0xfa
 80010ba:	749a      	strb	r2, [r3, #18]
 80010bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010be:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 80010c2:	3301      	adds	r3, #1
 80010c4:	b29a      	uxth	r2, r3
 80010c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010c8:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 80010cc:	69b8      	ldr	r0, [r7, #24]
 80010ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010d0:	f993 3012 	ldrsb.w	r3, [r3, #18]
 80010d4:	4619      	mov	r1, r3
 80010d6:	2300      	movs	r3, #0
 80010d8:	2203      	movs	r2, #3
 80010da:	f007 fc15 	bl	8008908 <xTaskGenericNotify>
 80010de:	e076      	b.n	80011ce <StartTaskModbusMaster+0x1aa>
 80010e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010e2:	f8d3 00b4 	ldr.w	r0, [r3, #180]	; 0xb4
 80010e6:	2300      	movs	r3, #0
 80010e8:	9300      	str	r3, [sp, #0]
 80010ea:	2300      	movs	r3, #0
 80010ec:	2200      	movs	r2, #0
 80010ee:	2103      	movs	r1, #3
 80010f0:	f007 fe68 	bl	8008dc4 <xTimerGenericCommand>
 80010f4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80010f6:	f000 f8f1 	bl	80012dc <validateAnswer>
 80010fa:	4603      	mov	r3, r0
 80010fc:	77fb      	strb	r3, [r7, #31]
 80010fe:	f997 301f 	ldrsb.w	r3, [r7, #31]
 8001102:	2b00      	cmp	r3, #0
 8001104:	d010      	beq.n	8001128 <StartTaskModbusMaster+0x104>
 8001106:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001108:	2200      	movs	r2, #0
 800110a:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 800110e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001110:	7ffa      	ldrb	r2, [r7, #31]
 8001112:	749a      	strb	r2, [r3, #18]
 8001114:	69b8      	ldr	r0, [r7, #24]
 8001116:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001118:	f993 3012 	ldrsb.w	r3, [r3, #18]
 800111c:	4619      	mov	r1, r3
 800111e:	2300      	movs	r3, #0
 8001120:	2203      	movs	r2, #3
 8001122:	f007 fbf1 	bl	8008908 <xTaskGenericNotify>
 8001126:	e052      	b.n	80011ce <StartTaskModbusMaster+0x1aa>
 8001128:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800112a:	7ffa      	ldrb	r2, [r7, #31]
 800112c:	749a      	strb	r2, [r3, #18]
 800112e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001130:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8001134:	f04f 31ff 	mov.w	r1, #4294967295
 8001138:	4618      	mov	r0, r3
 800113a:	f006 f883 	bl	8007244 <xQueueSemaphoreTake>
 800113e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001140:	7d1b      	ldrb	r3, [r3, #20]
 8001142:	3b01      	subs	r3, #1
 8001144:	2b0f      	cmp	r3, #15
 8001146:	d82b      	bhi.n	80011a0 <StartTaskModbusMaster+0x17c>
 8001148:	a201      	add	r2, pc, #4	; (adr r2, 8001150 <StartTaskModbusMaster+0x12c>)
 800114a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800114e:	bf00      	nop
 8001150:	08001191 	.word	0x08001191
 8001154:	08001191 	.word	0x08001191
 8001158:	08001199 	.word	0x08001199
 800115c:	08001199 	.word	0x08001199
 8001160:	080011a1 	.word	0x080011a1
 8001164:	080011a1 	.word	0x080011a1
 8001168:	080011a1 	.word	0x080011a1
 800116c:	080011a1 	.word	0x080011a1
 8001170:	080011a1 	.word	0x080011a1
 8001174:	080011a1 	.word	0x080011a1
 8001178:	080011a1 	.word	0x080011a1
 800117c:	080011a1 	.word	0x080011a1
 8001180:	080011a1 	.word	0x080011a1
 8001184:	080011a1 	.word	0x080011a1
 8001188:	080011a1 	.word	0x080011a1
 800118c:	080011a1 	.word	0x080011a1
 8001190:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8001192:	f000 f81d 	bl	80011d0 <get_FC1>
 8001196:	e004      	b.n	80011a2 <StartTaskModbusMaster+0x17e>
 8001198:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800119a:	f000 f870 	bl	800127e <get_FC3>
 800119e:	e000      	b.n	80011a2 <StartTaskModbusMaster+0x17e>
 80011a0:	bf00      	nop
 80011a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011a4:	2200      	movs	r2, #0
 80011a6:	f883 20a7 	strb.w	r2, [r3, #167]	; 0xa7
 80011aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011ac:	f8d3 00b8 	ldr.w	r0, [r3, #184]	; 0xb8
 80011b0:	2300      	movs	r3, #0
 80011b2:	2200      	movs	r2, #0
 80011b4:	2100      	movs	r1, #0
 80011b6:	f005 fdcf 	bl	8006d58 <xQueueGenericSend>
 80011ba:	69b8      	ldr	r0, [r7, #24]
 80011bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011be:	f993 3012 	ldrsb.w	r3, [r3, #18]
 80011c2:	4619      	mov	r1, r3
 80011c4:	2300      	movs	r3, #0
 80011c6:	2203      	movs	r2, #3
 80011c8:	f007 fb9e 	bl	8008908 <xTaskGenericNotify>
 80011cc:	bf00      	nop
 80011ce:	e72f      	b.n	8001030 <StartTaskModbusMaster+0xc>

080011d0 <get_FC1>:
 80011d0:	b590      	push	{r4, r7, lr}
 80011d2:	b085      	sub	sp, #20
 80011d4:	af00      	add	r7, sp, #0
 80011d6:	6078      	str	r0, [r7, #4]
 80011d8:	2303      	movs	r3, #3
 80011da:	73bb      	strb	r3, [r7, #14]
 80011dc:	2300      	movs	r3, #0
 80011de:	73fb      	strb	r3, [r7, #15]
 80011e0:	e043      	b.n	800126a <get_FC1+0x9a>
 80011e2:	7bfb      	ldrb	r3, [r7, #15]
 80011e4:	f003 0301 	and.w	r3, r3, #1
 80011e8:	b2db      	uxtb	r3, r3
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d01c      	beq.n	8001228 <get_FC1+0x58>
 80011ee:	7bfa      	ldrb	r2, [r7, #15]
 80011f0:	7bbb      	ldrb	r3, [r7, #14]
 80011f2:	4413      	add	r3, r2
 80011f4:	687a      	ldr	r2, [r7, #4]
 80011f6:	4413      	add	r3, r2
 80011f8:	7cd8      	ldrb	r0, [r3, #19]
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001200:	7bfb      	ldrb	r3, [r7, #15]
 8001202:	085b      	lsrs	r3, r3, #1
 8001204:	b2db      	uxtb	r3, r3
 8001206:	005b      	lsls	r3, r3, #1
 8001208:	4413      	add	r3, r2
 800120a:	881b      	ldrh	r3, [r3, #0]
 800120c:	b2d9      	uxtb	r1, r3
 800120e:	687b      	ldr	r3, [r7, #4]
 8001210:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001214:	7bfb      	ldrb	r3, [r7, #15]
 8001216:	085b      	lsrs	r3, r3, #1
 8001218:	b2db      	uxtb	r3, r3
 800121a:	005b      	lsls	r3, r3, #1
 800121c:	18d4      	adds	r4, r2, r3
 800121e:	f000 fa5f 	bl	80016e0 <word>
 8001222:	4603      	mov	r3, r0
 8001224:	8023      	strh	r3, [r4, #0]
 8001226:	e01d      	b.n	8001264 <get_FC1+0x94>
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800122e:	7bfb      	ldrb	r3, [r7, #15]
 8001230:	085b      	lsrs	r3, r3, #1
 8001232:	b2db      	uxtb	r3, r3
 8001234:	005b      	lsls	r3, r3, #1
 8001236:	4413      	add	r3, r2
 8001238:	881b      	ldrh	r3, [r3, #0]
 800123a:	0a1b      	lsrs	r3, r3, #8
 800123c:	b29b      	uxth	r3, r3
 800123e:	b2d8      	uxtb	r0, r3
 8001240:	7bfa      	ldrb	r2, [r7, #15]
 8001242:	7bbb      	ldrb	r3, [r7, #14]
 8001244:	4413      	add	r3, r2
 8001246:	687a      	ldr	r2, [r7, #4]
 8001248:	4413      	add	r3, r2
 800124a:	7cd9      	ldrb	r1, [r3, #19]
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001252:	7bfb      	ldrb	r3, [r7, #15]
 8001254:	085b      	lsrs	r3, r3, #1
 8001256:	b2db      	uxtb	r3, r3
 8001258:	005b      	lsls	r3, r3, #1
 800125a:	18d4      	adds	r4, r2, r3
 800125c:	f000 fa40 	bl	80016e0 <word>
 8001260:	4603      	mov	r3, r0
 8001262:	8023      	strh	r3, [r4, #0]
 8001264:	7bfb      	ldrb	r3, [r7, #15]
 8001266:	3301      	adds	r3, #1
 8001268:	73fb      	strb	r3, [r7, #15]
 800126a:	687b      	ldr	r3, [r7, #4]
 800126c:	7d5b      	ldrb	r3, [r3, #21]
 800126e:	7bfa      	ldrb	r2, [r7, #15]
 8001270:	429a      	cmp	r2, r3
 8001272:	d3b6      	bcc.n	80011e2 <get_FC1+0x12>
 8001274:	bf00      	nop
 8001276:	bf00      	nop
 8001278:	3714      	adds	r7, #20
 800127a:	46bd      	mov	sp, r7
 800127c:	bd90      	pop	{r4, r7, pc}

0800127e <get_FC3>:
 800127e:	b590      	push	{r4, r7, lr}
 8001280:	b085      	sub	sp, #20
 8001282:	af00      	add	r7, sp, #0
 8001284:	6078      	str	r0, [r7, #4]
 8001286:	2303      	movs	r3, #3
 8001288:	73fb      	strb	r3, [r7, #15]
 800128a:	2300      	movs	r3, #0
 800128c:	73bb      	strb	r3, [r7, #14]
 800128e:	e018      	b.n	80012c2 <get_FC3+0x44>
 8001290:	7bfb      	ldrb	r3, [r7, #15]
 8001292:	687a      	ldr	r2, [r7, #4]
 8001294:	4413      	add	r3, r2
 8001296:	7cd8      	ldrb	r0, [r3, #19]
 8001298:	7bfb      	ldrb	r3, [r7, #15]
 800129a:	3301      	adds	r3, #1
 800129c:	687a      	ldr	r2, [r7, #4]
 800129e:	4413      	add	r3, r2
 80012a0:	7cd9      	ldrb	r1, [r3, #19]
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80012a8:	7bbb      	ldrb	r3, [r7, #14]
 80012aa:	005b      	lsls	r3, r3, #1
 80012ac:	18d4      	adds	r4, r2, r3
 80012ae:	f000 fa17 	bl	80016e0 <word>
 80012b2:	4603      	mov	r3, r0
 80012b4:	8023      	strh	r3, [r4, #0]
 80012b6:	7bfb      	ldrb	r3, [r7, #15]
 80012b8:	3302      	adds	r3, #2
 80012ba:	73fb      	strb	r3, [r7, #15]
 80012bc:	7bbb      	ldrb	r3, [r7, #14]
 80012be:	3301      	adds	r3, #1
 80012c0:	73bb      	strb	r3, [r7, #14]
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	7d5b      	ldrb	r3, [r3, #21]
 80012c6:	085b      	lsrs	r3, r3, #1
 80012c8:	b2db      	uxtb	r3, r3
 80012ca:	7bba      	ldrb	r2, [r7, #14]
 80012cc:	429a      	cmp	r2, r3
 80012ce:	d3df      	bcc.n	8001290 <get_FC3+0x12>
 80012d0:	bf00      	nop
 80012d2:	bf00      	nop
 80012d4:	3714      	adds	r7, #20
 80012d6:	46bd      	mov	sp, r7
 80012d8:	bd90      	pop	{r4, r7, pc}
	...

080012dc <validateAnswer>:
 80012dc:	b580      	push	{r7, lr}
 80012de:	b084      	sub	sp, #16
 80012e0:	af00      	add	r7, sp, #0
 80012e2:	6078      	str	r0, [r7, #4]
 80012e4:	687b      	ldr	r3, [r7, #4]
 80012e6:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80012ea:	3b02      	subs	r3, #2
 80012ec:	687a      	ldr	r2, [r7, #4]
 80012ee:	4413      	add	r3, r2
 80012f0:	7cdb      	ldrb	r3, [r3, #19]
 80012f2:	021b      	lsls	r3, r3, #8
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80012fc:	3b01      	subs	r3, #1
 80012fe:	6879      	ldr	r1, [r7, #4]
 8001300:	440b      	add	r3, r1
 8001302:	7cdb      	ldrb	r3, [r3, #19]
 8001304:	b21b      	sxth	r3, r3
 8001306:	4313      	orrs	r3, r2
 8001308:	b21b      	sxth	r3, r3
 800130a:	81bb      	strh	r3, [r7, #12]
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	f103 0213 	add.w	r2, r3, #19
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001318:	3b02      	subs	r3, #2
 800131a:	b2db      	uxtb	r3, r3
 800131c:	4619      	mov	r1, r3
 800131e:	4610      	mov	r0, r2
 8001320:	f000 f9f0 	bl	8001704 <calcCRC>
 8001324:	4603      	mov	r3, r0
 8001326:	461a      	mov	r2, r3
 8001328:	89bb      	ldrh	r3, [r7, #12]
 800132a:	4293      	cmp	r3, r2
 800132c:	d009      	beq.n	8001342 <validateAnswer+0x66>
 800132e:	687b      	ldr	r3, [r7, #4]
 8001330:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 8001334:	3301      	adds	r3, #1
 8001336:	b29a      	uxth	r2, r3
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 800133e:	23fc      	movs	r3, #252	; 0xfc
 8001340:	e034      	b.n	80013ac <validateAnswer+0xd0>
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	7d1b      	ldrb	r3, [r3, #20]
 8001346:	b25b      	sxtb	r3, r3
 8001348:	2b00      	cmp	r3, #0
 800134a:	da09      	bge.n	8001360 <validateAnswer+0x84>
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 8001352:	3301      	adds	r3, #1
 8001354:	b29a      	uxth	r2, r3
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 800135c:	23fb      	movs	r3, #251	; 0xfb
 800135e:	e025      	b.n	80013ac <validateAnswer+0xd0>
 8001360:	2300      	movs	r3, #0
 8001362:	73fb      	strb	r3, [r7, #15]
 8001364:	2300      	movs	r3, #0
 8001366:	73bb      	strb	r3, [r7, #14]
 8001368:	e00c      	b.n	8001384 <validateAnswer+0xa8>
 800136a:	7bbb      	ldrb	r3, [r7, #14]
 800136c:	4a11      	ldr	r2, [pc, #68]	; (80013b4 <validateAnswer+0xd8>)
 800136e:	5cd2      	ldrb	r2, [r2, r3]
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	7d1b      	ldrb	r3, [r3, #20]
 8001374:	429a      	cmp	r2, r3
 8001376:	d102      	bne.n	800137e <validateAnswer+0xa2>
 8001378:	2301      	movs	r3, #1
 800137a:	73fb      	strb	r3, [r7, #15]
 800137c:	e005      	b.n	800138a <validateAnswer+0xae>
 800137e:	7bbb      	ldrb	r3, [r7, #14]
 8001380:	3301      	adds	r3, #1
 8001382:	73bb      	strb	r3, [r7, #14]
 8001384:	7bbb      	ldrb	r3, [r7, #14]
 8001386:	2b07      	cmp	r3, #7
 8001388:	d9ef      	bls.n	800136a <validateAnswer+0x8e>
 800138a:	7bfb      	ldrb	r3, [r7, #15]
 800138c:	f083 0301 	eor.w	r3, r3, #1
 8001390:	b2db      	uxtb	r3, r3
 8001392:	2b00      	cmp	r3, #0
 8001394:	d009      	beq.n	80013aa <validateAnswer+0xce>
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 800139c:	3301      	adds	r3, #1
 800139e:	b29a      	uxth	r2, r3
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 80013a6:	2301      	movs	r3, #1
 80013a8:	e000      	b.n	80013ac <validateAnswer+0xd0>
 80013aa:	2300      	movs	r3, #0
 80013ac:	4618      	mov	r0, r3
 80013ae:	3710      	adds	r7, #16
 80013b0:	46bd      	mov	sp, r7
 80013b2:	bd80      	pop	{r7, pc}
 80013b4:	0800a1dc 	.word	0x0800a1dc

080013b8 <getRxBuffer>:
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b084      	sub	sp, #16
 80013bc:	af00      	add	r7, sp, #0
 80013be:	6078      	str	r0, [r7, #4]
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 80013c6:	2b01      	cmp	r3, #1
 80013c8:	d104      	bne.n	80013d4 <getRxBuffer+0x1c>
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	685b      	ldr	r3, [r3, #4]
 80013ce:	4618      	mov	r0, r3
 80013d0:	f004 fa80 	bl	80058d4 <HAL_UART_AbortReceive_IT>
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	f893 313f 	ldrb.w	r3, [r3, #319]	; 0x13f
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d008      	beq.n	80013f0 <getRxBuffer+0x38>
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	33bc      	adds	r3, #188	; 0xbc
 80013e2:	4618      	mov	r0, r3
 80013e4:	f7ff fa34 	bl	8000850 <RingClear>
 80013e8:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 80013ec:	81fb      	strh	r3, [r7, #14]
 80013ee:	e019      	b.n	8001424 <getRxBuffer+0x6c>
 80013f0:	687b      	ldr	r3, [r7, #4]
 80013f2:	f103 02bc 	add.w	r2, r3, #188	; 0xbc
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	3313      	adds	r3, #19
 80013fa:	4619      	mov	r1, r3
 80013fc:	4610      	mov	r0, r2
 80013fe:	f7ff f9c1 	bl	8000784 <RingGetAllBytes>
 8001402:	4603      	mov	r3, r0
 8001404:	461a      	mov	r2, r3
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	f8b3 309c 	ldrh.w	r3, [r3, #156]	; 0x9c
 8001412:	3301      	adds	r3, #1
 8001414:	b29a      	uxth	r2, r3
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	f8a3 209c 	strh.w	r2, [r3, #156]	; 0x9c
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001422:	81fb      	strh	r3, [r7, #14]
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 800142a:	2b01      	cmp	r3, #1
 800142c:	d107      	bne.n	800143e <getRxBuffer+0x86>
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	6858      	ldr	r0, [r3, #4]
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	33a6      	adds	r3, #166	; 0xa6
 8001436:	2201      	movs	r2, #1
 8001438:	4619      	mov	r1, r3
 800143a:	f004 fa1b 	bl	8005874 <HAL_UART_Receive_IT>
 800143e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001442:	4618      	mov	r0, r3
 8001444:	3710      	adds	r7, #16
 8001446:	46bd      	mov	sp, r7
 8001448:	bd80      	pop	{r7, pc}
	...

0800144c <validateRequest>:
 800144c:	b580      	push	{r7, lr}
 800144e:	b084      	sub	sp, #16
 8001450:	af00      	add	r7, sp, #0
 8001452:	6078      	str	r0, [r7, #4]
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 800145a:	3b02      	subs	r3, #2
 800145c:	687a      	ldr	r2, [r7, #4]
 800145e:	4413      	add	r3, r2
 8001460:	7cdb      	ldrb	r3, [r3, #19]
 8001462:	021b      	lsls	r3, r3, #8
 8001464:	b21a      	sxth	r2, r3
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 800146c:	3b01      	subs	r3, #1
 800146e:	6879      	ldr	r1, [r7, #4]
 8001470:	440b      	add	r3, r1
 8001472:	7cdb      	ldrb	r3, [r3, #19]
 8001474:	b21b      	sxth	r3, r3
 8001476:	4313      	orrs	r3, r2
 8001478:	b21b      	sxth	r3, r3
 800147a:	813b      	strh	r3, [r7, #8]
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	f103 0213 	add.w	r2, r3, #19
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001488:	3b02      	subs	r3, #2
 800148a:	b2db      	uxtb	r3, r3
 800148c:	4619      	mov	r1, r3
 800148e:	4610      	mov	r0, r2
 8001490:	f000 f938 	bl	8001704 <calcCRC>
 8001494:	4603      	mov	r3, r0
 8001496:	461a      	mov	r2, r3
 8001498:	893b      	ldrh	r3, [r7, #8]
 800149a:	4293      	cmp	r3, r2
 800149c:	d009      	beq.n	80014b2 <validateRequest+0x66>
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 80014a4:	3301      	adds	r3, #1
 80014a6:	b29a      	uxth	r2, r3
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 80014ae:	23fc      	movs	r3, #252	; 0xfc
 80014b0:	e10f      	b.n	80016d2 <validateRequest+0x286>
 80014b2:	2300      	movs	r3, #0
 80014b4:	73fb      	strb	r3, [r7, #15]
 80014b6:	2300      	movs	r3, #0
 80014b8:	73bb      	strb	r3, [r7, #14]
 80014ba:	e00c      	b.n	80014d6 <validateRequest+0x8a>
 80014bc:	7bbb      	ldrb	r3, [r7, #14]
 80014be:	4a87      	ldr	r2, [pc, #540]	; (80016dc <validateRequest+0x290>)
 80014c0:	5cd2      	ldrb	r2, [r2, r3]
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	7d1b      	ldrb	r3, [r3, #20]
 80014c6:	429a      	cmp	r2, r3
 80014c8:	d102      	bne.n	80014d0 <validateRequest+0x84>
 80014ca:	2301      	movs	r3, #1
 80014cc:	73fb      	strb	r3, [r7, #15]
 80014ce:	e005      	b.n	80014dc <validateRequest+0x90>
 80014d0:	7bbb      	ldrb	r3, [r7, #14]
 80014d2:	3301      	adds	r3, #1
 80014d4:	73bb      	strb	r3, [r7, #14]
 80014d6:	7bbb      	ldrb	r3, [r7, #14]
 80014d8:	2b07      	cmp	r3, #7
 80014da:	d9ef      	bls.n	80014bc <validateRequest+0x70>
 80014dc:	7bfb      	ldrb	r3, [r7, #15]
 80014de:	f083 0301 	eor.w	r3, r3, #1
 80014e2:	b2db      	uxtb	r3, r3
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d009      	beq.n	80014fc <validateRequest+0xb0>
 80014e8:	687b      	ldr	r3, [r7, #4]
 80014ea:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 80014ee:	3301      	adds	r3, #1
 80014f0:	b29a      	uxth	r2, r3
 80014f2:	687b      	ldr	r3, [r7, #4]
 80014f4:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 80014f8:	2301      	movs	r3, #1
 80014fa:	e0ea      	b.n	80016d2 <validateRequest+0x286>
 80014fc:	2300      	movs	r3, #0
 80014fe:	81bb      	strh	r3, [r7, #12]
 8001500:	2300      	movs	r3, #0
 8001502:	817b      	strh	r3, [r7, #10]
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	7d1b      	ldrb	r3, [r3, #20]
 8001508:	3b01      	subs	r3, #1
 800150a:	2b0f      	cmp	r3, #15
 800150c:	f200 80e0 	bhi.w	80016d0 <validateRequest+0x284>
 8001510:	a201      	add	r2, pc, #4	; (adr r2, 8001518 <validateRequest+0xcc>)
 8001512:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001516:	bf00      	nop
 8001518:	08001559 	.word	0x08001559
 800151c:	08001559 	.word	0x08001559
 8001520:	08001671 	.word	0x08001671
 8001524:	08001671 	.word	0x08001671
 8001528:	08001605 	.word	0x08001605
 800152c:	0800164d 	.word	0x0800164d
 8001530:	080016d1 	.word	0x080016d1
 8001534:	080016d1 	.word	0x080016d1
 8001538:	080016d1 	.word	0x080016d1
 800153c:	080016d1 	.word	0x080016d1
 8001540:	080016d1 	.word	0x080016d1
 8001544:	080016d1 	.word	0x080016d1
 8001548:	080016d1 	.word	0x080016d1
 800154c:	080016d1 	.word	0x080016d1
 8001550:	08001559 	.word	0x08001559
 8001554:	08001671 	.word	0x08001671
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	7d5a      	ldrb	r2, [r3, #21]
 800155c:	687b      	ldr	r3, [r7, #4]
 800155e:	7d9b      	ldrb	r3, [r3, #22]
 8001560:	4619      	mov	r1, r3
 8001562:	4610      	mov	r0, r2
 8001564:	f000 f8bc 	bl	80016e0 <word>
 8001568:	4603      	mov	r3, r0
 800156a:	091b      	lsrs	r3, r3, #4
 800156c:	81bb      	strh	r3, [r7, #12]
 800156e:	687b      	ldr	r3, [r7, #4]
 8001570:	7dda      	ldrb	r2, [r3, #23]
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	7e1b      	ldrb	r3, [r3, #24]
 8001576:	4619      	mov	r1, r3
 8001578:	4610      	mov	r0, r2
 800157a:	f000 f8b1 	bl	80016e0 <word>
 800157e:	4603      	mov	r3, r0
 8001580:	091b      	lsrs	r3, r3, #4
 8001582:	817b      	strh	r3, [r7, #10]
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	7dda      	ldrb	r2, [r3, #23]
 8001588:	687b      	ldr	r3, [r7, #4]
 800158a:	7e1b      	ldrb	r3, [r3, #24]
 800158c:	4619      	mov	r1, r3
 800158e:	4610      	mov	r0, r2
 8001590:	f000 f8a6 	bl	80016e0 <word>
 8001594:	4603      	mov	r3, r0
 8001596:	f003 030f 	and.w	r3, r3, #15
 800159a:	b29b      	uxth	r3, r3
 800159c:	2b00      	cmp	r3, #0
 800159e:	d002      	beq.n	80015a6 <validateRequest+0x15a>
 80015a0:	897b      	ldrh	r3, [r7, #10]
 80015a2:	3301      	adds	r3, #1
 80015a4:	817b      	strh	r3, [r7, #10]
 80015a6:	89ba      	ldrh	r2, [r7, #12]
 80015a8:	897b      	ldrh	r3, [r7, #10]
 80015aa:	4413      	add	r3, r2
 80015ac:	687a      	ldr	r2, [r7, #4]
 80015ae:	f8b2 20a4 	ldrh.w	r2, [r2, #164]	; 0xa4
 80015b2:	4293      	cmp	r3, r2
 80015b4:	dd01      	ble.n	80015ba <validateRequest+0x16e>
 80015b6:	2302      	movs	r3, #2
 80015b8:	e08b      	b.n	80016d2 <validateRequest+0x286>
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	7dda      	ldrb	r2, [r3, #23]
 80015be:	687b      	ldr	r3, [r7, #4]
 80015c0:	7e1b      	ldrb	r3, [r3, #24]
 80015c2:	4619      	mov	r1, r3
 80015c4:	4610      	mov	r0, r2
 80015c6:	f000 f88b 	bl	80016e0 <word>
 80015ca:	4603      	mov	r3, r0
 80015cc:	08db      	lsrs	r3, r3, #3
 80015ce:	817b      	strh	r3, [r7, #10]
 80015d0:	687b      	ldr	r3, [r7, #4]
 80015d2:	7dda      	ldrb	r2, [r3, #23]
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	7e1b      	ldrb	r3, [r3, #24]
 80015d8:	4619      	mov	r1, r3
 80015da:	4610      	mov	r0, r2
 80015dc:	f000 f880 	bl	80016e0 <word>
 80015e0:	4603      	mov	r3, r0
 80015e2:	f003 0307 	and.w	r3, r3, #7
 80015e6:	b29b      	uxth	r3, r3
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d002      	beq.n	80015f2 <validateRequest+0x1a6>
 80015ec:	897b      	ldrh	r3, [r7, #10]
 80015ee:	3301      	adds	r3, #1
 80015f0:	817b      	strh	r3, [r7, #10]
 80015f2:	897b      	ldrh	r3, [r7, #10]
 80015f4:	3305      	adds	r3, #5
 80015f6:	817b      	strh	r3, [r7, #10]
 80015f8:	897b      	ldrh	r3, [r7, #10]
 80015fa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80015fe:	d960      	bls.n	80016c2 <validateRequest+0x276>
 8001600:	2303      	movs	r3, #3
 8001602:	e066      	b.n	80016d2 <validateRequest+0x286>
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	7d5a      	ldrb	r2, [r3, #21]
 8001608:	687b      	ldr	r3, [r7, #4]
 800160a:	7d9b      	ldrb	r3, [r3, #22]
 800160c:	4619      	mov	r1, r3
 800160e:	4610      	mov	r0, r2
 8001610:	f000 f866 	bl	80016e0 <word>
 8001614:	4603      	mov	r3, r0
 8001616:	091b      	lsrs	r3, r3, #4
 8001618:	81bb      	strh	r3, [r7, #12]
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	7d5a      	ldrb	r2, [r3, #21]
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	7d9b      	ldrb	r3, [r3, #22]
 8001622:	4619      	mov	r1, r3
 8001624:	4610      	mov	r0, r2
 8001626:	f000 f85b 	bl	80016e0 <word>
 800162a:	4603      	mov	r3, r0
 800162c:	f003 030f 	and.w	r3, r3, #15
 8001630:	b29b      	uxth	r3, r3
 8001632:	2b00      	cmp	r3, #0
 8001634:	d002      	beq.n	800163c <validateRequest+0x1f0>
 8001636:	89bb      	ldrh	r3, [r7, #12]
 8001638:	3301      	adds	r3, #1
 800163a:	81bb      	strh	r3, [r7, #12]
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 8001642:	89ba      	ldrh	r2, [r7, #12]
 8001644:	429a      	cmp	r2, r3
 8001646:	d93e      	bls.n	80016c6 <validateRequest+0x27a>
 8001648:	2302      	movs	r3, #2
 800164a:	e042      	b.n	80016d2 <validateRequest+0x286>
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	7d5a      	ldrb	r2, [r3, #21]
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	7d9b      	ldrb	r3, [r3, #22]
 8001654:	4619      	mov	r1, r3
 8001656:	4610      	mov	r0, r2
 8001658:	f000 f842 	bl	80016e0 <word>
 800165c:	4603      	mov	r3, r0
 800165e:	81bb      	strh	r3, [r7, #12]
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 8001666:	89ba      	ldrh	r2, [r7, #12]
 8001668:	429a      	cmp	r2, r3
 800166a:	d92e      	bls.n	80016ca <validateRequest+0x27e>
 800166c:	2302      	movs	r3, #2
 800166e:	e030      	b.n	80016d2 <validateRequest+0x286>
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	7d5a      	ldrb	r2, [r3, #21]
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	7d9b      	ldrb	r3, [r3, #22]
 8001678:	4619      	mov	r1, r3
 800167a:	4610      	mov	r0, r2
 800167c:	f000 f830 	bl	80016e0 <word>
 8001680:	4603      	mov	r3, r0
 8001682:	81bb      	strh	r3, [r7, #12]
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	7dda      	ldrb	r2, [r3, #23]
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	7e1b      	ldrb	r3, [r3, #24]
 800168c:	4619      	mov	r1, r3
 800168e:	4610      	mov	r0, r2
 8001690:	f000 f826 	bl	80016e0 <word>
 8001694:	4603      	mov	r3, r0
 8001696:	817b      	strh	r3, [r7, #10]
 8001698:	89ba      	ldrh	r2, [r7, #12]
 800169a:	897b      	ldrh	r3, [r7, #10]
 800169c:	4413      	add	r3, r2
 800169e:	687a      	ldr	r2, [r7, #4]
 80016a0:	f8b2 20a4 	ldrh.w	r2, [r2, #164]	; 0xa4
 80016a4:	4293      	cmp	r3, r2
 80016a6:	dd01      	ble.n	80016ac <validateRequest+0x260>
 80016a8:	2302      	movs	r3, #2
 80016aa:	e012      	b.n	80016d2 <validateRequest+0x286>
 80016ac:	897b      	ldrh	r3, [r7, #10]
 80016ae:	005b      	lsls	r3, r3, #1
 80016b0:	b29b      	uxth	r3, r3
 80016b2:	3305      	adds	r3, #5
 80016b4:	817b      	strh	r3, [r7, #10]
 80016b6:	897b      	ldrh	r3, [r7, #10]
 80016b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80016bc:	d907      	bls.n	80016ce <validateRequest+0x282>
 80016be:	2303      	movs	r3, #3
 80016c0:	e007      	b.n	80016d2 <validateRequest+0x286>
 80016c2:	bf00      	nop
 80016c4:	e004      	b.n	80016d0 <validateRequest+0x284>
 80016c6:	bf00      	nop
 80016c8:	e002      	b.n	80016d0 <validateRequest+0x284>
 80016ca:	bf00      	nop
 80016cc:	e000      	b.n	80016d0 <validateRequest+0x284>
 80016ce:	bf00      	nop
 80016d0:	2300      	movs	r3, #0
 80016d2:	4618      	mov	r0, r3
 80016d4:	3710      	adds	r7, #16
 80016d6:	46bd      	mov	sp, r7
 80016d8:	bd80      	pop	{r7, pc}
 80016da:	bf00      	nop
 80016dc:	0800a1dc 	.word	0x0800a1dc

080016e0 <word>:
 80016e0:	b480      	push	{r7}
 80016e2:	b085      	sub	sp, #20
 80016e4:	af00      	add	r7, sp, #0
 80016e6:	4603      	mov	r3, r0
 80016e8:	460a      	mov	r2, r1
 80016ea:	71fb      	strb	r3, [r7, #7]
 80016ec:	4613      	mov	r3, r2
 80016ee:	71bb      	strb	r3, [r7, #6]
 80016f0:	79bb      	ldrb	r3, [r7, #6]
 80016f2:	733b      	strb	r3, [r7, #12]
 80016f4:	79fb      	ldrb	r3, [r7, #7]
 80016f6:	737b      	strb	r3, [r7, #13]
 80016f8:	89bb      	ldrh	r3, [r7, #12]
 80016fa:	4618      	mov	r0, r3
 80016fc:	3714      	adds	r7, #20
 80016fe:	46bd      	mov	sp, r7
 8001700:	bc80      	pop	{r7}
 8001702:	4770      	bx	lr

08001704 <calcCRC>:
 8001704:	b480      	push	{r7}
 8001706:	b087      	sub	sp, #28
 8001708:	af00      	add	r7, sp, #0
 800170a:	6078      	str	r0, [r7, #4]
 800170c:	460b      	mov	r3, r1
 800170e:	70fb      	strb	r3, [r7, #3]
 8001710:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001714:	617b      	str	r3, [r7, #20]
 8001716:	2300      	movs	r3, #0
 8001718:	74fb      	strb	r3, [r7, #19]
 800171a:	e023      	b.n	8001764 <calcCRC+0x60>
 800171c:	7cfb      	ldrb	r3, [r7, #19]
 800171e:	687a      	ldr	r2, [r7, #4]
 8001720:	4413      	add	r3, r2
 8001722:	781b      	ldrb	r3, [r3, #0]
 8001724:	461a      	mov	r2, r3
 8001726:	697b      	ldr	r3, [r7, #20]
 8001728:	4053      	eors	r3, r2
 800172a:	617b      	str	r3, [r7, #20]
 800172c:	2301      	movs	r3, #1
 800172e:	74bb      	strb	r3, [r7, #18]
 8001730:	e012      	b.n	8001758 <calcCRC+0x54>
 8001732:	697b      	ldr	r3, [r7, #20]
 8001734:	f003 0301 	and.w	r3, r3, #1
 8001738:	60bb      	str	r3, [r7, #8]
 800173a:	697b      	ldr	r3, [r7, #20]
 800173c:	085b      	lsrs	r3, r3, #1
 800173e:	617b      	str	r3, [r7, #20]
 8001740:	68bb      	ldr	r3, [r7, #8]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d005      	beq.n	8001752 <calcCRC+0x4e>
 8001746:	697b      	ldr	r3, [r7, #20]
 8001748:	f483 4320 	eor.w	r3, r3, #40960	; 0xa000
 800174c:	f083 0301 	eor.w	r3, r3, #1
 8001750:	617b      	str	r3, [r7, #20]
 8001752:	7cbb      	ldrb	r3, [r7, #18]
 8001754:	3301      	adds	r3, #1
 8001756:	74bb      	strb	r3, [r7, #18]
 8001758:	7cbb      	ldrb	r3, [r7, #18]
 800175a:	2b08      	cmp	r3, #8
 800175c:	d9e9      	bls.n	8001732 <calcCRC+0x2e>
 800175e:	7cfb      	ldrb	r3, [r7, #19]
 8001760:	3301      	adds	r3, #1
 8001762:	74fb      	strb	r3, [r7, #19]
 8001764:	7cfa      	ldrb	r2, [r7, #19]
 8001766:	78fb      	ldrb	r3, [r7, #3]
 8001768:	429a      	cmp	r2, r3
 800176a:	d3d7      	bcc.n	800171c <calcCRC+0x18>
 800176c:	697b      	ldr	r3, [r7, #20]
 800176e:	0a1b      	lsrs	r3, r3, #8
 8001770:	60fb      	str	r3, [r7, #12]
 8001772:	697b      	ldr	r3, [r7, #20]
 8001774:	021b      	lsls	r3, r3, #8
 8001776:	68fa      	ldr	r2, [r7, #12]
 8001778:	4313      	orrs	r3, r2
 800177a:	617b      	str	r3, [r7, #20]
 800177c:	697b      	ldr	r3, [r7, #20]
 800177e:	b29b      	uxth	r3, r3
 8001780:	617b      	str	r3, [r7, #20]
 8001782:	697b      	ldr	r3, [r7, #20]
 8001784:	b29b      	uxth	r3, r3
 8001786:	4618      	mov	r0, r3
 8001788:	371c      	adds	r7, #28
 800178a:	46bd      	mov	sp, r7
 800178c:	bc80      	pop	{r7}
 800178e:	4770      	bx	lr

08001790 <buildException>:
 8001790:	b480      	push	{r7}
 8001792:	b085      	sub	sp, #20
 8001794:	af00      	add	r7, sp, #0
 8001796:	4603      	mov	r3, r0
 8001798:	6039      	str	r1, [r7, #0]
 800179a:	71fb      	strb	r3, [r7, #7]
 800179c:	683b      	ldr	r3, [r7, #0]
 800179e:	7d1b      	ldrb	r3, [r3, #20]
 80017a0:	73fb      	strb	r3, [r7, #15]
 80017a2:	683b      	ldr	r3, [r7, #0]
 80017a4:	7a1a      	ldrb	r2, [r3, #8]
 80017a6:	683b      	ldr	r3, [r7, #0]
 80017a8:	74da      	strb	r2, [r3, #19]
 80017aa:	7bfb      	ldrb	r3, [r7, #15]
 80017ac:	3b80      	subs	r3, #128	; 0x80
 80017ae:	b2da      	uxtb	r2, r3
 80017b0:	683b      	ldr	r3, [r7, #0]
 80017b2:	751a      	strb	r2, [r3, #20]
 80017b4:	683b      	ldr	r3, [r7, #0]
 80017b6:	79fa      	ldrb	r2, [r7, #7]
 80017b8:	755a      	strb	r2, [r3, #21]
 80017ba:	683b      	ldr	r3, [r7, #0]
 80017bc:	2203      	movs	r2, #3
 80017be:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 80017c2:	bf00      	nop
 80017c4:	3714      	adds	r7, #20
 80017c6:	46bd      	mov	sp, r7
 80017c8:	bc80      	pop	{r7}
 80017ca:	4770      	bx	lr

080017cc <sendTxBuffer>:
 80017cc:	b590      	push	{r4, r7, lr}
 80017ce:	b087      	sub	sp, #28
 80017d0:	af02      	add	r7, sp, #8
 80017d2:	6078      	str	r0, [r7, #4]
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	f103 0213 	add.w	r2, r3, #19
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80017e0:	4619      	mov	r1, r3
 80017e2:	4610      	mov	r0, r2
 80017e4:	f7ff ff8e 	bl	8001704 <calcCRC>
 80017e8:	4603      	mov	r3, r0
 80017ea:	81fb      	strh	r3, [r7, #14]
 80017ec:	89fb      	ldrh	r3, [r7, #14]
 80017ee:	0a1b      	lsrs	r3, r3, #8
 80017f0:	b29a      	uxth	r2, r3
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80017f8:	4619      	mov	r1, r3
 80017fa:	b2d2      	uxtb	r2, r2
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	440b      	add	r3, r1
 8001800:	74da      	strb	r2, [r3, #19]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001808:	3301      	adds	r3, #1
 800180a:	b2da      	uxtb	r2, r3
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001812:	687b      	ldr	r3, [r7, #4]
 8001814:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001818:	4619      	mov	r1, r3
 800181a:	89fb      	ldrh	r3, [r7, #14]
 800181c:	b2da      	uxtb	r2, r3
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	440b      	add	r3, r1
 8001822:	74da      	strb	r2, [r3, #19]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 800182a:	3301      	adds	r3, #1
 800182c:	b2da      	uxtb	r2, r3
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	68db      	ldr	r3, [r3, #12]
 8001838:	2b00      	cmp	r3, #0
 800183a:	d00c      	beq.n	8001856 <sendTxBuffer+0x8a>
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	685b      	ldr	r3, [r3, #4]
 8001840:	4618      	mov	r0, r3
 8001842:	f004 fa78 	bl	8005d36 <HAL_HalfDuplex_EnableTransmitter>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	68d8      	ldr	r0, [r3, #12]
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	8a1b      	ldrh	r3, [r3, #16]
 800184e:	2201      	movs	r2, #1
 8001850:	4619      	mov	r1, r3
 8001852:	f002 fa9f 	bl	8003d94 <HAL_GPIO_WritePin>
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	6858      	ldr	r0, [r3, #4]
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	f103 0113 	add.w	r1, r3, #19
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001866:	b29b      	uxth	r3, r3
 8001868:	461a      	mov	r2, r3
 800186a:	f003 ffbf 	bl	80057ec <HAL_UART_Transmit_IT>
 800186e:	21fa      	movs	r1, #250	; 0xfa
 8001870:	2001      	movs	r0, #1
 8001872:	f007 f801 	bl	8008878 <ulTaskNotifyTake>
 8001876:	bf00      	nop
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	685b      	ldr	r3, [r3, #4]
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001884:	2b00      	cmp	r3, #0
 8001886:	d0f7      	beq.n	8001878 <sendTxBuffer+0xac>
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	68db      	ldr	r3, [r3, #12]
 800188c:	2b00      	cmp	r3, #0
 800188e:	d00c      	beq.n	80018aa <sendTxBuffer+0xde>
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	68d8      	ldr	r0, [r3, #12]
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	8a1b      	ldrh	r3, [r3, #16]
 8001898:	2200      	movs	r2, #0
 800189a:	4619      	mov	r1, r3
 800189c:	f002 fa7a 	bl	8003d94 <HAL_GPIO_WritePin>
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	685b      	ldr	r3, [r3, #4]
 80018a4:	4618      	mov	r0, r3
 80018a6:	f004 fa79 	bl	8005d9c <HAL_HalfDuplex_EnableReceiver>
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	781b      	ldrb	r3, [r3, #0]
 80018ae:	2b04      	cmp	r3, #4
 80018b0:	d10c      	bne.n	80018cc <sendTxBuffer+0x100>
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	f8d3 40b4 	ldr.w	r4, [r3, #180]	; 0xb4
 80018b8:	f006 fafe 	bl	8007eb8 <xTaskGetTickCount>
 80018bc:	4602      	mov	r2, r0
 80018be:	2300      	movs	r3, #0
 80018c0:	9300      	str	r3, [sp, #0]
 80018c2:	2300      	movs	r3, #0
 80018c4:	2102      	movs	r1, #2
 80018c6:	4620      	mov	r0, r4
 80018c8:	f007 fa7c 	bl	8008dc4 <xTimerGenericCommand>
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	2200      	movs	r2, #0
 80018d0:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	f8b3 309e 	ldrh.w	r3, [r3, #158]	; 0x9e
 80018da:	3301      	adds	r3, #1
 80018dc:	b29a      	uxth	r2, r3
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	f8a3 209e 	strh.w	r2, [r3, #158]	; 0x9e
 80018e4:	bf00      	nop
 80018e6:	3714      	adds	r7, #20
 80018e8:	46bd      	mov	sp, r7
 80018ea:	bd90      	pop	{r4, r7, pc}

080018ec <process_FC1>:
 80018ec:	b580      	push	{r7, lr}
 80018ee:	b086      	sub	sp, #24
 80018f0:	af00      	add	r7, sp, #0
 80018f2:	6078      	str	r0, [r7, #4]
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	7d5a      	ldrb	r2, [r3, #21]
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	7d9b      	ldrb	r3, [r3, #22]
 80018fc:	4619      	mov	r1, r3
 80018fe:	4610      	mov	r0, r2
 8001900:	f7ff feee 	bl	80016e0 <word>
 8001904:	4603      	mov	r3, r0
 8001906:	827b      	strh	r3, [r7, #18]
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	7dda      	ldrb	r2, [r3, #23]
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	7e1b      	ldrb	r3, [r3, #24]
 8001910:	4619      	mov	r1, r3
 8001912:	4610      	mov	r0, r2
 8001914:	f7ff fee4 	bl	80016e0 <word>
 8001918:	4603      	mov	r3, r0
 800191a:	823b      	strh	r3, [r7, #16]
 800191c:	8a3b      	ldrh	r3, [r7, #16]
 800191e:	08db      	lsrs	r3, r3, #3
 8001920:	b29b      	uxth	r3, r3
 8001922:	75fb      	strb	r3, [r7, #23]
 8001924:	8a3b      	ldrh	r3, [r7, #16]
 8001926:	f003 0307 	and.w	r3, r3, #7
 800192a:	b29b      	uxth	r3, r3
 800192c:	2b00      	cmp	r3, #0
 800192e:	d002      	beq.n	8001936 <process_FC1+0x4a>
 8001930:	7dfb      	ldrb	r3, [r7, #23]
 8001932:	3301      	adds	r3, #1
 8001934:	75fb      	strb	r3, [r7, #23]
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	7dfa      	ldrb	r2, [r7, #23]
 800193a:	755a      	strb	r2, [r3, #21]
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	2203      	movs	r2, #3
 8001940:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 800194a:	461a      	mov	r2, r3
 800194c:	7dfb      	ldrb	r3, [r7, #23]
 800194e:	4413      	add	r3, r2
 8001950:	3b01      	subs	r3, #1
 8001952:	687a      	ldr	r2, [r7, #4]
 8001954:	4413      	add	r3, r2
 8001956:	2200      	movs	r2, #0
 8001958:	74da      	strb	r2, [r3, #19]
 800195a:	2300      	movs	r3, #0
 800195c:	75bb      	strb	r3, [r7, #22]
 800195e:	2300      	movs	r3, #0
 8001960:	82bb      	strh	r3, [r7, #20]
 8001962:	e058      	b.n	8001a16 <process_FC1+0x12a>
 8001964:	8a7a      	ldrh	r2, [r7, #18]
 8001966:	8abb      	ldrh	r3, [r7, #20]
 8001968:	4413      	add	r3, r2
 800196a:	81bb      	strh	r3, [r7, #12]
 800196c:	89bb      	ldrh	r3, [r7, #12]
 800196e:	091b      	lsrs	r3, r3, #4
 8001970:	817b      	strh	r3, [r7, #10]
 8001972:	89bb      	ldrh	r3, [r7, #12]
 8001974:	b2db      	uxtb	r3, r3
 8001976:	f003 030f 	and.w	r3, r3, #15
 800197a:	727b      	strb	r3, [r7, #9]
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001982:	897b      	ldrh	r3, [r7, #10]
 8001984:	005b      	lsls	r3, r3, #1
 8001986:	4413      	add	r3, r2
 8001988:	881b      	ldrh	r3, [r3, #0]
 800198a:	461a      	mov	r2, r3
 800198c:	7a7b      	ldrb	r3, [r7, #9]
 800198e:	fa42 f303 	asr.w	r3, r2, r3
 8001992:	f003 0301 	and.w	r3, r3, #1
 8001996:	2b00      	cmp	r3, #0
 8001998:	d014      	beq.n	80019c4 <process_FC1+0xd8>
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80019a0:	461a      	mov	r2, r3
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	4413      	add	r3, r2
 80019a6:	7cda      	ldrb	r2, [r3, #19]
 80019a8:	7dbb      	ldrb	r3, [r7, #22]
 80019aa:	2101      	movs	r1, #1
 80019ac:	fa01 f303 	lsl.w	r3, r1, r3
 80019b0:	b2db      	uxtb	r3, r3
 80019b2:	6879      	ldr	r1, [r7, #4]
 80019b4:	f891 1093 	ldrb.w	r1, [r1, #147]	; 0x93
 80019b8:	4313      	orrs	r3, r2
 80019ba:	b2da      	uxtb	r2, r3
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	440b      	add	r3, r1
 80019c0:	74da      	strb	r2, [r3, #19]
 80019c2:	e015      	b.n	80019f0 <process_FC1+0x104>
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 80019ca:	461a      	mov	r2, r3
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	4413      	add	r3, r2
 80019d0:	7cda      	ldrb	r2, [r3, #19]
 80019d2:	7dbb      	ldrb	r3, [r7, #22]
 80019d4:	2101      	movs	r1, #1
 80019d6:	fa01 f303 	lsl.w	r3, r1, r3
 80019da:	b2db      	uxtb	r3, r3
 80019dc:	43db      	mvns	r3, r3
 80019de:	b2db      	uxtb	r3, r3
 80019e0:	6879      	ldr	r1, [r7, #4]
 80019e2:	f891 1093 	ldrb.w	r1, [r1, #147]	; 0x93
 80019e6:	4013      	ands	r3, r2
 80019e8:	b2da      	uxtb	r2, r3
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	440b      	add	r3, r1
 80019ee:	74da      	strb	r2, [r3, #19]
 80019f0:	7dbb      	ldrb	r3, [r7, #22]
 80019f2:	3301      	adds	r3, #1
 80019f4:	75bb      	strb	r3, [r7, #22]
 80019f6:	7dbb      	ldrb	r3, [r7, #22]
 80019f8:	2b07      	cmp	r3, #7
 80019fa:	d909      	bls.n	8001a10 <process_FC1+0x124>
 80019fc:	2300      	movs	r3, #0
 80019fe:	75bb      	strb	r3, [r7, #22]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001a06:	3301      	adds	r3, #1
 8001a08:	b2da      	uxtb	r2, r3
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001a10:	8abb      	ldrh	r3, [r7, #20]
 8001a12:	3301      	adds	r3, #1
 8001a14:	82bb      	strh	r3, [r7, #20]
 8001a16:	8aba      	ldrh	r2, [r7, #20]
 8001a18:	8a3b      	ldrh	r3, [r7, #16]
 8001a1a:	429a      	cmp	r2, r3
 8001a1c:	d3a2      	bcc.n	8001964 <process_FC1+0x78>
 8001a1e:	8a3b      	ldrh	r3, [r7, #16]
 8001a20:	f003 0307 	and.w	r3, r3, #7
 8001a24:	b29b      	uxth	r3, r3
 8001a26:	2b00      	cmp	r3, #0
 8001a28:	d007      	beq.n	8001a3a <process_FC1+0x14e>
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001a30:	3301      	adds	r3, #1
 8001a32:	b2da      	uxtb	r2, r3
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001a40:	3302      	adds	r3, #2
 8001a42:	73fb      	strb	r3, [r7, #15]
 8001a44:	6878      	ldr	r0, [r7, #4]
 8001a46:	f7ff fec1 	bl	80017cc <sendTxBuffer>
 8001a4a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a4e:	4618      	mov	r0, r3
 8001a50:	3718      	adds	r7, #24
 8001a52:	46bd      	mov	sp, r7
 8001a54:	bd80      	pop	{r7, pc}

08001a56 <process_FC3>:
 8001a56:	b580      	push	{r7, lr}
 8001a58:	b084      	sub	sp, #16
 8001a5a:	af00      	add	r7, sp, #0
 8001a5c:	6078      	str	r0, [r7, #4]
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	7d5a      	ldrb	r2, [r3, #21]
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	7d9b      	ldrb	r3, [r3, #22]
 8001a66:	4619      	mov	r1, r3
 8001a68:	4610      	mov	r0, r2
 8001a6a:	f7ff fe39 	bl	80016e0 <word>
 8001a6e:	4603      	mov	r3, r0
 8001a70:	81bb      	strh	r3, [r7, #12]
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	7dda      	ldrb	r2, [r3, #23]
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	7e1b      	ldrb	r3, [r3, #24]
 8001a7a:	4619      	mov	r1, r3
 8001a7c:	4610      	mov	r0, r2
 8001a7e:	f7ff fe2f 	bl	80016e0 <word>
 8001a82:	4603      	mov	r3, r0
 8001a84:	72fb      	strb	r3, [r7, #11]
 8001a86:	7afb      	ldrb	r3, [r7, #11]
 8001a88:	005b      	lsls	r3, r3, #1
 8001a8a:	b2da      	uxtb	r2, r3
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	755a      	strb	r2, [r3, #21]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	2203      	movs	r2, #3
 8001a94:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001a98:	89bb      	ldrh	r3, [r7, #12]
 8001a9a:	81fb      	strh	r3, [r7, #14]
 8001a9c:	e032      	b.n	8001b04 <process_FC3+0xae>
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001aa4:	89fb      	ldrh	r3, [r7, #14]
 8001aa6:	005b      	lsls	r3, r3, #1
 8001aa8:	4413      	add	r3, r2
 8001aaa:	881b      	ldrh	r3, [r3, #0]
 8001aac:	0a1b      	lsrs	r3, r3, #8
 8001aae:	b29a      	uxth	r2, r3
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001ab6:	4619      	mov	r1, r3
 8001ab8:	b2d2      	uxtb	r2, r2
 8001aba:	687b      	ldr	r3, [r7, #4]
 8001abc:	440b      	add	r3, r1
 8001abe:	74da      	strb	r2, [r3, #19]
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001ac6:	3301      	adds	r3, #1
 8001ac8:	b2da      	uxtb	r2, r3
 8001aca:	687b      	ldr	r3, [r7, #4]
 8001acc:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001ad6:	89fb      	ldrh	r3, [r7, #14]
 8001ad8:	005b      	lsls	r3, r3, #1
 8001ada:	4413      	add	r3, r2
 8001adc:	881a      	ldrh	r2, [r3, #0]
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001ae4:	4619      	mov	r1, r3
 8001ae6:	b2d2      	uxtb	r2, r2
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	440b      	add	r3, r1
 8001aec:	74da      	strb	r2, [r3, #19]
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001af4:	3301      	adds	r3, #1
 8001af6:	b2da      	uxtb	r2, r3
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001afe:	89fb      	ldrh	r3, [r7, #14]
 8001b00:	3301      	adds	r3, #1
 8001b02:	81fb      	strh	r3, [r7, #14]
 8001b04:	89fa      	ldrh	r2, [r7, #14]
 8001b06:	89b9      	ldrh	r1, [r7, #12]
 8001b08:	7afb      	ldrb	r3, [r7, #11]
 8001b0a:	440b      	add	r3, r1
 8001b0c:	429a      	cmp	r2, r3
 8001b0e:	dbc6      	blt.n	8001a9e <process_FC3+0x48>
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001b16:	3302      	adds	r3, #2
 8001b18:	72bb      	strb	r3, [r7, #10]
 8001b1a:	6878      	ldr	r0, [r7, #4]
 8001b1c:	f7ff fe56 	bl	80017cc <sendTxBuffer>
 8001b20:	f997 300a 	ldrsb.w	r3, [r7, #10]
 8001b24:	4618      	mov	r0, r3
 8001b26:	3710      	adds	r7, #16
 8001b28:	46bd      	mov	sp, r7
 8001b2a:	bd80      	pop	{r7, pc}

08001b2c <process_FC5>:
 8001b2c:	b580      	push	{r7, lr}
 8001b2e:	b084      	sub	sp, #16
 8001b30:	af00      	add	r7, sp, #0
 8001b32:	6078      	str	r0, [r7, #4]
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	7d5a      	ldrb	r2, [r3, #21]
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	7d9b      	ldrb	r3, [r3, #22]
 8001b3c:	4619      	mov	r1, r3
 8001b3e:	4610      	mov	r0, r2
 8001b40:	f7ff fdce 	bl	80016e0 <word>
 8001b44:	4603      	mov	r3, r0
 8001b46:	81fb      	strh	r3, [r7, #14]
 8001b48:	89fb      	ldrh	r3, [r7, #14]
 8001b4a:	091b      	lsrs	r3, r3, #4
 8001b4c:	81bb      	strh	r3, [r7, #12]
 8001b4e:	89fb      	ldrh	r3, [r7, #14]
 8001b50:	b2db      	uxtb	r3, r3
 8001b52:	f003 030f 	and.w	r3, r3, #15
 8001b56:	72fb      	strb	r3, [r7, #11]
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	7ddb      	ldrb	r3, [r3, #23]
 8001b5c:	2bff      	cmp	r3, #255	; 0xff
 8001b5e:	d115      	bne.n	8001b8c <process_FC5+0x60>
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001b66:	89bb      	ldrh	r3, [r7, #12]
 8001b68:	005b      	lsls	r3, r3, #1
 8001b6a:	4413      	add	r3, r2
 8001b6c:	8819      	ldrh	r1, [r3, #0]
 8001b6e:	7afb      	ldrb	r3, [r7, #11]
 8001b70:	2201      	movs	r2, #1
 8001b72:	fa02 f303 	lsl.w	r3, r2, r3
 8001b76:	b29a      	uxth	r2, r3
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	f8d3 0098 	ldr.w	r0, [r3, #152]	; 0x98
 8001b7e:	89bb      	ldrh	r3, [r7, #12]
 8001b80:	005b      	lsls	r3, r3, #1
 8001b82:	4403      	add	r3, r0
 8001b84:	430a      	orrs	r2, r1
 8001b86:	b292      	uxth	r2, r2
 8001b88:	801a      	strh	r2, [r3, #0]
 8001b8a:	e016      	b.n	8001bba <process_FC5+0x8e>
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001b92:	89bb      	ldrh	r3, [r7, #12]
 8001b94:	005b      	lsls	r3, r3, #1
 8001b96:	4413      	add	r3, r2
 8001b98:	8819      	ldrh	r1, [r3, #0]
 8001b9a:	7afb      	ldrb	r3, [r7, #11]
 8001b9c:	2201      	movs	r2, #1
 8001b9e:	fa02 f303 	lsl.w	r3, r2, r3
 8001ba2:	b29b      	uxth	r3, r3
 8001ba4:	43db      	mvns	r3, r3
 8001ba6:	b29a      	uxth	r2, r3
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	f8d3 0098 	ldr.w	r0, [r3, #152]	; 0x98
 8001bae:	89bb      	ldrh	r3, [r7, #12]
 8001bb0:	005b      	lsls	r3, r3, #1
 8001bb2:	4403      	add	r3, r0
 8001bb4:	400a      	ands	r2, r1
 8001bb6:	b292      	uxth	r2, r2
 8001bb8:	801a      	strh	r2, [r3, #0]
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	2206      	movs	r2, #6
 8001bbe:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001bc8:	3302      	adds	r3, #2
 8001bca:	72bb      	strb	r3, [r7, #10]
 8001bcc:	6878      	ldr	r0, [r7, #4]
 8001bce:	f7ff fdfd 	bl	80017cc <sendTxBuffer>
 8001bd2:	f997 300a 	ldrsb.w	r3, [r7, #10]
 8001bd6:	4618      	mov	r0, r3
 8001bd8:	3710      	adds	r7, #16
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	bd80      	pop	{r7, pc}

08001bde <process_FC6>:
 8001bde:	b580      	push	{r7, lr}
 8001be0:	b084      	sub	sp, #16
 8001be2:	af00      	add	r7, sp, #0
 8001be4:	6078      	str	r0, [r7, #4]
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	7d5a      	ldrb	r2, [r3, #21]
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	7d9b      	ldrb	r3, [r3, #22]
 8001bee:	4619      	mov	r1, r3
 8001bf0:	4610      	mov	r0, r2
 8001bf2:	f7ff fd75 	bl	80016e0 <word>
 8001bf6:	4603      	mov	r3, r0
 8001bf8:	81fb      	strh	r3, [r7, #14]
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	7dda      	ldrb	r2, [r3, #23]
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	7e1b      	ldrb	r3, [r3, #24]
 8001c02:	4619      	mov	r1, r3
 8001c04:	4610      	mov	r0, r2
 8001c06:	f7ff fd6b 	bl	80016e0 <word>
 8001c0a:	4603      	mov	r3, r0
 8001c0c:	81bb      	strh	r3, [r7, #12]
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001c14:	89fb      	ldrh	r3, [r7, #14]
 8001c16:	005b      	lsls	r3, r3, #1
 8001c18:	4413      	add	r3, r2
 8001c1a:	89ba      	ldrh	r2, [r7, #12]
 8001c1c:	801a      	strh	r2, [r3, #0]
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	2206      	movs	r2, #6
 8001c22:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001c2c:	3302      	adds	r3, #2
 8001c2e:	72fb      	strb	r3, [r7, #11]
 8001c30:	6878      	ldr	r0, [r7, #4]
 8001c32:	f7ff fdcb 	bl	80017cc <sendTxBuffer>
 8001c36:	f997 300b 	ldrsb.w	r3, [r7, #11]
 8001c3a:	4618      	mov	r0, r3
 8001c3c:	3710      	adds	r7, #16
 8001c3e:	46bd      	mov	sp, r7
 8001c40:	bd80      	pop	{r7, pc}

08001c42 <process_FC15>:
 8001c42:	b580      	push	{r7, lr}
 8001c44:	b086      	sub	sp, #24
 8001c46:	af00      	add	r7, sp, #0
 8001c48:	6078      	str	r0, [r7, #4]
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	7d5a      	ldrb	r2, [r3, #21]
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	7d9b      	ldrb	r3, [r3, #22]
 8001c52:	4619      	mov	r1, r3
 8001c54:	4610      	mov	r0, r2
 8001c56:	f7ff fd43 	bl	80016e0 <word>
 8001c5a:	4603      	mov	r3, r0
 8001c5c:	827b      	strh	r3, [r7, #18]
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	7dda      	ldrb	r2, [r3, #23]
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	7e1b      	ldrb	r3, [r3, #24]
 8001c66:	4619      	mov	r1, r3
 8001c68:	4610      	mov	r0, r2
 8001c6a:	f7ff fd39 	bl	80016e0 <word>
 8001c6e:	4603      	mov	r3, r0
 8001c70:	823b      	strh	r3, [r7, #16]
 8001c72:	2300      	movs	r3, #0
 8001c74:	75bb      	strb	r3, [r7, #22]
 8001c76:	2307      	movs	r3, #7
 8001c78:	75fb      	strb	r3, [r7, #23]
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	82bb      	strh	r3, [r7, #20]
 8001c7e:	e058      	b.n	8001d32 <process_FC15+0xf0>
 8001c80:	8a7a      	ldrh	r2, [r7, #18]
 8001c82:	8abb      	ldrh	r3, [r7, #20]
 8001c84:	4413      	add	r3, r2
 8001c86:	81bb      	strh	r3, [r7, #12]
 8001c88:	89bb      	ldrh	r3, [r7, #12]
 8001c8a:	091b      	lsrs	r3, r3, #4
 8001c8c:	817b      	strh	r3, [r7, #10]
 8001c8e:	89bb      	ldrh	r3, [r7, #12]
 8001c90:	b2db      	uxtb	r3, r3
 8001c92:	f003 030f 	and.w	r3, r3, #15
 8001c96:	727b      	strb	r3, [r7, #9]
 8001c98:	7dfb      	ldrb	r3, [r7, #23]
 8001c9a:	687a      	ldr	r2, [r7, #4]
 8001c9c:	4413      	add	r3, r2
 8001c9e:	7cdb      	ldrb	r3, [r3, #19]
 8001ca0:	461a      	mov	r2, r3
 8001ca2:	7dbb      	ldrb	r3, [r7, #22]
 8001ca4:	fa42 f303 	asr.w	r3, r2, r3
 8001ca8:	f003 0301 	and.w	r3, r3, #1
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	bf14      	ite	ne
 8001cb0:	2301      	movne	r3, #1
 8001cb2:	2300      	moveq	r3, #0
 8001cb4:	723b      	strb	r3, [r7, #8]
 8001cb6:	7a3b      	ldrb	r3, [r7, #8]
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d015      	beq.n	8001ce8 <process_FC15+0xa6>
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001cc2:	897b      	ldrh	r3, [r7, #10]
 8001cc4:	005b      	lsls	r3, r3, #1
 8001cc6:	4413      	add	r3, r2
 8001cc8:	8819      	ldrh	r1, [r3, #0]
 8001cca:	7a7b      	ldrb	r3, [r7, #9]
 8001ccc:	2201      	movs	r2, #1
 8001cce:	fa02 f303 	lsl.w	r3, r2, r3
 8001cd2:	b29a      	uxth	r2, r3
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	f8d3 0098 	ldr.w	r0, [r3, #152]	; 0x98
 8001cda:	897b      	ldrh	r3, [r7, #10]
 8001cdc:	005b      	lsls	r3, r3, #1
 8001cde:	4403      	add	r3, r0
 8001ce0:	430a      	orrs	r2, r1
 8001ce2:	b292      	uxth	r2, r2
 8001ce4:	801a      	strh	r2, [r3, #0]
 8001ce6:	e016      	b.n	8001d16 <process_FC15+0xd4>
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001cee:	897b      	ldrh	r3, [r7, #10]
 8001cf0:	005b      	lsls	r3, r3, #1
 8001cf2:	4413      	add	r3, r2
 8001cf4:	8819      	ldrh	r1, [r3, #0]
 8001cf6:	7a7b      	ldrb	r3, [r7, #9]
 8001cf8:	2201      	movs	r2, #1
 8001cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8001cfe:	b29b      	uxth	r3, r3
 8001d00:	43db      	mvns	r3, r3
 8001d02:	b29a      	uxth	r2, r3
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	f8d3 0098 	ldr.w	r0, [r3, #152]	; 0x98
 8001d0a:	897b      	ldrh	r3, [r7, #10]
 8001d0c:	005b      	lsls	r3, r3, #1
 8001d0e:	4403      	add	r3, r0
 8001d10:	400a      	ands	r2, r1
 8001d12:	b292      	uxth	r2, r2
 8001d14:	801a      	strh	r2, [r3, #0]
 8001d16:	7dbb      	ldrb	r3, [r7, #22]
 8001d18:	3301      	adds	r3, #1
 8001d1a:	75bb      	strb	r3, [r7, #22]
 8001d1c:	7dbb      	ldrb	r3, [r7, #22]
 8001d1e:	2b07      	cmp	r3, #7
 8001d20:	d904      	bls.n	8001d2c <process_FC15+0xea>
 8001d22:	2300      	movs	r3, #0
 8001d24:	75bb      	strb	r3, [r7, #22]
 8001d26:	7dfb      	ldrb	r3, [r7, #23]
 8001d28:	3301      	adds	r3, #1
 8001d2a:	75fb      	strb	r3, [r7, #23]
 8001d2c:	8abb      	ldrh	r3, [r7, #20]
 8001d2e:	3301      	adds	r3, #1
 8001d30:	82bb      	strh	r3, [r7, #20]
 8001d32:	8aba      	ldrh	r2, [r7, #20]
 8001d34:	8a3b      	ldrh	r3, [r7, #16]
 8001d36:	429a      	cmp	r2, r3
 8001d38:	d3a2      	bcc.n	8001c80 <process_FC15+0x3e>
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	2206      	movs	r2, #6
 8001d3e:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001d48:	3302      	adds	r3, #2
 8001d4a:	73fb      	strb	r3, [r7, #15]
 8001d4c:	6878      	ldr	r0, [r7, #4]
 8001d4e:	f7ff fd3d 	bl	80017cc <sendTxBuffer>
 8001d52:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d56:	4618      	mov	r0, r3
 8001d58:	3718      	adds	r7, #24
 8001d5a:	46bd      	mov	sp, r7
 8001d5c:	bd80      	pop	{r7, pc}

08001d5e <process_FC16>:
 8001d5e:	b580      	push	{r7, lr}
 8001d60:	b086      	sub	sp, #24
 8001d62:	af00      	add	r7, sp, #0
 8001d64:	6078      	str	r0, [r7, #4]
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	7d5b      	ldrb	r3, [r3, #21]
 8001d6a:	021b      	lsls	r3, r3, #8
 8001d6c:	b21a      	sxth	r2, r3
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	7d9b      	ldrb	r3, [r3, #22]
 8001d72:	b21b      	sxth	r3, r3
 8001d74:	4313      	orrs	r3, r2
 8001d76:	b21b      	sxth	r3, r3
 8001d78:	82bb      	strh	r3, [r7, #20]
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	7ddb      	ldrb	r3, [r3, #23]
 8001d7e:	021b      	lsls	r3, r3, #8
 8001d80:	b21a      	sxth	r2, r3
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	7e1b      	ldrb	r3, [r3, #24]
 8001d86:	b21b      	sxth	r3, r3
 8001d88:	4313      	orrs	r3, r2
 8001d8a:	b21b      	sxth	r3, r3
 8001d8c:	827b      	strh	r3, [r7, #18]
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	2200      	movs	r2, #0
 8001d92:	75da      	strb	r2, [r3, #23]
 8001d94:	8a7b      	ldrh	r3, [r7, #18]
 8001d96:	b2da      	uxtb	r2, r3
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	761a      	strb	r2, [r3, #24]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	2206      	movs	r2, #6
 8001da0:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8001da4:	2300      	movs	r3, #0
 8001da6:	82fb      	strh	r3, [r7, #22]
 8001da8:	e01d      	b.n	8001de6 <process_FC16+0x88>
 8001daa:	8afb      	ldrh	r3, [r7, #22]
 8001dac:	005b      	lsls	r3, r3, #1
 8001dae:	3307      	adds	r3, #7
 8001db0:	687a      	ldr	r2, [r7, #4]
 8001db2:	4413      	add	r3, r2
 8001db4:	7cd8      	ldrb	r0, [r3, #19]
 8001db6:	8afb      	ldrh	r3, [r7, #22]
 8001db8:	3304      	adds	r3, #4
 8001dba:	005b      	lsls	r3, r3, #1
 8001dbc:	687a      	ldr	r2, [r7, #4]
 8001dbe:	4413      	add	r3, r2
 8001dc0:	7cdb      	ldrb	r3, [r3, #19]
 8001dc2:	4619      	mov	r1, r3
 8001dc4:	f7ff fc8c 	bl	80016e0 <word>
 8001dc8:	4603      	mov	r3, r0
 8001dca:	81fb      	strh	r3, [r7, #14]
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8001dd2:	8ab9      	ldrh	r1, [r7, #20]
 8001dd4:	8afb      	ldrh	r3, [r7, #22]
 8001dd6:	440b      	add	r3, r1
 8001dd8:	005b      	lsls	r3, r3, #1
 8001dda:	4413      	add	r3, r2
 8001ddc:	89fa      	ldrh	r2, [r7, #14]
 8001dde:	801a      	strh	r2, [r3, #0]
 8001de0:	8afb      	ldrh	r3, [r7, #22]
 8001de2:	3301      	adds	r3, #1
 8001de4:	82fb      	strh	r3, [r7, #22]
 8001de6:	8afa      	ldrh	r2, [r7, #22]
 8001de8:	8a7b      	ldrh	r3, [r7, #18]
 8001dea:	429a      	cmp	r2, r3
 8001dec:	d3dd      	bcc.n	8001daa <process_FC16+0x4c>
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8001df4:	3302      	adds	r3, #2
 8001df6:	747b      	strb	r3, [r7, #17]
 8001df8:	6878      	ldr	r0, [r7, #4]
 8001dfa:	f7ff fce7 	bl	80017cc <sendTxBuffer>
 8001dfe:	f997 3011 	ldrsb.w	r3, [r7, #17]
 8001e02:	4618      	mov	r0, r3
 8001e04:	3718      	adds	r7, #24
 8001e06:	46bd      	mov	sp, r7
 8001e08:	bd80      	pop	{r7, pc}
	...

08001e0c <HAL_UART_TxCpltCallback>:
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b086      	sub	sp, #24
 8001e10:	af02      	add	r7, sp, #8
 8001e12:	6078      	str	r0, [r7, #4]
 8001e14:	2300      	movs	r3, #0
 8001e16:	60bb      	str	r3, [r7, #8]
 8001e18:	2300      	movs	r3, #0
 8001e1a:	60fb      	str	r3, [r7, #12]
 8001e1c:	e019      	b.n	8001e52 <HAL_UART_TxCpltCallback+0x46>
 8001e1e:	4a17      	ldr	r2, [pc, #92]	; (8001e7c <HAL_UART_TxCpltCallback+0x70>)
 8001e20:	68fb      	ldr	r3, [r7, #12]
 8001e22:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e26:	685b      	ldr	r3, [r3, #4]
 8001e28:	687a      	ldr	r2, [r7, #4]
 8001e2a:	429a      	cmp	r2, r3
 8001e2c:	d10e      	bne.n	8001e4c <HAL_UART_TxCpltCallback+0x40>
 8001e2e:	4a13      	ldr	r2, [pc, #76]	; (8001e7c <HAL_UART_TxCpltCallback+0x70>)
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e36:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
 8001e3a:	f107 0308 	add.w	r3, r7, #8
 8001e3e:	9300      	str	r3, [sp, #0]
 8001e40:	2300      	movs	r3, #0
 8001e42:	2200      	movs	r2, #0
 8001e44:	2100      	movs	r1, #0
 8001e46:	f006 fe03 	bl	8008a50 <xTaskGenericNotifyFromISR>
 8001e4a:	e008      	b.n	8001e5e <HAL_UART_TxCpltCallback+0x52>
 8001e4c:	68fb      	ldr	r3, [r7, #12]
 8001e4e:	3301      	adds	r3, #1
 8001e50:	60fb      	str	r3, [r7, #12]
 8001e52:	4b0b      	ldr	r3, [pc, #44]	; (8001e80 <HAL_UART_TxCpltCallback+0x74>)
 8001e54:	781b      	ldrb	r3, [r3, #0]
 8001e56:	461a      	mov	r2, r3
 8001e58:	68fb      	ldr	r3, [r7, #12]
 8001e5a:	4293      	cmp	r3, r2
 8001e5c:	dbdf      	blt.n	8001e1e <HAL_UART_TxCpltCallback+0x12>
 8001e5e:	68bb      	ldr	r3, [r7, #8]
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d007      	beq.n	8001e74 <HAL_UART_TxCpltCallback+0x68>
 8001e64:	4b07      	ldr	r3, [pc, #28]	; (8001e84 <HAL_UART_TxCpltCallback+0x78>)
 8001e66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001e6a:	601a      	str	r2, [r3, #0]
 8001e6c:	f3bf 8f4f 	dsb	sy
 8001e70:	f3bf 8f6f 	isb	sy
 8001e74:	bf00      	nop
 8001e76:	3710      	adds	r7, #16
 8001e78:	46bd      	mov	sp, r7
 8001e7a:	bd80      	pop	{r7, pc}
 8001e7c:	20000dd8 	.word	0x20000dd8
 8001e80:	200000bc 	.word	0x200000bc
 8001e84:	e000ed04 	.word	0xe000ed04

08001e88 <HAL_UART_RxCpltCallback>:
 8001e88:	b590      	push	{r4, r7, lr}
 8001e8a:	b087      	sub	sp, #28
 8001e8c:	af02      	add	r7, sp, #8
 8001e8e:	6078      	str	r0, [r7, #4]
 8001e90:	2300      	movs	r3, #0
 8001e92:	60bb      	str	r3, [r7, #8]
 8001e94:	2300      	movs	r3, #0
 8001e96:	60fb      	str	r3, [r7, #12]
 8001e98:	e042      	b.n	8001f20 <HAL_UART_RxCpltCallback+0x98>
 8001e9a:	4a2d      	ldr	r2, [pc, #180]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001e9c:	68fb      	ldr	r3, [r7, #12]
 8001e9e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ea2:	685b      	ldr	r3, [r3, #4]
 8001ea4:	687a      	ldr	r2, [r7, #4]
 8001ea6:	429a      	cmp	r2, r3
 8001ea8:	d137      	bne.n	8001f1a <HAL_UART_RxCpltCallback+0x92>
 8001eaa:	4a29      	ldr	r2, [pc, #164]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001eac:	68fb      	ldr	r3, [r7, #12]
 8001eae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001eb2:	f893 3140 	ldrb.w	r3, [r3, #320]	; 0x140
 8001eb6:	2b01      	cmp	r3, #1
 8001eb8:	d139      	bne.n	8001f2e <HAL_UART_RxCpltCallback+0xa6>
 8001eba:	4a25      	ldr	r2, [pc, #148]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001ebc:	68fb      	ldr	r3, [r7, #12]
 8001ebe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ec2:	f103 02bc 	add.w	r2, r3, #188	; 0xbc
 8001ec6:	4922      	ldr	r1, [pc, #136]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8001ece:	f893 30a6 	ldrb.w	r3, [r3, #166]	; 0xa6
 8001ed2:	4619      	mov	r1, r3
 8001ed4:	4610      	mov	r0, r2
 8001ed6:	f7fe fc0f 	bl	80006f8 <RingAdd>
 8001eda:	4a1d      	ldr	r2, [pc, #116]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001edc:	68fb      	ldr	r3, [r7, #12]
 8001ede:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001ee2:	6858      	ldr	r0, [r3, #4]
 8001ee4:	4a1a      	ldr	r2, [pc, #104]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001ee6:	68fb      	ldr	r3, [r7, #12]
 8001ee8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001eec:	33a6      	adds	r3, #166	; 0xa6
 8001eee:	2201      	movs	r2, #1
 8001ef0:	4619      	mov	r1, r3
 8001ef2:	f003 fcbf 	bl	8005874 <HAL_UART_Receive_IT>
 8001ef6:	4a16      	ldr	r2, [pc, #88]	; (8001f50 <HAL_UART_RxCpltCallback+0xc8>)
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001efe:	f8d3 40b0 	ldr.w	r4, [r3, #176]	; 0xb0
 8001f02:	f005 ffe7 	bl	8007ed4 <xTaskGetTickCountFromISR>
 8001f06:	4602      	mov	r2, r0
 8001f08:	f107 0308 	add.w	r3, r7, #8
 8001f0c:	2100      	movs	r1, #0
 8001f0e:	9100      	str	r1, [sp, #0]
 8001f10:	2107      	movs	r1, #7
 8001f12:	4620      	mov	r0, r4
 8001f14:	f006 ff56 	bl	8008dc4 <xTimerGenericCommand>
 8001f18:	e009      	b.n	8001f2e <HAL_UART_RxCpltCallback+0xa6>
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	3301      	adds	r3, #1
 8001f1e:	60fb      	str	r3, [r7, #12]
 8001f20:	4b0c      	ldr	r3, [pc, #48]	; (8001f54 <HAL_UART_RxCpltCallback+0xcc>)
 8001f22:	781b      	ldrb	r3, [r3, #0]
 8001f24:	461a      	mov	r2, r3
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	4293      	cmp	r3, r2
 8001f2a:	dbb6      	blt.n	8001e9a <HAL_UART_RxCpltCallback+0x12>
 8001f2c:	e000      	b.n	8001f30 <HAL_UART_RxCpltCallback+0xa8>
 8001f2e:	bf00      	nop
 8001f30:	68bb      	ldr	r3, [r7, #8]
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d007      	beq.n	8001f46 <HAL_UART_RxCpltCallback+0xbe>
 8001f36:	4b08      	ldr	r3, [pc, #32]	; (8001f58 <HAL_UART_RxCpltCallback+0xd0>)
 8001f38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001f3c:	601a      	str	r2, [r3, #0]
 8001f3e:	f3bf 8f4f 	dsb	sy
 8001f42:	f3bf 8f6f 	isb	sy
 8001f46:	bf00      	nop
 8001f48:	3714      	adds	r7, #20
 8001f4a:	46bd      	mov	sp, r7
 8001f4c:	bd90      	pop	{r4, r7, pc}
 8001f4e:	bf00      	nop
 8001f50:	20000dd8 	.word	0x20000dd8
 8001f54:	200000bc 	.word	0x200000bc
 8001f58:	e000ed04 	.word	0xe000ed04

08001f5c <HAL_GPIO_EXTI_Callback>:




// Si se interrumpe por flanco ascendente del pin 0 (Enconder optico)
void HAL_GPIO_EXTI_Callback (uint16_t GPIO_Pin){
 8001f5c:	b590      	push	{r4, r7, lr}
 8001f5e:	b085      	sub	sp, #20
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	4603      	mov	r3, r0
 8001f64:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == D01_Encoder_Pin){
 8001f66:	88fb      	ldrh	r3, [r7, #6]
 8001f68:	2b40      	cmp	r3, #64	; 0x40
 8001f6a:	f040 80bc 	bne.w	80020e6 <HAL_GPIO_EXTI_Callback+0x18a>
		uint32_t ticksAux = 0;
 8001f6e:	2300      	movs	r3, #0
 8001f70:	60fb      	str	r3, [r7, #12]
		interrupciones = interrupciones + 1;
 8001f72:	4b5f      	ldr	r3, [pc, #380]	; (80020f0 <HAL_GPIO_EXTI_Callback+0x194>)
 8001f74:	881b      	ldrh	r3, [r3, #0]
 8001f76:	3301      	adds	r3, #1
 8001f78:	b29a      	uxth	r2, r3
 8001f7a:	4b5d      	ldr	r3, [pc, #372]	; (80020f0 <HAL_GPIO_EXTI_Callback+0x194>)
 8001f7c:	801a      	strh	r2, [r3, #0]
//		incremento_enconder += 1;
		ticksAux = ticksPrev;
 8001f7e:	4b5d      	ldr	r3, [pc, #372]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	60fb      	str	r3, [r7, #12]
		ticksPrev = ticksNow;
 8001f84:	4b5c      	ldr	r3, [pc, #368]	; (80020f8 <HAL_GPIO_EXTI_Callback+0x19c>)
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	4a5a      	ldr	r2, [pc, #360]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 8001f8a:	6013      	str	r3, [r2, #0]
		ticksNow = __HAL_TIM_GetCounter(&htim2);
 8001f8c:	4b5b      	ldr	r3, [pc, #364]	; (80020fc <HAL_GPIO_EXTI_Callback+0x1a0>)
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f92:	4a59      	ldr	r2, [pc, #356]	; (80020f8 <HAL_GPIO_EXTI_Callback+0x19c>)
 8001f94:	6013      	str	r3, [r2, #0]

		 if (overflow == 0){
 8001f96:	4b5a      	ldr	r3, [pc, #360]	; (8002100 <HAL_GPIO_EXTI_Callback+0x1a4>)
 8001f98:	781b      	ldrb	r3, [r3, #0]
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d144      	bne.n	8002028 <HAL_GPIO_EXTI_Callback+0xcc>
			// Todo cool, calculo normal
			deltaTicks = ticksNow - ticksPrev;
 8001f9e:	4b56      	ldr	r3, [pc, #344]	; (80020f8 <HAL_GPIO_EXTI_Callback+0x19c>)
 8001fa0:	681a      	ldr	r2, [r3, #0]
 8001fa2:	4b54      	ldr	r3, [pc, #336]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	1ad3      	subs	r3, r2, r3
 8001fa8:	4618      	mov	r0, r3
 8001faa:	f7fe f987 	bl	80002bc <__aeabi_ui2f>
 8001fae:	4603      	mov	r3, r0
 8001fb0:	4a54      	ldr	r2, [pc, #336]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 8001fb2:	6013      	str	r3, [r2, #0]
			if (deltaTicks > tickFilter){
 8001fb4:	4b54      	ldr	r3, [pc, #336]	; (8002108 <HAL_GPIO_EXTI_Callback+0x1ac>)
 8001fb6:	881b      	ldrh	r3, [r3, #0]
 8001fb8:	4618      	mov	r0, r3
 8001fba:	f7fe f983 	bl	80002c4 <__aeabi_i2f>
 8001fbe:	4602      	mov	r2, r0
 8001fc0:	4b50      	ldr	r3, [pc, #320]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	4619      	mov	r1, r3
 8001fc6:	4610      	mov	r0, r2
 8001fc8:	f7fe fb6e 	bl	80006a8 <__aeabi_fcmplt>
 8001fcc:	4603      	mov	r3, r0
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d022      	beq.n	8002018 <HAL_GPIO_EXTI_Callback+0xbc>
			velocidad = ((float)1/(float)ranuras)/(((float)deltaTicks)/(float)(fsTmr2));
 8001fd2:	4b4e      	ldr	r3, [pc, #312]	; (800210c <HAL_GPIO_EXTI_Callback+0x1b0>)
 8001fd4:	781b      	ldrb	r3, [r3, #0]
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	f7fe f970 	bl	80002bc <__aeabi_ui2f>
 8001fdc:	4603      	mov	r3, r0
 8001fde:	4619      	mov	r1, r3
 8001fe0:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8001fe4:	f7fe fa76 	bl	80004d4 <__aeabi_fdiv>
 8001fe8:	4603      	mov	r3, r0
 8001fea:	461c      	mov	r4, r3
 8001fec:	4b45      	ldr	r3, [pc, #276]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	4a47      	ldr	r2, [pc, #284]	; (8002110 <HAL_GPIO_EXTI_Callback+0x1b4>)
 8001ff2:	6812      	ldr	r2, [r2, #0]
 8001ff4:	4611      	mov	r1, r2
 8001ff6:	4618      	mov	r0, r3
 8001ff8:	f7fe fa6c 	bl	80004d4 <__aeabi_fdiv>
 8001ffc:	4603      	mov	r3, r0
 8001ffe:	4619      	mov	r1, r3
 8002000:	4620      	mov	r0, r4
 8002002:	f7fe fa67 	bl	80004d4 <__aeabi_fdiv>
 8002006:	4603      	mov	r3, r0
 8002008:	461a      	mov	r2, r3
 800200a:	4b42      	ldr	r3, [pc, #264]	; (8002114 <HAL_GPIO_EXTI_Callback+0x1b8>)
 800200c:	601a      	str	r2, [r3, #0]
//			resultMean = moveMean(mean,velocidad);
			resultMean = velocidad;
 800200e:	4b41      	ldr	r3, [pc, #260]	; (8002114 <HAL_GPIO_EXTI_Callback+0x1b8>)
 8002010:	681b      	ldr	r3, [r3, #0]
 8002012:	4a41      	ldr	r2, [pc, #260]	; (8002118 <HAL_GPIO_EXTI_Callback+0x1bc>)
 8002014:	6013      	str	r3, [r2, #0]
 8002016:	e057      	b.n	80020c8 <HAL_GPIO_EXTI_Callback+0x16c>
			}
			else{
				ticksNow = ticksPrev;
 8002018:	4b36      	ldr	r3, [pc, #216]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	4a36      	ldr	r2, [pc, #216]	; (80020f8 <HAL_GPIO_EXTI_Callback+0x19c>)
 800201e:	6013      	str	r3, [r2, #0]
				ticksPrev = ticksAux;
 8002020:	4a34      	ldr	r2, [pc, #208]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 8002022:	68fb      	ldr	r3, [r7, #12]
 8002024:	6013      	str	r3, [r2, #0]
 8002026:	e04f      	b.n	80020c8 <HAL_GPIO_EXTI_Callback+0x16c>
			}
		} else{
			// Tuve algun desborde y tengo que tenerlo en cuenta
			deltaTicks = (ticksNow + overflow * cantTicksTmr2)- ticksPrev;
 8002028:	4b35      	ldr	r3, [pc, #212]	; (8002100 <HAL_GPIO_EXTI_Callback+0x1a4>)
 800202a:	781b      	ldrb	r3, [r3, #0]
 800202c:	461a      	mov	r2, r3
 800202e:	4b3b      	ldr	r3, [pc, #236]	; (800211c <HAL_GPIO_EXTI_Callback+0x1c0>)
 8002030:	881b      	ldrh	r3, [r3, #0]
 8002032:	fb03 f302 	mul.w	r3, r3, r2
 8002036:	461a      	mov	r2, r3
 8002038:	4b2f      	ldr	r3, [pc, #188]	; (80020f8 <HAL_GPIO_EXTI_Callback+0x19c>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	441a      	add	r2, r3
 800203e:	4b2d      	ldr	r3, [pc, #180]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	1ad3      	subs	r3, r2, r3
 8002044:	4618      	mov	r0, r3
 8002046:	f7fe f939 	bl	80002bc <__aeabi_ui2f>
 800204a:	4603      	mov	r3, r0
 800204c:	4a2d      	ldr	r2, [pc, #180]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 800204e:	6013      	str	r3, [r2, #0]
			if (deltaTicks > tickFilter){
 8002050:	4b2d      	ldr	r3, [pc, #180]	; (8002108 <HAL_GPIO_EXTI_Callback+0x1ac>)
 8002052:	881b      	ldrh	r3, [r3, #0]
 8002054:	4618      	mov	r0, r3
 8002056:	f7fe f935 	bl	80002c4 <__aeabi_i2f>
 800205a:	4602      	mov	r2, r0
 800205c:	4b29      	ldr	r3, [pc, #164]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	4619      	mov	r1, r3
 8002062:	4610      	mov	r0, r2
 8002064:	f7fe fb20 	bl	80006a8 <__aeabi_fcmplt>
 8002068:	4603      	mov	r3, r0
 800206a:	2b00      	cmp	r3, #0
 800206c:	d025      	beq.n	80020ba <HAL_GPIO_EXTI_Callback+0x15e>
				velocidad = ((float)1/(float)ranuras)/(((float)deltaTicks)/(float)(fsTmr2));
 800206e:	4b27      	ldr	r3, [pc, #156]	; (800210c <HAL_GPIO_EXTI_Callback+0x1b0>)
 8002070:	781b      	ldrb	r3, [r3, #0]
 8002072:	4618      	mov	r0, r3
 8002074:	f7fe f922 	bl	80002bc <__aeabi_ui2f>
 8002078:	4603      	mov	r3, r0
 800207a:	4619      	mov	r1, r3
 800207c:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
 8002080:	f7fe fa28 	bl	80004d4 <__aeabi_fdiv>
 8002084:	4603      	mov	r3, r0
 8002086:	461c      	mov	r4, r3
 8002088:	4b1e      	ldr	r3, [pc, #120]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	4a20      	ldr	r2, [pc, #128]	; (8002110 <HAL_GPIO_EXTI_Callback+0x1b4>)
 800208e:	6812      	ldr	r2, [r2, #0]
 8002090:	4611      	mov	r1, r2
 8002092:	4618      	mov	r0, r3
 8002094:	f7fe fa1e 	bl	80004d4 <__aeabi_fdiv>
 8002098:	4603      	mov	r3, r0
 800209a:	4619      	mov	r1, r3
 800209c:	4620      	mov	r0, r4
 800209e:	f7fe fa19 	bl	80004d4 <__aeabi_fdiv>
 80020a2:	4603      	mov	r3, r0
 80020a4:	461a      	mov	r2, r3
 80020a6:	4b1b      	ldr	r3, [pc, #108]	; (8002114 <HAL_GPIO_EXTI_Callback+0x1b8>)
 80020a8:	601a      	str	r2, [r3, #0]
//				resultMean = moveMean(mean,velocidad);
				resultMean = velocidad;
 80020aa:	4b1a      	ldr	r3, [pc, #104]	; (8002114 <HAL_GPIO_EXTI_Callback+0x1b8>)
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	4a1a      	ldr	r2, [pc, #104]	; (8002118 <HAL_GPIO_EXTI_Callback+0x1bc>)
 80020b0:	6013      	str	r3, [r2, #0]
				overflow = 0;
 80020b2:	4b13      	ldr	r3, [pc, #76]	; (8002100 <HAL_GPIO_EXTI_Callback+0x1a4>)
 80020b4:	2200      	movs	r2, #0
 80020b6:	701a      	strb	r2, [r3, #0]
 80020b8:	e006      	b.n	80020c8 <HAL_GPIO_EXTI_Callback+0x16c>
			}
			else{
				ticksNow = ticksPrev;
 80020ba:	4b0e      	ldr	r3, [pc, #56]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	4a0e      	ldr	r2, [pc, #56]	; (80020f8 <HAL_GPIO_EXTI_Callback+0x19c>)
 80020c0:	6013      	str	r3, [r2, #0]
				ticksPrev = ticksAux;
 80020c2:	4a0c      	ldr	r2, [pc, #48]	; (80020f4 <HAL_GPIO_EXTI_Callback+0x198>)
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	6013      	str	r3, [r2, #0]
			}
		}

		if(deltaTicks == 0){
 80020c8:	4b0e      	ldr	r3, [pc, #56]	; (8002104 <HAL_GPIO_EXTI_Callback+0x1a8>)
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	f04f 0100 	mov.w	r1, #0
 80020d0:	4618      	mov	r0, r3
 80020d2:	f7fe fadf 	bl	8000694 <__aeabi_fcmpeq>
 80020d6:	4603      	mov	r3, r0
 80020d8:	2b00      	cmp	r3, #0
 80020da:	d100      	bne.n	80020de <HAL_GPIO_EXTI_Callback+0x182>
			velocidad = 0;
	 }
	}

}
 80020dc:	e003      	b.n	80020e6 <HAL_GPIO_EXTI_Callback+0x18a>
			velocidad = 0;
 80020de:	4b0d      	ldr	r3, [pc, #52]	; (8002114 <HAL_GPIO_EXTI_Callback+0x1b8>)
 80020e0:	f04f 0200 	mov.w	r2, #0
 80020e4:	601a      	str	r2, [r3, #0]
}
 80020e6:	bf00      	nop
 80020e8:	3714      	adds	r7, #20
 80020ea:	46bd      	mov	sp, r7
 80020ec:	bd90      	pop	{r4, r7, pc}
 80020ee:	bf00      	nop
 80020f0:	200000d8 	.word	0x200000d8
 80020f4:	200000c4 	.word	0x200000c4
 80020f8:	200000c8 	.word	0x200000c8
 80020fc:	2000102c 	.word	0x2000102c
 8002100:	200000cc 	.word	0x200000cc
 8002104:	200000d0 	.word	0x200000d0
 8002108:	20000024 	.word	0x20000024
 800210c:	20000020 	.word	0x20000020
 8002110:	20000028 	.word	0x20000028
 8002114:	200000c0 	.word	0x200000c0
 8002118:	200000d4 	.word	0x200000d4
 800211c:	20000022 	.word	0x20000022

08002120 <Sentido>:
//	 overflow += 1;
//  }
//  /* USER CODE END Callback 1 */
//}

void Sentido(uint16_t valor){
 8002120:	b580      	push	{r7, lr}
 8002122:	b082      	sub	sp, #8
 8002124:	af00      	add	r7, sp, #0
 8002126:	4603      	mov	r3, r0
 8002128:	80fb      	strh	r3, [r7, #6]
	//Motor gira en un sentido
	if(valor == 0){
 800212a:	88fb      	ldrh	r3, [r7, #6]
 800212c:	2b00      	cmp	r3, #0
 800212e:	d10c      	bne.n	800214a <Sentido+0x2a>
		HAL_GPIO_WritePin(OUT1_2_GPIO_Port, OUT1_2_Pin, SET);
 8002130:	2201      	movs	r2, #1
 8002132:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002136:	4815      	ldr	r0, [pc, #84]	; (800218c <Sentido+0x6c>)
 8002138:	f001 fe2c 	bl	8003d94 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(OUT1_1_GPIO_Port, OUT1_1_Pin, RESET);
 800213c:	2200      	movs	r2, #0
 800213e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002142:	4812      	ldr	r0, [pc, #72]	; (800218c <Sentido+0x6c>)
 8002144:	f001 fe26 	bl	8003d94 <HAL_GPIO_WritePin>
	}
	else{ // Break
		HAL_GPIO_WritePin(OUT1_2_GPIO_Port, OUT1_2_Pin, RESET);
		HAL_GPIO_WritePin(OUT1_1_GPIO_Port, OUT1_1_Pin, RESET);
	}
}
 8002148:	e01b      	b.n	8002182 <Sentido+0x62>
	else if(valor == 1){
 800214a:	88fb      	ldrh	r3, [r7, #6]
 800214c:	2b01      	cmp	r3, #1
 800214e:	d10c      	bne.n	800216a <Sentido+0x4a>
		HAL_GPIO_WritePin(OUT1_2_GPIO_Port, OUT1_2_Pin, RESET);
 8002150:	2200      	movs	r2, #0
 8002152:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002156:	480d      	ldr	r0, [pc, #52]	; (800218c <Sentido+0x6c>)
 8002158:	f001 fe1c 	bl	8003d94 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(OUT1_1_GPIO_Port, OUT1_1_Pin, SET);
 800215c:	2201      	movs	r2, #1
 800215e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002162:	480a      	ldr	r0, [pc, #40]	; (800218c <Sentido+0x6c>)
 8002164:	f001 fe16 	bl	8003d94 <HAL_GPIO_WritePin>
}
 8002168:	e00b      	b.n	8002182 <Sentido+0x62>
		HAL_GPIO_WritePin(OUT1_2_GPIO_Port, OUT1_2_Pin, RESET);
 800216a:	2200      	movs	r2, #0
 800216c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002170:	4806      	ldr	r0, [pc, #24]	; (800218c <Sentido+0x6c>)
 8002172:	f001 fe0f 	bl	8003d94 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(OUT1_1_GPIO_Port, OUT1_1_Pin, RESET);
 8002176:	2200      	movs	r2, #0
 8002178:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800217c:	4803      	ldr	r0, [pc, #12]	; (800218c <Sentido+0x6c>)
 800217e:	f001 fe09 	bl	8003d94 <HAL_GPIO_WritePin>
}
 8002182:	bf00      	nop
 8002184:	3708      	adds	r7, #8
 8002186:	46bd      	mov	sp, r7
 8002188:	bd80      	pop	{r7, pc}
 800218a:	bf00      	nop
 800218c:	40010c00 	.word	0x40010c00

08002190 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002190:	b580      	push	{r7, lr}
 8002192:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002194:	f000 fe68 	bl	8002e68 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002198:	f000 f884 	bl	80022a4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800219c:	f000 fa9a 	bl	80026d4 <MX_GPIO_Init>
  MX_USART3_UART_Init();
 80021a0:	f000 fa50 	bl	8002644 <MX_USART3_UART_Init>
  MX_TIM1_Init();
 80021a4:	f000 f93e 	bl	8002424 <MX_TIM1_Init>
  MX_DMA_Init();
 80021a8:	f000 fa76 	bl	8002698 <MX_DMA_Init>
  MX_ADC1_Init();
 80021ac:	f000 f8d6 	bl	800235c <MX_ADC1_Init>
  MX_TIM2_Init();
 80021b0:	f000 f9fc 	bl	80025ac <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */

  // Definiciones para la biblioteca de modbus
   ModbusH.uModbusType = MB_SLAVE;
 80021b4:	4b29      	ldr	r3, [pc, #164]	; (800225c <main+0xcc>)
 80021b6:	2203      	movs	r2, #3
 80021b8:	701a      	strb	r2, [r3, #0]
   ModbusH.port =  &huart3;
 80021ba:	4b28      	ldr	r3, [pc, #160]	; (800225c <main+0xcc>)
 80021bc:	4a28      	ldr	r2, [pc, #160]	; (8002260 <main+0xd0>)
 80021be:	605a      	str	r2, [r3, #4]
   ModbusH.u8id = 1; //Modbus slave ID
 80021c0:	4b26      	ldr	r3, [pc, #152]	; (800225c <main+0xcc>)
 80021c2:	2201      	movs	r2, #1
 80021c4:	721a      	strb	r2, [r3, #8]
   ModbusH.u16timeOut = 1000;
 80021c6:	4b25      	ldr	r3, [pc, #148]	; (800225c <main+0xcc>)
 80021c8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80021cc:	f8a3 20a2 	strh.w	r2, [r3, #162]	; 0xa2
   ModbusH.EN_Port = NULL;
 80021d0:	4b22      	ldr	r3, [pc, #136]	; (800225c <main+0xcc>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	60da      	str	r2, [r3, #12]
   ModbusH.u16regs = ModbusDATA;
 80021d6:	4b21      	ldr	r3, [pc, #132]	; (800225c <main+0xcc>)
 80021d8:	4a22      	ldr	r2, [pc, #136]	; (8002264 <main+0xd4>)
 80021da:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
   ModbusH.u16regsize= sizeof(ModbusDATA)/sizeof(ModbusDATA[0]);
 80021de:	4b1f      	ldr	r3, [pc, #124]	; (800225c <main+0xcc>)
 80021e0:	220d      	movs	r2, #13
 80021e2:	f8a3 20a4 	strh.w	r2, [r3, #164]	; 0xa4
   ModbusH.xTypeHW = USART_HW;
 80021e6:	4b1d      	ldr	r3, [pc, #116]	; (800225c <main+0xcc>)
 80021e8:	2201      	movs	r2, #1
 80021ea:	f883 2140 	strb.w	r2, [r3, #320]	; 0x140

   //Initialize Modbus library
   ModbusInit(&ModbusH);
 80021ee:	481b      	ldr	r0, [pc, #108]	; (800225c <main+0xcc>)
 80021f0:	f7fe fb48 	bl	8000884 <ModbusInit>
   //Start capturing traffic on serial Port
   ModbusStart(&ModbusH);
 80021f4:	4819      	ldr	r0, [pc, #100]	; (800225c <main+0xcc>)
 80021f6:	f7fe fbe7 	bl	80009c8 <ModbusStart>

   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 80021fa:	2100      	movs	r1, #0
 80021fc:	481a      	ldr	r0, [pc, #104]	; (8002268 <main+0xd8>)
 80021fe:	f002 fbf3 	bl	80049e8 <HAL_TIM_PWM_Start>
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8002202:	f004 f84b 	bl	800629c <osKernelInitialize>
  /* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* Create the queue(s) */
  /* creation of QueueDataADC */
  QueueDataADCHandle = osMessageQueueNew (16, sizeof(uint16_t), &QueueDataADC_attributes);
 8002206:	4a19      	ldr	r2, [pc, #100]	; (800226c <main+0xdc>)
 8002208:	2102      	movs	r1, #2
 800220a:	2010      	movs	r0, #16
 800220c:	f004 fa20 	bl	8006650 <osMessageQueueNew>
 8002210:	4603      	mov	r3, r0
 8002212:	4a17      	ldr	r2, [pc, #92]	; (8002270 <main+0xe0>)
 8002214:	6013      	str	r3, [r2, #0]
//  }
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of Modbus */
  ModbusHandle = osThreadNew(StartModbus, NULL, &Modbus_attributes);
 8002216:	4a17      	ldr	r2, [pc, #92]	; (8002274 <main+0xe4>)
 8002218:	2100      	movs	r1, #0
 800221a:	4817      	ldr	r0, [pc, #92]	; (8002278 <main+0xe8>)
 800221c:	f004 f8a4 	bl	8006368 <osThreadNew>
 8002220:	4603      	mov	r3, r0
 8002222:	4a16      	ldr	r2, [pc, #88]	; (800227c <main+0xec>)
 8002224:	6013      	str	r3, [r2, #0]

  /* creation of ADC */
  ADCHandle = osThreadNew(StartADC, NULL, &ADC_attributes);
 8002226:	4a16      	ldr	r2, [pc, #88]	; (8002280 <main+0xf0>)
 8002228:	2100      	movs	r1, #0
 800222a:	4816      	ldr	r0, [pc, #88]	; (8002284 <main+0xf4>)
 800222c:	f004 f89c 	bl	8006368 <osThreadNew>
 8002230:	4603      	mov	r3, r0
 8002232:	4a15      	ldr	r2, [pc, #84]	; (8002288 <main+0xf8>)
 8002234:	6013      	str	r3, [r2, #0]

  /* creation of Encoders */
  EncodersHandle = osThreadNew(StartEncoders, NULL, &Encoders_attributes);
 8002236:	4a15      	ldr	r2, [pc, #84]	; (800228c <main+0xfc>)
 8002238:	2100      	movs	r1, #0
 800223a:	4815      	ldr	r0, [pc, #84]	; (8002290 <main+0x100>)
 800223c:	f004 f894 	bl	8006368 <osThreadNew>
 8002240:	4603      	mov	r3, r0
 8002242:	4a14      	ldr	r2, [pc, #80]	; (8002294 <main+0x104>)
 8002244:	6013      	str	r3, [r2, #0]

  /* creation of Control */
  ControlHandle = osThreadNew(StartControl, NULL, &Control_attributes);
 8002246:	4a14      	ldr	r2, [pc, #80]	; (8002298 <main+0x108>)
 8002248:	2100      	movs	r1, #0
 800224a:	4814      	ldr	r0, [pc, #80]	; (800229c <main+0x10c>)
 800224c:	f004 f88c 	bl	8006368 <osThreadNew>
 8002250:	4603      	mov	r3, r0
 8002252:	4a13      	ldr	r2, [pc, #76]	; (80022a0 <main+0x110>)
 8002254:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 8002256:	f004 f853 	bl	8006300 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800225a:	e7fe      	b.n	800225a <main+0xca>
 800225c:	20000de0 	.word	0x20000de0
 8002260:	20000f28 	.word	0x20000f28
 8002264:	20000000 	.word	0x20000000
 8002268:	20000fe4 	.word	0x20000fe4
 800226c:	0800a274 	.word	0x0800a274
 8002270:	20001078 	.word	0x20001078
 8002274:	0800a1e4 	.word	0x0800a1e4
 8002278:	0800280d 	.word	0x0800280d
 800227c:	2000107c 	.word	0x2000107c
 8002280:	0800a208 	.word	0x0800a208
 8002284:	08002861 	.word	0x08002861
 8002288:	20001074 	.word	0x20001074
 800228c:	0800a22c 	.word	0x0800a22c
 8002290:	08002875 	.word	0x08002875
 8002294:	20000f24 	.word	0x20000f24
 8002298:	0800a250 	.word	0x0800a250
 800229c:	08002919 	.word	0x08002919
 80022a0:	20000f6c 	.word	0x20000f6c

080022a4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80022a4:	b580      	push	{r7, lr}
 80022a6:	b094      	sub	sp, #80	; 0x50
 80022a8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80022aa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80022ae:	2228      	movs	r2, #40	; 0x28
 80022b0:	2100      	movs	r1, #0
 80022b2:	4618      	mov	r0, r3
 80022b4:	f007 faae 	bl	8009814 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80022b8:	f107 0314 	add.w	r3, r7, #20
 80022bc:	2200      	movs	r2, #0
 80022be:	601a      	str	r2, [r3, #0]
 80022c0:	605a      	str	r2, [r3, #4]
 80022c2:	609a      	str	r2, [r3, #8]
 80022c4:	60da      	str	r2, [r3, #12]
 80022c6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80022c8:	1d3b      	adds	r3, r7, #4
 80022ca:	2200      	movs	r2, #0
 80022cc:	601a      	str	r2, [r3, #0]
 80022ce:	605a      	str	r2, [r3, #4]
 80022d0:	609a      	str	r2, [r3, #8]
 80022d2:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80022d4:	2301      	movs	r3, #1
 80022d6:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80022d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80022dc:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80022de:	2300      	movs	r3, #0
 80022e0:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80022e2:	2301      	movs	r3, #1
 80022e4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80022e6:	2302      	movs	r3, #2
 80022e8:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80022ea:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80022ee:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80022f0:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80022f4:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80022f6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80022fa:	4618      	mov	r0, r3
 80022fc:	f001 fd7a 	bl	8003df4 <HAL_RCC_OscConfig>
 8002300:	4603      	mov	r3, r0
 8002302:	2b00      	cmp	r3, #0
 8002304:	d001      	beq.n	800230a <SystemClock_Config+0x66>
  {
    Error_Handler();
 8002306:	f000 fb2d 	bl	8002964 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800230a:	230f      	movs	r3, #15
 800230c:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800230e:	2302      	movs	r3, #2
 8002310:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002312:	2300      	movs	r3, #0
 8002314:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002316:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800231a:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800231c:	2300      	movs	r3, #0
 800231e:	627b      	str	r3, [r7, #36]	; 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002320:	f107 0314 	add.w	r3, r7, #20
 8002324:	2102      	movs	r1, #2
 8002326:	4618      	mov	r0, r3
 8002328:	f001 ffe4 	bl	80042f4 <HAL_RCC_ClockConfig>
 800232c:	4603      	mov	r3, r0
 800232e:	2b00      	cmp	r3, #0
 8002330:	d001      	beq.n	8002336 <SystemClock_Config+0x92>
  {
    Error_Handler();
 8002332:	f000 fb17 	bl	8002964 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8002336:	2302      	movs	r3, #2
 8002338:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 800233a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800233e:	60fb      	str	r3, [r7, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002340:	1d3b      	adds	r3, r7, #4
 8002342:	4618      	mov	r0, r3
 8002344:	f002 f9a0 	bl	8004688 <HAL_RCCEx_PeriphCLKConfig>
 8002348:	4603      	mov	r3, r0
 800234a:	2b00      	cmp	r3, #0
 800234c:	d001      	beq.n	8002352 <SystemClock_Config+0xae>
  {
    Error_Handler();
 800234e:	f000 fb09 	bl	8002964 <Error_Handler>
  }
}
 8002352:	bf00      	nop
 8002354:	3750      	adds	r7, #80	; 0x50
 8002356:	46bd      	mov	sp, r7
 8002358:	bd80      	pop	{r7, pc}
	...

0800235c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800235c:	b580      	push	{r7, lr}
 800235e:	b084      	sub	sp, #16
 8002360:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8002362:	1d3b      	adds	r3, r7, #4
 8002364:	2200      	movs	r2, #0
 8002366:	601a      	str	r2, [r3, #0]
 8002368:	605a      	str	r2, [r3, #4]
 800236a:	609a      	str	r2, [r3, #8]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Common config
  */
  hadc1.Instance = ADC1;
 800236c:	4b2b      	ldr	r3, [pc, #172]	; (800241c <MX_ADC1_Init+0xc0>)
 800236e:	4a2c      	ldr	r2, [pc, #176]	; (8002420 <MX_ADC1_Init+0xc4>)
 8002370:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8002372:	4b2a      	ldr	r3, [pc, #168]	; (800241c <MX_ADC1_Init+0xc0>)
 8002374:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002378:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800237a:	4b28      	ldr	r3, [pc, #160]	; (800241c <MX_ADC1_Init+0xc0>)
 800237c:	2201      	movs	r2, #1
 800237e:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002380:	4b26      	ldr	r3, [pc, #152]	; (800241c <MX_ADC1_Init+0xc0>)
 8002382:	2200      	movs	r2, #0
 8002384:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002386:	4b25      	ldr	r3, [pc, #148]	; (800241c <MX_ADC1_Init+0xc0>)
 8002388:	f44f 2260 	mov.w	r2, #917504	; 0xe0000
 800238c:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800238e:	4b23      	ldr	r3, [pc, #140]	; (800241c <MX_ADC1_Init+0xc0>)
 8002390:	2200      	movs	r2, #0
 8002392:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 4;
 8002394:	4b21      	ldr	r3, [pc, #132]	; (800241c <MX_ADC1_Init+0xc0>)
 8002396:	2204      	movs	r2, #4
 8002398:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800239a:	4820      	ldr	r0, [pc, #128]	; (800241c <MX_ADC1_Init+0xc0>)
 800239c:	f000 fd96 	bl	8002ecc <HAL_ADC_Init>
 80023a0:	4603      	mov	r3, r0
 80023a2:	2b00      	cmp	r3, #0
 80023a4:	d001      	beq.n	80023aa <MX_ADC1_Init+0x4e>
  {
    Error_Handler();
 80023a6:	f000 fadd 	bl	8002964 <Error_Handler>
  }
  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 80023aa:	2300      	movs	r3, #0
 80023ac:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80023ae:	2301      	movs	r3, #1
 80023b0:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 80023b2:	2300      	movs	r3, #0
 80023b4:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80023b6:	1d3b      	adds	r3, r7, #4
 80023b8:	4619      	mov	r1, r3
 80023ba:	4818      	ldr	r0, [pc, #96]	; (800241c <MX_ADC1_Init+0xc0>)
 80023bc:	f000 ff34 	bl	8003228 <HAL_ADC_ConfigChannel>
 80023c0:	4603      	mov	r3, r0
 80023c2:	2b00      	cmp	r3, #0
 80023c4:	d001      	beq.n	80023ca <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 80023c6:	f000 facd 	bl	8002964 <Error_Handler>
  }
  /** Configure Regular Channel
  */
  sConfig.Rank = ADC_REGULAR_RANK_2;
 80023ca:	2302      	movs	r3, #2
 80023cc:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80023ce:	1d3b      	adds	r3, r7, #4
 80023d0:	4619      	mov	r1, r3
 80023d2:	4812      	ldr	r0, [pc, #72]	; (800241c <MX_ADC1_Init+0xc0>)
 80023d4:	f000 ff28 	bl	8003228 <HAL_ADC_ConfigChannel>
 80023d8:	4603      	mov	r3, r0
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d001      	beq.n	80023e2 <MX_ADC1_Init+0x86>
  {
    Error_Handler();
 80023de:	f000 fac1 	bl	8002964 <Error_Handler>
  }
  /** Configure Regular Channel
  */
  sConfig.Rank = ADC_REGULAR_RANK_3;
 80023e2:	2303      	movs	r3, #3
 80023e4:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80023e6:	1d3b      	adds	r3, r7, #4
 80023e8:	4619      	mov	r1, r3
 80023ea:	480c      	ldr	r0, [pc, #48]	; (800241c <MX_ADC1_Init+0xc0>)
 80023ec:	f000 ff1c 	bl	8003228 <HAL_ADC_ConfigChannel>
 80023f0:	4603      	mov	r3, r0
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d001      	beq.n	80023fa <MX_ADC1_Init+0x9e>
  {
    Error_Handler();
 80023f6:	f000 fab5 	bl	8002964 <Error_Handler>
  }
  /** Configure Regular Channel
  */
  sConfig.Rank = ADC_REGULAR_RANK_4;
 80023fa:	2304      	movs	r3, #4
 80023fc:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80023fe:	1d3b      	adds	r3, r7, #4
 8002400:	4619      	mov	r1, r3
 8002402:	4806      	ldr	r0, [pc, #24]	; (800241c <MX_ADC1_Init+0xc0>)
 8002404:	f000 ff10 	bl	8003228 <HAL_ADC_ConfigChannel>
 8002408:	4603      	mov	r3, r0
 800240a:	2b00      	cmp	r3, #0
 800240c:	d001      	beq.n	8002412 <MX_ADC1_Init+0xb6>
  {
    Error_Handler();
 800240e:	f000 faa9 	bl	8002964 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8002412:	bf00      	nop
 8002414:	3710      	adds	r7, #16
 8002416:	46bd      	mov	sp, r7
 8002418:	bd80      	pop	{r7, pc}
 800241a:	bf00      	nop
 800241c:	20000f70 	.word	0x20000f70
 8002420:	40012400 	.word	0x40012400

08002424 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8002424:	b580      	push	{r7, lr}
 8002426:	b096      	sub	sp, #88	; 0x58
 8002428:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800242a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800242e:	2200      	movs	r2, #0
 8002430:	601a      	str	r2, [r3, #0]
 8002432:	605a      	str	r2, [r3, #4]
 8002434:	609a      	str	r2, [r3, #8]
 8002436:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002438:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800243c:	2200      	movs	r2, #0
 800243e:	601a      	str	r2, [r3, #0]
 8002440:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002442:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002446:	2200      	movs	r2, #0
 8002448:	601a      	str	r2, [r3, #0]
 800244a:	605a      	str	r2, [r3, #4]
 800244c:	609a      	str	r2, [r3, #8]
 800244e:	60da      	str	r2, [r3, #12]
 8002450:	611a      	str	r2, [r3, #16]
 8002452:	615a      	str	r2, [r3, #20]
 8002454:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8002456:	1d3b      	adds	r3, r7, #4
 8002458:	2220      	movs	r2, #32
 800245a:	2100      	movs	r1, #0
 800245c:	4618      	mov	r0, r3
 800245e:	f007 f9d9 	bl	8009814 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002462:	4b50      	ldr	r3, [pc, #320]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002464:	4a50      	ldr	r2, [pc, #320]	; (80025a8 <MX_TIM1_Init+0x184>)
 8002466:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 72-1;
 8002468:	4b4e      	ldr	r3, [pc, #312]	; (80025a4 <MX_TIM1_Init+0x180>)
 800246a:	2247      	movs	r2, #71	; 0x47
 800246c:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800246e:	4b4d      	ldr	r3, [pc, #308]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002470:	2200      	movs	r2, #0
 8002472:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000;
 8002474:	4b4b      	ldr	r3, [pc, #300]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002476:	f242 7210 	movw	r2, #10000	; 0x2710
 800247a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800247c:	4b49      	ldr	r3, [pc, #292]	; (80025a4 <MX_TIM1_Init+0x180>)
 800247e:	2200      	movs	r2, #0
 8002480:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002482:	4b48      	ldr	r3, [pc, #288]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002484:	2200      	movs	r2, #0
 8002486:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002488:	4b46      	ldr	r3, [pc, #280]	; (80025a4 <MX_TIM1_Init+0x180>)
 800248a:	2280      	movs	r2, #128	; 0x80
 800248c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800248e:	4845      	ldr	r0, [pc, #276]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002490:	f002 f9b0 	bl	80047f4 <HAL_TIM_Base_Init>
 8002494:	4603      	mov	r3, r0
 8002496:	2b00      	cmp	r3, #0
 8002498:	d001      	beq.n	800249e <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 800249a:	f000 fa63 	bl	8002964 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800249e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80024a2:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80024a4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80024a8:	4619      	mov	r1, r3
 80024aa:	483e      	ldr	r0, [pc, #248]	; (80025a4 <MX_TIM1_Init+0x180>)
 80024ac:	f002 fd04 	bl	8004eb8 <HAL_TIM_ConfigClockSource>
 80024b0:	4603      	mov	r3, r0
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d001      	beq.n	80024ba <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 80024b6:	f000 fa55 	bl	8002964 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80024ba:	483a      	ldr	r0, [pc, #232]	; (80025a4 <MX_TIM1_Init+0x180>)
 80024bc:	f002 fa3c 	bl	8004938 <HAL_TIM_PWM_Init>
 80024c0:	4603      	mov	r3, r0
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d001      	beq.n	80024ca <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 80024c6:	f000 fa4d 	bl	8002964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80024ca:	2300      	movs	r3, #0
 80024cc:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80024ce:	2300      	movs	r3, #0
 80024d0:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80024d2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80024d6:	4619      	mov	r1, r3
 80024d8:	4832      	ldr	r0, [pc, #200]	; (80025a4 <MX_TIM1_Init+0x180>)
 80024da:	f003 f879 	bl	80055d0 <HAL_TIMEx_MasterConfigSynchronization>
 80024de:	4603      	mov	r3, r0
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d001      	beq.n	80024e8 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 80024e4:	f000 fa3e 	bl	8002964 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80024e8:	2360      	movs	r3, #96	; 0x60
 80024ea:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 80024ec:	2300      	movs	r3, #0
 80024ee:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80024f0:	2300      	movs	r3, #0
 80024f2:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80024f4:	2300      	movs	r3, #0
 80024f6:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80024f8:	2300      	movs	r3, #0
 80024fa:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80024fc:	2300      	movs	r3, #0
 80024fe:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8002500:	2300      	movs	r3, #0
 8002502:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002504:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002508:	2200      	movs	r2, #0
 800250a:	4619      	mov	r1, r3
 800250c:	4825      	ldr	r0, [pc, #148]	; (80025a4 <MX_TIM1_Init+0x180>)
 800250e:	f002 fc15 	bl	8004d3c <HAL_TIM_PWM_ConfigChannel>
 8002512:	4603      	mov	r3, r0
 8002514:	2b00      	cmp	r3, #0
 8002516:	d001      	beq.n	800251c <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8002518:	f000 fa24 	bl	8002964 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800251c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002520:	2204      	movs	r2, #4
 8002522:	4619      	mov	r1, r3
 8002524:	481f      	ldr	r0, [pc, #124]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002526:	f002 fc09 	bl	8004d3c <HAL_TIM_PWM_ConfigChannel>
 800252a:	4603      	mov	r3, r0
 800252c:	2b00      	cmp	r3, #0
 800252e:	d001      	beq.n	8002534 <MX_TIM1_Init+0x110>
  {
    Error_Handler();
 8002530:	f000 fa18 	bl	8002964 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8002534:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002538:	2208      	movs	r2, #8
 800253a:	4619      	mov	r1, r3
 800253c:	4819      	ldr	r0, [pc, #100]	; (80025a4 <MX_TIM1_Init+0x180>)
 800253e:	f002 fbfd 	bl	8004d3c <HAL_TIM_PWM_ConfigChannel>
 8002542:	4603      	mov	r3, r0
 8002544:	2b00      	cmp	r3, #0
 8002546:	d001      	beq.n	800254c <MX_TIM1_Init+0x128>
  {
    Error_Handler();
 8002548:	f000 fa0c 	bl	8002964 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800254c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002550:	220c      	movs	r2, #12
 8002552:	4619      	mov	r1, r3
 8002554:	4813      	ldr	r0, [pc, #76]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002556:	f002 fbf1 	bl	8004d3c <HAL_TIM_PWM_ConfigChannel>
 800255a:	4603      	mov	r3, r0
 800255c:	2b00      	cmp	r3, #0
 800255e:	d001      	beq.n	8002564 <MX_TIM1_Init+0x140>
  {
    Error_Handler();
 8002560:	f000 fa00 	bl	8002964 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8002564:	2300      	movs	r3, #0
 8002566:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8002568:	2300      	movs	r3, #0
 800256a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800256c:	2300      	movs	r3, #0
 800256e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8002570:	2300      	movs	r3, #0
 8002572:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8002574:	2300      	movs	r3, #0
 8002576:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8002578:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800257c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800257e:	2300      	movs	r3, #0
 8002580:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8002582:	1d3b      	adds	r3, r7, #4
 8002584:	4619      	mov	r1, r3
 8002586:	4807      	ldr	r0, [pc, #28]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002588:	f003 f880 	bl	800568c <HAL_TIMEx_ConfigBreakDeadTime>
 800258c:	4603      	mov	r3, r0
 800258e:	2b00      	cmp	r3, #0
 8002590:	d001      	beq.n	8002596 <MX_TIM1_Init+0x172>
  {
    Error_Handler();
 8002592:	f000 f9e7 	bl	8002964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8002596:	4803      	ldr	r0, [pc, #12]	; (80025a4 <MX_TIM1_Init+0x180>)
 8002598:	f000 faca 	bl	8002b30 <HAL_TIM_MspPostInit>

}
 800259c:	bf00      	nop
 800259e:	3758      	adds	r7, #88	; 0x58
 80025a0:	46bd      	mov	sp, r7
 80025a2:	bd80      	pop	{r7, pc}
 80025a4:	20000fe4 	.word	0x20000fe4
 80025a8:	40012c00 	.word	0x40012c00

080025ac <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80025ac:	b580      	push	{r7, lr}
 80025ae:	b086      	sub	sp, #24
 80025b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80025b2:	f107 0308 	add.w	r3, r7, #8
 80025b6:	2200      	movs	r2, #0
 80025b8:	601a      	str	r2, [r3, #0]
 80025ba:	605a      	str	r2, [r3, #4]
 80025bc:	609a      	str	r2, [r3, #8]
 80025be:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80025c0:	463b      	mov	r3, r7
 80025c2:	2200      	movs	r2, #0
 80025c4:	601a      	str	r2, [r3, #0]
 80025c6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80025c8:	4b1d      	ldr	r3, [pc, #116]	; (8002640 <MX_TIM2_Init+0x94>)
 80025ca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80025ce:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 72-1;
 80025d0:	4b1b      	ldr	r3, [pc, #108]	; (8002640 <MX_TIM2_Init+0x94>)
 80025d2:	2247      	movs	r2, #71	; 0x47
 80025d4:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80025d6:	4b1a      	ldr	r3, [pc, #104]	; (8002640 <MX_TIM2_Init+0x94>)
 80025d8:	2200      	movs	r2, #0
 80025da:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 50000-1;
 80025dc:	4b18      	ldr	r3, [pc, #96]	; (8002640 <MX_TIM2_Init+0x94>)
 80025de:	f24c 324f 	movw	r2, #49999	; 0xc34f
 80025e2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80025e4:	4b16      	ldr	r3, [pc, #88]	; (8002640 <MX_TIM2_Init+0x94>)
 80025e6:	2200      	movs	r2, #0
 80025e8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025ea:	4b15      	ldr	r3, [pc, #84]	; (8002640 <MX_TIM2_Init+0x94>)
 80025ec:	2200      	movs	r2, #0
 80025ee:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80025f0:	4813      	ldr	r0, [pc, #76]	; (8002640 <MX_TIM2_Init+0x94>)
 80025f2:	f002 f8ff 	bl	80047f4 <HAL_TIM_Base_Init>
 80025f6:	4603      	mov	r3, r0
 80025f8:	2b00      	cmp	r3, #0
 80025fa:	d001      	beq.n	8002600 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80025fc:	f000 f9b2 	bl	8002964 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002600:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002604:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8002606:	f107 0308 	add.w	r3, r7, #8
 800260a:	4619      	mov	r1, r3
 800260c:	480c      	ldr	r0, [pc, #48]	; (8002640 <MX_TIM2_Init+0x94>)
 800260e:	f002 fc53 	bl	8004eb8 <HAL_TIM_ConfigClockSource>
 8002612:	4603      	mov	r3, r0
 8002614:	2b00      	cmp	r3, #0
 8002616:	d001      	beq.n	800261c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8002618:	f000 f9a4 	bl	8002964 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800261c:	2300      	movs	r3, #0
 800261e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002620:	2300      	movs	r3, #0
 8002622:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002624:	463b      	mov	r3, r7
 8002626:	4619      	mov	r1, r3
 8002628:	4805      	ldr	r0, [pc, #20]	; (8002640 <MX_TIM2_Init+0x94>)
 800262a:	f002 ffd1 	bl	80055d0 <HAL_TIMEx_MasterConfigSynchronization>
 800262e:	4603      	mov	r3, r0
 8002630:	2b00      	cmp	r3, #0
 8002632:	d001      	beq.n	8002638 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8002634:	f000 f996 	bl	8002964 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002638:	bf00      	nop
 800263a:	3718      	adds	r7, #24
 800263c:	46bd      	mov	sp, r7
 800263e:	bd80      	pop	{r7, pc}
 8002640:	2000102c 	.word	0x2000102c

08002644 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8002644:	b580      	push	{r7, lr}
 8002646:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8002648:	4b11      	ldr	r3, [pc, #68]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 800264a:	4a12      	ldr	r2, [pc, #72]	; (8002694 <MX_USART3_UART_Init+0x50>)
 800264c:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 800264e:	4b10      	ldr	r3, [pc, #64]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 8002650:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002654:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8002656:	4b0e      	ldr	r3, [pc, #56]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 8002658:	2200      	movs	r2, #0
 800265a:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 800265c:	4b0c      	ldr	r3, [pc, #48]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 800265e:	2200      	movs	r2, #0
 8002660:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8002662:	4b0b      	ldr	r3, [pc, #44]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 8002664:	2200      	movs	r2, #0
 8002666:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8002668:	4b09      	ldr	r3, [pc, #36]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 800266a:	220c      	movs	r2, #12
 800266c:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800266e:	4b08      	ldr	r3, [pc, #32]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 8002670:	2200      	movs	r2, #0
 8002672:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8002674:	4b06      	ldr	r3, [pc, #24]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 8002676:	2200      	movs	r2, #0
 8002678:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800267a:	4805      	ldr	r0, [pc, #20]	; (8002690 <MX_USART3_UART_Init+0x4c>)
 800267c:	f003 f869 	bl	8005752 <HAL_UART_Init>
 8002680:	4603      	mov	r3, r0
 8002682:	2b00      	cmp	r3, #0
 8002684:	d001      	beq.n	800268a <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8002686:	f000 f96d 	bl	8002964 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800268a:	bf00      	nop
 800268c:	bd80      	pop	{r7, pc}
 800268e:	bf00      	nop
 8002690:	20000f28 	.word	0x20000f28
 8002694:	40004800 	.word	0x40004800

08002698 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002698:	b580      	push	{r7, lr}
 800269a:	b082      	sub	sp, #8
 800269c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800269e:	4b0c      	ldr	r3, [pc, #48]	; (80026d0 <MX_DMA_Init+0x38>)
 80026a0:	695b      	ldr	r3, [r3, #20]
 80026a2:	4a0b      	ldr	r2, [pc, #44]	; (80026d0 <MX_DMA_Init+0x38>)
 80026a4:	f043 0301 	orr.w	r3, r3, #1
 80026a8:	6153      	str	r3, [r2, #20]
 80026aa:	4b09      	ldr	r3, [pc, #36]	; (80026d0 <MX_DMA_Init+0x38>)
 80026ac:	695b      	ldr	r3, [r3, #20]
 80026ae:	f003 0301 	and.w	r3, r3, #1
 80026b2:	607b      	str	r3, [r7, #4]
 80026b4:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 5, 0);
 80026b6:	2200      	movs	r2, #0
 80026b8:	2105      	movs	r1, #5
 80026ba:	200b      	movs	r0, #11
 80026bc:	f000 ffab 	bl	8003616 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 80026c0:	200b      	movs	r0, #11
 80026c2:	f000 ffc4 	bl	800364e <HAL_NVIC_EnableIRQ>

}
 80026c6:	bf00      	nop
 80026c8:	3708      	adds	r7, #8
 80026ca:	46bd      	mov	sp, r7
 80026cc:	bd80      	pop	{r7, pc}
 80026ce:	bf00      	nop
 80026d0:	40021000 	.word	0x40021000

080026d4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80026d4:	b580      	push	{r7, lr}
 80026d6:	b088      	sub	sp, #32
 80026d8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026da:	f107 0310 	add.w	r3, r7, #16
 80026de:	2200      	movs	r2, #0
 80026e0:	601a      	str	r2, [r3, #0]
 80026e2:	605a      	str	r2, [r3, #4]
 80026e4:	609a      	str	r2, [r3, #8]
 80026e6:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80026e8:	4b43      	ldr	r3, [pc, #268]	; (80027f8 <MX_GPIO_Init+0x124>)
 80026ea:	699b      	ldr	r3, [r3, #24]
 80026ec:	4a42      	ldr	r2, [pc, #264]	; (80027f8 <MX_GPIO_Init+0x124>)
 80026ee:	f043 0310 	orr.w	r3, r3, #16
 80026f2:	6193      	str	r3, [r2, #24]
 80026f4:	4b40      	ldr	r3, [pc, #256]	; (80027f8 <MX_GPIO_Init+0x124>)
 80026f6:	699b      	ldr	r3, [r3, #24]
 80026f8:	f003 0310 	and.w	r3, r3, #16
 80026fc:	60fb      	str	r3, [r7, #12]
 80026fe:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8002700:	4b3d      	ldr	r3, [pc, #244]	; (80027f8 <MX_GPIO_Init+0x124>)
 8002702:	699b      	ldr	r3, [r3, #24]
 8002704:	4a3c      	ldr	r2, [pc, #240]	; (80027f8 <MX_GPIO_Init+0x124>)
 8002706:	f043 0320 	orr.w	r3, r3, #32
 800270a:	6193      	str	r3, [r2, #24]
 800270c:	4b3a      	ldr	r3, [pc, #232]	; (80027f8 <MX_GPIO_Init+0x124>)
 800270e:	699b      	ldr	r3, [r3, #24]
 8002710:	f003 0320 	and.w	r3, r3, #32
 8002714:	60bb      	str	r3, [r7, #8]
 8002716:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002718:	4b37      	ldr	r3, [pc, #220]	; (80027f8 <MX_GPIO_Init+0x124>)
 800271a:	699b      	ldr	r3, [r3, #24]
 800271c:	4a36      	ldr	r2, [pc, #216]	; (80027f8 <MX_GPIO_Init+0x124>)
 800271e:	f043 0304 	orr.w	r3, r3, #4
 8002722:	6193      	str	r3, [r2, #24]
 8002724:	4b34      	ldr	r3, [pc, #208]	; (80027f8 <MX_GPIO_Init+0x124>)
 8002726:	699b      	ldr	r3, [r3, #24]
 8002728:	f003 0304 	and.w	r3, r3, #4
 800272c:	607b      	str	r3, [r7, #4]
 800272e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002730:	4b31      	ldr	r3, [pc, #196]	; (80027f8 <MX_GPIO_Init+0x124>)
 8002732:	699b      	ldr	r3, [r3, #24]
 8002734:	4a30      	ldr	r2, [pc, #192]	; (80027f8 <MX_GPIO_Init+0x124>)
 8002736:	f043 0308 	orr.w	r3, r3, #8
 800273a:	6193      	str	r3, [r2, #24]
 800273c:	4b2e      	ldr	r3, [pc, #184]	; (80027f8 <MX_GPIO_Init+0x124>)
 800273e:	699b      	ldr	r3, [r3, #24]
 8002740:	f003 0308 	and.w	r3, r3, #8
 8002744:	603b      	str	r3, [r7, #0]
 8002746:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8002748:	2200      	movs	r2, #0
 800274a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800274e:	482b      	ldr	r0, [pc, #172]	; (80027fc <MX_GPIO_Init+0x128>)
 8002750:	f001 fb20 	bl	8003d94 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, OUT2_1_Pin|OUT2_2_Pin|OUT1_2_Pin|OUT1_1_Pin
 8002754:	2200      	movs	r2, #0
 8002756:	f24f 0118 	movw	r1, #61464	; 0xf018
 800275a:	4829      	ldr	r0, [pc, #164]	; (8002800 <MX_GPIO_Init+0x12c>)
 800275c:	f001 fb1a 	bl	8003d94 <HAL_GPIO_WritePin>
                          |OUT3_2_Pin|OUT3_1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, OUT4_1_Pin|OUT4_2_Pin, GPIO_PIN_RESET);
 8002760:	2200      	movs	r2, #0
 8002762:	f44f 4110 	mov.w	r1, #36864	; 0x9000
 8002766:	4827      	ldr	r0, [pc, #156]	; (8002804 <MX_GPIO_Init+0x130>)
 8002768:	f001 fb14 	bl	8003d94 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 800276c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002770:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002772:	2301      	movs	r3, #1
 8002774:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002776:	2300      	movs	r3, #0
 8002778:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800277a:	2302      	movs	r3, #2
 800277c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800277e:	f107 0310 	add.w	r3, r7, #16
 8002782:	4619      	mov	r1, r3
 8002784:	481d      	ldr	r0, [pc, #116]	; (80027fc <MX_GPIO_Init+0x128>)
 8002786:	f001 f981 	bl	8003a8c <HAL_GPIO_Init>

  /*Configure GPIO pins : OUT2_1_Pin OUT2_2_Pin OUT1_2_Pin OUT1_1_Pin
                           OUT3_2_Pin OUT3_1_Pin */
  GPIO_InitStruct.Pin = OUT2_1_Pin|OUT2_2_Pin|OUT1_2_Pin|OUT1_1_Pin
 800278a:	f24f 0318 	movw	r3, #61464	; 0xf018
 800278e:	613b      	str	r3, [r7, #16]
                          |OUT3_2_Pin|OUT3_1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002790:	2301      	movs	r3, #1
 8002792:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002794:	2300      	movs	r3, #0
 8002796:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002798:	2302      	movs	r3, #2
 800279a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800279c:	f107 0310 	add.w	r3, r7, #16
 80027a0:	4619      	mov	r1, r3
 80027a2:	4817      	ldr	r0, [pc, #92]	; (8002800 <MX_GPIO_Init+0x12c>)
 80027a4:	f001 f972 	bl	8003a8c <HAL_GPIO_Init>

  /*Configure GPIO pins : OUT4_1_Pin OUT4_2_Pin */
  GPIO_InitStruct.Pin = OUT4_1_Pin|OUT4_2_Pin;
 80027a8:	f44f 4310 	mov.w	r3, #36864	; 0x9000
 80027ac:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80027ae:	2301      	movs	r3, #1
 80027b0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80027b2:	2300      	movs	r3, #0
 80027b4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80027b6:	2302      	movs	r3, #2
 80027b8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80027ba:	f107 0310 	add.w	r3, r7, #16
 80027be:	4619      	mov	r1, r3
 80027c0:	4810      	ldr	r0, [pc, #64]	; (8002804 <MX_GPIO_Init+0x130>)
 80027c2:	f001 f963 	bl	8003a8c <HAL_GPIO_Init>

  /*Configure GPIO pins : D01_Encoder_Pin D02_Encoder_Pin D03_Encoder_Pin D04_Encoder_Pin */
  GPIO_InitStruct.Pin = D01_Encoder_Pin|D02_Encoder_Pin|D03_Encoder_Pin|D04_Encoder_Pin;
 80027c6:	f44f 7370 	mov.w	r3, #960	; 0x3c0
 80027ca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80027cc:	4b0e      	ldr	r3, [pc, #56]	; (8002808 <MX_GPIO_Init+0x134>)
 80027ce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80027d0:	2300      	movs	r3, #0
 80027d2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80027d4:	f107 0310 	add.w	r3, r7, #16
 80027d8:	4619      	mov	r1, r3
 80027da:	4809      	ldr	r0, [pc, #36]	; (8002800 <MX_GPIO_Init+0x12c>)
 80027dc:	f001 f956 	bl	8003a8c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 80027e0:	2200      	movs	r2, #0
 80027e2:	2105      	movs	r1, #5
 80027e4:	2017      	movs	r0, #23
 80027e6:	f000 ff16 	bl	8003616 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80027ea:	2017      	movs	r0, #23
 80027ec:	f000 ff2f 	bl	800364e <HAL_NVIC_EnableIRQ>

}
 80027f0:	bf00      	nop
 80027f2:	3720      	adds	r7, #32
 80027f4:	46bd      	mov	sp, r7
 80027f6:	bd80      	pop	{r7, pc}
 80027f8:	40021000 	.word	0x40021000
 80027fc:	40011000 	.word	0x40011000
 8002800:	40010c00 	.word	0x40010c00
 8002804:	40010800 	.word	0x40010800
 8002808:	10110000 	.word	0x10110000

0800280c <StartModbus>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartModbus */
void StartModbus(void *argument)
{
 800280c:	b580      	push	{r7, lr}
 800280e:	b086      	sub	sp, #24
 8002810:	af00      	add	r7, sp, #0
 8002812:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
//	int i =0;
//	char buff[64];
	uint16_t valor =1234;
 8002814:	f240 43d2 	movw	r3, #1234	; 0x4d2
 8002818:	81fb      	strh	r3, [r7, #14]
	osStatus_t status;
  /* Infinite loop */
  for(;;)
  {
//	  osMessageGet( QueueDataADCHandle, &valor, 0 );
	prt=pvPortMalloc(100*sizeof (char));
 800281a:	2064      	movs	r0, #100	; 0x64
 800281c:	f006 ff8e 	bl	800973c <pvPortMalloc>
 8002820:	6178      	str	r0, [r7, #20]
	sprintf(prt,"Dato leido de la Queue: %u \n",valor);
 8002822:	89fb      	ldrh	r3, [r7, #14]
 8002824:	461a      	mov	r2, r3
 8002826:	490c      	ldr	r1, [pc, #48]	; (8002858 <StartModbus+0x4c>)
 8002828:	6978      	ldr	r0, [r7, #20]
 800282a:	f007 f8b1 	bl	8009990 <siprintf>

	 status = osMessageQueueGet(QueueDataADCHandle, &valor, NULL, 5000);   // wait for message
 800282e:	4b0b      	ldr	r3, [pc, #44]	; (800285c <StartModbus+0x50>)
 8002830:	6818      	ldr	r0, [r3, #0]
 8002832:	f107 010e 	add.w	r1, r7, #14
 8002836:	f241 3388 	movw	r3, #5000	; 0x1388
 800283a:	2200      	movs	r2, #0
 800283c:	f003 ff8e 	bl	800675c <osMessageQueueGet>
 8002840:	6138      	str	r0, [r7, #16]
	    if (status == osOK) {
 8002842:	693b      	ldr	r3, [r7, #16]
 8002844:	2b00      	cmp	r3, #0
 8002846:	d102      	bne.n	800284e <StartModbus+0x42>
//	HAL_UART_Transmit(&huart3, (uint8_t*)prt, strlen(prt), 100);
	vPortFree(prt);
 8002848:	6978      	ldr	r0, [r7, #20]
 800284a:	f006 ff89 	bl	8009760 <vPortFree>
	      ; // process data
	    }

    osDelay(900);
 800284e:	f44f 7061 	mov.w	r0, #900	; 0x384
 8002852:	f003 fe33 	bl	80064bc <osDelay>
	prt=pvPortMalloc(100*sizeof (char));
 8002856:	e7e0      	b.n	800281a <StartModbus+0xe>
 8002858:	0800a124 	.word	0x0800a124
 800285c:	20001078 	.word	0x20001078

08002860 <StartADC>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartADC */
void StartADC(void *argument)
{
 8002860:	b580      	push	{r7, lr}
 8002862:	b082      	sub	sp, #8
 8002864:	af00      	add	r7, sp, #0
 8002866:	6078      	str	r0, [r7, #4]
//	adc1 = HAL_ADC_PollForConversion(&hadc1, 5000);
//	osMessageQueuePut(QueueDataADCHandle, &adc1, 5000);
//	osMessageQueuePut(QueueDataADCHandle, &adc1[0], NULL, 5000);
//	osThreadYield();

    osDelay(1000);
 8002868:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800286c:	f003 fe26 	bl	80064bc <osDelay>
 8002870:	e7fa      	b.n	8002868 <StartADC+0x8>
	...

08002874 <StartEncoders>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartEncoders */
void StartEncoders(void *argument)
{
 8002874:	b580      	push	{r7, lr}
 8002876:	b086      	sub	sp, #24
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
	uint16_t pasador[2];
	uint16_t delta[2];// para mandar los deltaticks
	uint16_t meanData[2];


	HAL_TIM_Base_Start_IT(&htim2);
 800287c:	481e      	ldr	r0, [pc, #120]	; (80028f8 <StartEncoders+0x84>)
 800287e:	f002 f809 	bl	8004894 <HAL_TIM_Base_Start_IT>
  /* Infinite loop */
  for(;;)
  {

//    Velocidad(ModbusDATA[0]);// Calculo la velocidad para devolver por modbus
    osDelay(Ts);// Delta T
 8002882:	4b1e      	ldr	r3, [pc, #120]	; (80028fc <StartEncoders+0x88>)
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	4618      	mov	r0, r3
 8002888:	f003 fe18 	bl	80064bc <osDelay>
    Sentido(ModbusDATA[0]);
 800288c:	4b1c      	ldr	r3, [pc, #112]	; (8002900 <StartEncoders+0x8c>)
 800288e:	881b      	ldrh	r3, [r3, #0]
 8002890:	4618      	mov	r0, r3
 8002892:	f7ff fc45 	bl	8002120 <Sentido>
 8002896:	4b1b      	ldr	r3, [pc, #108]	; (8002904 <StartEncoders+0x90>)
 8002898:	681b      	ldr	r3, [r3, #0]

    memcpy(meanData, &ticksNow, sizeof(ticksNow));
 800289a:	60fb      	str	r3, [r7, #12]
    ModbusDATA[4]=meanData[0];
 800289c:	89ba      	ldrh	r2, [r7, #12]
 800289e:	4b18      	ldr	r3, [pc, #96]	; (8002900 <StartEncoders+0x8c>)
 80028a0:	811a      	strh	r2, [r3, #8]
    ModbusDATA[5]=meanData[1];
 80028a2:	89fa      	ldrh	r2, [r7, #14]
 80028a4:	4b16      	ldr	r3, [pc, #88]	; (8002900 <StartEncoders+0x8c>)
 80028a6:	815a      	strh	r2, [r3, #10]
 80028a8:	4b17      	ldr	r3, [pc, #92]	; (8002908 <StartEncoders+0x94>)
 80028aa:	681b      	ldr	r3, [r3, #0]


    memcpy(pasador, &velocidad, sizeof(velocidad));
 80028ac:	617b      	str	r3, [r7, #20]
    ModbusDATA[8]=pasador[0];
 80028ae:	8aba      	ldrh	r2, [r7, #20]
 80028b0:	4b13      	ldr	r3, [pc, #76]	; (8002900 <StartEncoders+0x8c>)
 80028b2:	821a      	strh	r2, [r3, #16]
    ModbusDATA[9]=pasador[1];
 80028b4:	8afa      	ldrh	r2, [r7, #22]
 80028b6:	4b12      	ldr	r3, [pc, #72]	; (8002900 <StartEncoders+0x8c>)
 80028b8:	825a      	strh	r2, [r3, #18]
 80028ba:	4b14      	ldr	r3, [pc, #80]	; (800290c <StartEncoders+0x98>)
 80028bc:	681b      	ldr	r3, [r3, #0]

    memcpy(delta, &deltaTicks, sizeof(deltaTicks));
 80028be:	613b      	str	r3, [r7, #16]
    ModbusDATA[10]=delta[0];
 80028c0:	8a3a      	ldrh	r2, [r7, #16]
 80028c2:	4b0f      	ldr	r3, [pc, #60]	; (8002900 <StartEncoders+0x8c>)
 80028c4:	829a      	strh	r2, [r3, #20]
    ModbusDATA[11]=delta[1];
 80028c6:	8a7a      	ldrh	r2, [r7, #18]
 80028c8:	4b0d      	ldr	r3, [pc, #52]	; (8002900 <StartEncoders+0x8c>)
 80028ca:	82da      	strh	r2, [r3, #22]

    htim1.Instance->CCR1 = ModbusDATA[1];
 80028cc:	4b0c      	ldr	r3, [pc, #48]	; (8002900 <StartEncoders+0x8c>)
 80028ce:	885a      	ldrh	r2, [r3, #2]
 80028d0:	4b0f      	ldr	r3, [pc, #60]	; (8002910 <StartEncoders+0x9c>)
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	635a      	str	r2, [r3, #52]	; 0x34

    ModbusDATA[6] = overflow;
 80028d6:	4b0f      	ldr	r3, [pc, #60]	; (8002914 <StartEncoders+0xa0>)
 80028d8:	781b      	ldrb	r3, [r3, #0]
 80028da:	b29a      	uxth	r2, r3
 80028dc:	4b08      	ldr	r3, [pc, #32]	; (8002900 <StartEncoders+0x8c>)
 80028de:	819a      	strh	r2, [r3, #12]
    if(overflow >= 2){
 80028e0:	4b0c      	ldr	r3, [pc, #48]	; (8002914 <StartEncoders+0xa0>)
 80028e2:	781b      	ldrb	r3, [r3, #0]
 80028e4:	2b01      	cmp	r3, #1
 80028e6:	d9cc      	bls.n	8002882 <StartEncoders+0xe>
    	  velocidad = 0;
 80028e8:	4b07      	ldr	r3, [pc, #28]	; (8002908 <StartEncoders+0x94>)
 80028ea:	f04f 0200 	mov.w	r2, #0
 80028ee:	601a      	str	r2, [r3, #0]
    	  overflow = 0;
 80028f0:	4b08      	ldr	r3, [pc, #32]	; (8002914 <StartEncoders+0xa0>)
 80028f2:	2200      	movs	r2, #0
 80028f4:	701a      	strb	r2, [r3, #0]
    osDelay(Ts);// Delta T
 80028f6:	e7c4      	b.n	8002882 <StartEncoders+0xe>
 80028f8:	2000102c 	.word	0x2000102c
 80028fc:	2000001c 	.word	0x2000001c
 8002900:	20000000 	.word	0x20000000
 8002904:	200000c8 	.word	0x200000c8
 8002908:	200000c0 	.word	0x200000c0
 800290c:	200000d0 	.word	0x200000d0
 8002910:	20000fe4 	.word	0x20000fe4
 8002914:	200000cc 	.word	0x200000cc

08002918 <StartControl>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartControl */
void StartControl(void *argument)
{
 8002918:	b580      	push	{r7, lr}
 800291a:	b082      	sub	sp, #8
 800291c:	af00      	add	r7, sp, #0
 800291e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartControl */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 8002920:	2001      	movs	r0, #1
 8002922:	f003 fdcb 	bl	80064bc <osDelay>
 8002926:	e7fb      	b.n	8002920 <StartControl+0x8>

08002928 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002928:	b580      	push	{r7, lr}
 800292a:	b082      	sub	sp, #8
 800292c:	af00      	add	r7, sp, #0
 800292e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */
//  // ESTO ES DE FREERTOS
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM4) {
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	4a09      	ldr	r2, [pc, #36]	; (800295c <HAL_TIM_PeriodElapsedCallback+0x34>)
 8002936:	4293      	cmp	r3, r2
 8002938:	d101      	bne.n	800293e <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 800293a:	f000 faab 	bl	8002e94 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if(htim->Instance == TIM2){
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002946:	d105      	bne.n	8002954 <HAL_TIM_PeriodElapsedCallback+0x2c>
	 overflow += 1;
 8002948:	4b05      	ldr	r3, [pc, #20]	; (8002960 <HAL_TIM_PeriodElapsedCallback+0x38>)
 800294a:	781b      	ldrb	r3, [r3, #0]
 800294c:	3301      	adds	r3, #1
 800294e:	b2da      	uxtb	r2, r3
 8002950:	4b03      	ldr	r3, [pc, #12]	; (8002960 <HAL_TIM_PeriodElapsedCallback+0x38>)
 8002952:	701a      	strb	r2, [r3, #0]
  }
  /* USER CODE END Callback 1 */
}
 8002954:	bf00      	nop
 8002956:	3708      	adds	r7, #8
 8002958:	46bd      	mov	sp, r7
 800295a:	bd80      	pop	{r7, pc}
 800295c:	40000800 	.word	0x40000800
 8002960:	200000cc 	.word	0x200000cc

08002964 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002964:	b480      	push	{r7}
 8002966:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002968:	b672      	cpsid	i
}
 800296a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800296c:	e7fe      	b.n	800296c <Error_Handler+0x8>
	...

08002970 <HAL_MspInit>:
 8002970:	b580      	push	{r7, lr}
 8002972:	b084      	sub	sp, #16
 8002974:	af00      	add	r7, sp, #0
 8002976:	4b18      	ldr	r3, [pc, #96]	; (80029d8 <HAL_MspInit+0x68>)
 8002978:	699b      	ldr	r3, [r3, #24]
 800297a:	4a17      	ldr	r2, [pc, #92]	; (80029d8 <HAL_MspInit+0x68>)
 800297c:	f043 0301 	orr.w	r3, r3, #1
 8002980:	6193      	str	r3, [r2, #24]
 8002982:	4b15      	ldr	r3, [pc, #84]	; (80029d8 <HAL_MspInit+0x68>)
 8002984:	699b      	ldr	r3, [r3, #24]
 8002986:	f003 0301 	and.w	r3, r3, #1
 800298a:	60bb      	str	r3, [r7, #8]
 800298c:	68bb      	ldr	r3, [r7, #8]
 800298e:	4b12      	ldr	r3, [pc, #72]	; (80029d8 <HAL_MspInit+0x68>)
 8002990:	69db      	ldr	r3, [r3, #28]
 8002992:	4a11      	ldr	r2, [pc, #68]	; (80029d8 <HAL_MspInit+0x68>)
 8002994:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002998:	61d3      	str	r3, [r2, #28]
 800299a:	4b0f      	ldr	r3, [pc, #60]	; (80029d8 <HAL_MspInit+0x68>)
 800299c:	69db      	ldr	r3, [r3, #28]
 800299e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029a2:	607b      	str	r3, [r7, #4]
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	2200      	movs	r2, #0
 80029a8:	210f      	movs	r1, #15
 80029aa:	f06f 0001 	mvn.w	r0, #1
 80029ae:	f000 fe32 	bl	8003616 <HAL_NVIC_SetPriority>
 80029b2:	4b0a      	ldr	r3, [pc, #40]	; (80029dc <HAL_MspInit+0x6c>)
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	60fb      	str	r3, [r7, #12]
 80029b8:	68fb      	ldr	r3, [r7, #12]
 80029ba:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80029be:	60fb      	str	r3, [r7, #12]
 80029c0:	68fb      	ldr	r3, [r7, #12]
 80029c2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80029c6:	60fb      	str	r3, [r7, #12]
 80029c8:	4a04      	ldr	r2, [pc, #16]	; (80029dc <HAL_MspInit+0x6c>)
 80029ca:	68fb      	ldr	r3, [r7, #12]
 80029cc:	6053      	str	r3, [r2, #4]
 80029ce:	bf00      	nop
 80029d0:	3710      	adds	r7, #16
 80029d2:	46bd      	mov	sp, r7
 80029d4:	bd80      	pop	{r7, pc}
 80029d6:	bf00      	nop
 80029d8:	40021000 	.word	0x40021000
 80029dc:	40010000 	.word	0x40010000

080029e0 <HAL_ADC_MspInit>:
 80029e0:	b580      	push	{r7, lr}
 80029e2:	b088      	sub	sp, #32
 80029e4:	af00      	add	r7, sp, #0
 80029e6:	6078      	str	r0, [r7, #4]
 80029e8:	f107 0310 	add.w	r3, r7, #16
 80029ec:	2200      	movs	r2, #0
 80029ee:	601a      	str	r2, [r3, #0]
 80029f0:	605a      	str	r2, [r3, #4]
 80029f2:	609a      	str	r2, [r3, #8]
 80029f4:	60da      	str	r2, [r3, #12]
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	4a2c      	ldr	r2, [pc, #176]	; (8002aac <HAL_ADC_MspInit+0xcc>)
 80029fc:	4293      	cmp	r3, r2
 80029fe:	d151      	bne.n	8002aa4 <HAL_ADC_MspInit+0xc4>
 8002a00:	4b2b      	ldr	r3, [pc, #172]	; (8002ab0 <HAL_ADC_MspInit+0xd0>)
 8002a02:	699b      	ldr	r3, [r3, #24]
 8002a04:	4a2a      	ldr	r2, [pc, #168]	; (8002ab0 <HAL_ADC_MspInit+0xd0>)
 8002a06:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002a0a:	6193      	str	r3, [r2, #24]
 8002a0c:	4b28      	ldr	r3, [pc, #160]	; (8002ab0 <HAL_ADC_MspInit+0xd0>)
 8002a0e:	699b      	ldr	r3, [r3, #24]
 8002a10:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002a14:	60fb      	str	r3, [r7, #12]
 8002a16:	68fb      	ldr	r3, [r7, #12]
 8002a18:	4b25      	ldr	r3, [pc, #148]	; (8002ab0 <HAL_ADC_MspInit+0xd0>)
 8002a1a:	699b      	ldr	r3, [r3, #24]
 8002a1c:	4a24      	ldr	r2, [pc, #144]	; (8002ab0 <HAL_ADC_MspInit+0xd0>)
 8002a1e:	f043 0304 	orr.w	r3, r3, #4
 8002a22:	6193      	str	r3, [r2, #24]
 8002a24:	4b22      	ldr	r3, [pc, #136]	; (8002ab0 <HAL_ADC_MspInit+0xd0>)
 8002a26:	699b      	ldr	r3, [r3, #24]
 8002a28:	f003 0304 	and.w	r3, r3, #4
 8002a2c:	60bb      	str	r3, [r7, #8]
 8002a2e:	68bb      	ldr	r3, [r7, #8]
 8002a30:	230f      	movs	r3, #15
 8002a32:	613b      	str	r3, [r7, #16]
 8002a34:	2303      	movs	r3, #3
 8002a36:	617b      	str	r3, [r7, #20]
 8002a38:	f107 0310 	add.w	r3, r7, #16
 8002a3c:	4619      	mov	r1, r3
 8002a3e:	481d      	ldr	r0, [pc, #116]	; (8002ab4 <HAL_ADC_MspInit+0xd4>)
 8002a40:	f001 f824 	bl	8003a8c <HAL_GPIO_Init>
 8002a44:	4b1c      	ldr	r3, [pc, #112]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a46:	4a1d      	ldr	r2, [pc, #116]	; (8002abc <HAL_ADC_MspInit+0xdc>)
 8002a48:	601a      	str	r2, [r3, #0]
 8002a4a:	4b1b      	ldr	r3, [pc, #108]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a4c:	2200      	movs	r2, #0
 8002a4e:	605a      	str	r2, [r3, #4]
 8002a50:	4b19      	ldr	r3, [pc, #100]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a52:	2200      	movs	r2, #0
 8002a54:	609a      	str	r2, [r3, #8]
 8002a56:	4b18      	ldr	r3, [pc, #96]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a58:	2280      	movs	r2, #128	; 0x80
 8002a5a:	60da      	str	r2, [r3, #12]
 8002a5c:	4b16      	ldr	r3, [pc, #88]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a5e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a62:	611a      	str	r2, [r3, #16]
 8002a64:	4b14      	ldr	r3, [pc, #80]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a66:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002a6a:	615a      	str	r2, [r3, #20]
 8002a6c:	4b12      	ldr	r3, [pc, #72]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a6e:	2200      	movs	r2, #0
 8002a70:	619a      	str	r2, [r3, #24]
 8002a72:	4b11      	ldr	r3, [pc, #68]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a74:	2200      	movs	r2, #0
 8002a76:	61da      	str	r2, [r3, #28]
 8002a78:	480f      	ldr	r0, [pc, #60]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a7a:	f000 fdf7 	bl	800366c <HAL_DMA_Init>
 8002a7e:	4603      	mov	r3, r0
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d001      	beq.n	8002a88 <HAL_ADC_MspInit+0xa8>
 8002a84:	f7ff ff6e 	bl	8002964 <Error_Handler>
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	4a0b      	ldr	r2, [pc, #44]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a8c:	621a      	str	r2, [r3, #32]
 8002a8e:	4a0a      	ldr	r2, [pc, #40]	; (8002ab8 <HAL_ADC_MspInit+0xd8>)
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	6253      	str	r3, [r2, #36]	; 0x24
 8002a94:	2200      	movs	r2, #0
 8002a96:	2105      	movs	r1, #5
 8002a98:	2012      	movs	r0, #18
 8002a9a:	f000 fdbc 	bl	8003616 <HAL_NVIC_SetPriority>
 8002a9e:	2012      	movs	r0, #18
 8002aa0:	f000 fdd5 	bl	800364e <HAL_NVIC_EnableIRQ>
 8002aa4:	bf00      	nop
 8002aa6:	3720      	adds	r7, #32
 8002aa8:	46bd      	mov	sp, r7
 8002aaa:	bd80      	pop	{r7, pc}
 8002aac:	40012400 	.word	0x40012400
 8002ab0:	40021000 	.word	0x40021000
 8002ab4:	40010800 	.word	0x40010800
 8002ab8:	20000fa0 	.word	0x20000fa0
 8002abc:	40020008 	.word	0x40020008

08002ac0 <HAL_TIM_Base_MspInit>:
 8002ac0:	b580      	push	{r7, lr}
 8002ac2:	b084      	sub	sp, #16
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4a16      	ldr	r2, [pc, #88]	; (8002b28 <HAL_TIM_Base_MspInit+0x68>)
 8002ace:	4293      	cmp	r3, r2
 8002ad0:	d10c      	bne.n	8002aec <HAL_TIM_Base_MspInit+0x2c>
 8002ad2:	4b16      	ldr	r3, [pc, #88]	; (8002b2c <HAL_TIM_Base_MspInit+0x6c>)
 8002ad4:	699b      	ldr	r3, [r3, #24]
 8002ad6:	4a15      	ldr	r2, [pc, #84]	; (8002b2c <HAL_TIM_Base_MspInit+0x6c>)
 8002ad8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002adc:	6193      	str	r3, [r2, #24]
 8002ade:	4b13      	ldr	r3, [pc, #76]	; (8002b2c <HAL_TIM_Base_MspInit+0x6c>)
 8002ae0:	699b      	ldr	r3, [r3, #24]
 8002ae2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002ae6:	60fb      	str	r3, [r7, #12]
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	e018      	b.n	8002b1e <HAL_TIM_Base_MspInit+0x5e>
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002af4:	d113      	bne.n	8002b1e <HAL_TIM_Base_MspInit+0x5e>
 8002af6:	4b0d      	ldr	r3, [pc, #52]	; (8002b2c <HAL_TIM_Base_MspInit+0x6c>)
 8002af8:	69db      	ldr	r3, [r3, #28]
 8002afa:	4a0c      	ldr	r2, [pc, #48]	; (8002b2c <HAL_TIM_Base_MspInit+0x6c>)
 8002afc:	f043 0301 	orr.w	r3, r3, #1
 8002b00:	61d3      	str	r3, [r2, #28]
 8002b02:	4b0a      	ldr	r3, [pc, #40]	; (8002b2c <HAL_TIM_Base_MspInit+0x6c>)
 8002b04:	69db      	ldr	r3, [r3, #28]
 8002b06:	f003 0301 	and.w	r3, r3, #1
 8002b0a:	60bb      	str	r3, [r7, #8]
 8002b0c:	68bb      	ldr	r3, [r7, #8]
 8002b0e:	2200      	movs	r2, #0
 8002b10:	2105      	movs	r1, #5
 8002b12:	201c      	movs	r0, #28
 8002b14:	f000 fd7f 	bl	8003616 <HAL_NVIC_SetPriority>
 8002b18:	201c      	movs	r0, #28
 8002b1a:	f000 fd98 	bl	800364e <HAL_NVIC_EnableIRQ>
 8002b1e:	bf00      	nop
 8002b20:	3710      	adds	r7, #16
 8002b22:	46bd      	mov	sp, r7
 8002b24:	bd80      	pop	{r7, pc}
 8002b26:	bf00      	nop
 8002b28:	40012c00 	.word	0x40012c00
 8002b2c:	40021000 	.word	0x40021000

08002b30 <HAL_TIM_MspPostInit>:
 8002b30:	b580      	push	{r7, lr}
 8002b32:	b088      	sub	sp, #32
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	6078      	str	r0, [r7, #4]
 8002b38:	f107 0310 	add.w	r3, r7, #16
 8002b3c:	2200      	movs	r2, #0
 8002b3e:	601a      	str	r2, [r3, #0]
 8002b40:	605a      	str	r2, [r3, #4]
 8002b42:	609a      	str	r2, [r3, #8]
 8002b44:	60da      	str	r2, [r3, #12]
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	4a10      	ldr	r2, [pc, #64]	; (8002b8c <HAL_TIM_MspPostInit+0x5c>)
 8002b4c:	4293      	cmp	r3, r2
 8002b4e:	d118      	bne.n	8002b82 <HAL_TIM_MspPostInit+0x52>
 8002b50:	4b0f      	ldr	r3, [pc, #60]	; (8002b90 <HAL_TIM_MspPostInit+0x60>)
 8002b52:	699b      	ldr	r3, [r3, #24]
 8002b54:	4a0e      	ldr	r2, [pc, #56]	; (8002b90 <HAL_TIM_MspPostInit+0x60>)
 8002b56:	f043 0304 	orr.w	r3, r3, #4
 8002b5a:	6193      	str	r3, [r2, #24]
 8002b5c:	4b0c      	ldr	r3, [pc, #48]	; (8002b90 <HAL_TIM_MspPostInit+0x60>)
 8002b5e:	699b      	ldr	r3, [r3, #24]
 8002b60:	f003 0304 	and.w	r3, r3, #4
 8002b64:	60fb      	str	r3, [r7, #12]
 8002b66:	68fb      	ldr	r3, [r7, #12]
 8002b68:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8002b6c:	613b      	str	r3, [r7, #16]
 8002b6e:	2302      	movs	r3, #2
 8002b70:	617b      	str	r3, [r7, #20]
 8002b72:	2302      	movs	r3, #2
 8002b74:	61fb      	str	r3, [r7, #28]
 8002b76:	f107 0310 	add.w	r3, r7, #16
 8002b7a:	4619      	mov	r1, r3
 8002b7c:	4805      	ldr	r0, [pc, #20]	; (8002b94 <HAL_TIM_MspPostInit+0x64>)
 8002b7e:	f000 ff85 	bl	8003a8c <HAL_GPIO_Init>
 8002b82:	bf00      	nop
 8002b84:	3720      	adds	r7, #32
 8002b86:	46bd      	mov	sp, r7
 8002b88:	bd80      	pop	{r7, pc}
 8002b8a:	bf00      	nop
 8002b8c:	40012c00 	.word	0x40012c00
 8002b90:	40021000 	.word	0x40021000
 8002b94:	40010800 	.word	0x40010800

08002b98 <HAL_UART_MspInit>:
 8002b98:	b580      	push	{r7, lr}
 8002b9a:	b088      	sub	sp, #32
 8002b9c:	af00      	add	r7, sp, #0
 8002b9e:	6078      	str	r0, [r7, #4]
 8002ba0:	f107 0310 	add.w	r3, r7, #16
 8002ba4:	2200      	movs	r2, #0
 8002ba6:	601a      	str	r2, [r3, #0]
 8002ba8:	605a      	str	r2, [r3, #4]
 8002baa:	609a      	str	r2, [r3, #8]
 8002bac:	60da      	str	r2, [r3, #12]
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	4a20      	ldr	r2, [pc, #128]	; (8002c34 <HAL_UART_MspInit+0x9c>)
 8002bb4:	4293      	cmp	r3, r2
 8002bb6:	d139      	bne.n	8002c2c <HAL_UART_MspInit+0x94>
 8002bb8:	4b1f      	ldr	r3, [pc, #124]	; (8002c38 <HAL_UART_MspInit+0xa0>)
 8002bba:	69db      	ldr	r3, [r3, #28]
 8002bbc:	4a1e      	ldr	r2, [pc, #120]	; (8002c38 <HAL_UART_MspInit+0xa0>)
 8002bbe:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002bc2:	61d3      	str	r3, [r2, #28]
 8002bc4:	4b1c      	ldr	r3, [pc, #112]	; (8002c38 <HAL_UART_MspInit+0xa0>)
 8002bc6:	69db      	ldr	r3, [r3, #28]
 8002bc8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002bcc:	60fb      	str	r3, [r7, #12]
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	4b19      	ldr	r3, [pc, #100]	; (8002c38 <HAL_UART_MspInit+0xa0>)
 8002bd2:	699b      	ldr	r3, [r3, #24]
 8002bd4:	4a18      	ldr	r2, [pc, #96]	; (8002c38 <HAL_UART_MspInit+0xa0>)
 8002bd6:	f043 0308 	orr.w	r3, r3, #8
 8002bda:	6193      	str	r3, [r2, #24]
 8002bdc:	4b16      	ldr	r3, [pc, #88]	; (8002c38 <HAL_UART_MspInit+0xa0>)
 8002bde:	699b      	ldr	r3, [r3, #24]
 8002be0:	f003 0308 	and.w	r3, r3, #8
 8002be4:	60bb      	str	r3, [r7, #8]
 8002be6:	68bb      	ldr	r3, [r7, #8]
 8002be8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002bec:	613b      	str	r3, [r7, #16]
 8002bee:	2302      	movs	r3, #2
 8002bf0:	617b      	str	r3, [r7, #20]
 8002bf2:	2303      	movs	r3, #3
 8002bf4:	61fb      	str	r3, [r7, #28]
 8002bf6:	f107 0310 	add.w	r3, r7, #16
 8002bfa:	4619      	mov	r1, r3
 8002bfc:	480f      	ldr	r0, [pc, #60]	; (8002c3c <HAL_UART_MspInit+0xa4>)
 8002bfe:	f000 ff45 	bl	8003a8c <HAL_GPIO_Init>
 8002c02:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002c06:	613b      	str	r3, [r7, #16]
 8002c08:	2300      	movs	r3, #0
 8002c0a:	617b      	str	r3, [r7, #20]
 8002c0c:	2300      	movs	r3, #0
 8002c0e:	61bb      	str	r3, [r7, #24]
 8002c10:	f107 0310 	add.w	r3, r7, #16
 8002c14:	4619      	mov	r1, r3
 8002c16:	4809      	ldr	r0, [pc, #36]	; (8002c3c <HAL_UART_MspInit+0xa4>)
 8002c18:	f000 ff38 	bl	8003a8c <HAL_GPIO_Init>
 8002c1c:	2200      	movs	r2, #0
 8002c1e:	2105      	movs	r1, #5
 8002c20:	2027      	movs	r0, #39	; 0x27
 8002c22:	f000 fcf8 	bl	8003616 <HAL_NVIC_SetPriority>
 8002c26:	2027      	movs	r0, #39	; 0x27
 8002c28:	f000 fd11 	bl	800364e <HAL_NVIC_EnableIRQ>
 8002c2c:	bf00      	nop
 8002c2e:	3720      	adds	r7, #32
 8002c30:	46bd      	mov	sp, r7
 8002c32:	bd80      	pop	{r7, pc}
 8002c34:	40004800 	.word	0x40004800
 8002c38:	40021000 	.word	0x40021000
 8002c3c:	40010c00 	.word	0x40010c00

08002c40 <HAL_InitTick>:
 8002c40:	b580      	push	{r7, lr}
 8002c42:	b08c      	sub	sp, #48	; 0x30
 8002c44:	af00      	add	r7, sp, #0
 8002c46:	6078      	str	r0, [r7, #4]
 8002c48:	2300      	movs	r3, #0
 8002c4a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002c4c:	2300      	movs	r3, #0
 8002c4e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002c50:	2200      	movs	r2, #0
 8002c52:	6879      	ldr	r1, [r7, #4]
 8002c54:	201e      	movs	r0, #30
 8002c56:	f000 fcde 	bl	8003616 <HAL_NVIC_SetPriority>
 8002c5a:	201e      	movs	r0, #30
 8002c5c:	f000 fcf7 	bl	800364e <HAL_NVIC_EnableIRQ>
 8002c60:	4b1f      	ldr	r3, [pc, #124]	; (8002ce0 <HAL_InitTick+0xa0>)
 8002c62:	69db      	ldr	r3, [r3, #28]
 8002c64:	4a1e      	ldr	r2, [pc, #120]	; (8002ce0 <HAL_InitTick+0xa0>)
 8002c66:	f043 0304 	orr.w	r3, r3, #4
 8002c6a:	61d3      	str	r3, [r2, #28]
 8002c6c:	4b1c      	ldr	r3, [pc, #112]	; (8002ce0 <HAL_InitTick+0xa0>)
 8002c6e:	69db      	ldr	r3, [r3, #28]
 8002c70:	f003 0304 	and.w	r3, r3, #4
 8002c74:	60fb      	str	r3, [r7, #12]
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	f107 0210 	add.w	r2, r7, #16
 8002c7c:	f107 0314 	add.w	r3, r7, #20
 8002c80:	4611      	mov	r1, r2
 8002c82:	4618      	mov	r0, r3
 8002c84:	f001 fcb2 	bl	80045ec <HAL_RCC_GetClockConfig>
 8002c88:	f001 fc88 	bl	800459c <HAL_RCC_GetPCLK1Freq>
 8002c8c:	4603      	mov	r3, r0
 8002c8e:	005b      	lsls	r3, r3, #1
 8002c90:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002c92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002c94:	4a13      	ldr	r2, [pc, #76]	; (8002ce4 <HAL_InitTick+0xa4>)
 8002c96:	fba2 2303 	umull	r2, r3, r2, r3
 8002c9a:	0c9b      	lsrs	r3, r3, #18
 8002c9c:	3b01      	subs	r3, #1
 8002c9e:	62bb      	str	r3, [r7, #40]	; 0x28
 8002ca0:	4b11      	ldr	r3, [pc, #68]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002ca2:	4a12      	ldr	r2, [pc, #72]	; (8002cec <HAL_InitTick+0xac>)
 8002ca4:	601a      	str	r2, [r3, #0]
 8002ca6:	4b10      	ldr	r3, [pc, #64]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002ca8:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002cac:	60da      	str	r2, [r3, #12]
 8002cae:	4a0e      	ldr	r2, [pc, #56]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002cb0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002cb2:	6053      	str	r3, [r2, #4]
 8002cb4:	4b0c      	ldr	r3, [pc, #48]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002cb6:	2200      	movs	r2, #0
 8002cb8:	611a      	str	r2, [r3, #16]
 8002cba:	4b0b      	ldr	r3, [pc, #44]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002cbc:	2200      	movs	r2, #0
 8002cbe:	609a      	str	r2, [r3, #8]
 8002cc0:	4809      	ldr	r0, [pc, #36]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002cc2:	f001 fd97 	bl	80047f4 <HAL_TIM_Base_Init>
 8002cc6:	4603      	mov	r3, r0
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d104      	bne.n	8002cd6 <HAL_InitTick+0x96>
 8002ccc:	4806      	ldr	r0, [pc, #24]	; (8002ce8 <HAL_InitTick+0xa8>)
 8002cce:	f001 fde1 	bl	8004894 <HAL_TIM_Base_Start_IT>
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	e000      	b.n	8002cd8 <HAL_InitTick+0x98>
 8002cd6:	2301      	movs	r3, #1
 8002cd8:	4618      	mov	r0, r3
 8002cda:	3730      	adds	r7, #48	; 0x30
 8002cdc:	46bd      	mov	sp, r7
 8002cde:	bd80      	pop	{r7, pc}
 8002ce0:	40021000 	.word	0x40021000
 8002ce4:	431bde83 	.word	0x431bde83
 8002ce8:	20001080 	.word	0x20001080
 8002cec:	40000800 	.word	0x40000800

08002cf0 <NMI_Handler>:
 8002cf0:	b480      	push	{r7}
 8002cf2:	af00      	add	r7, sp, #0
 8002cf4:	e7fe      	b.n	8002cf4 <NMI_Handler+0x4>

08002cf6 <HardFault_Handler>:
 8002cf6:	b480      	push	{r7}
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	e7fe      	b.n	8002cfa <HardFault_Handler+0x4>

08002cfc <MemManage_Handler>:
 8002cfc:	b480      	push	{r7}
 8002cfe:	af00      	add	r7, sp, #0
 8002d00:	e7fe      	b.n	8002d00 <MemManage_Handler+0x4>

08002d02 <BusFault_Handler>:
 8002d02:	b480      	push	{r7}
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	e7fe      	b.n	8002d06 <BusFault_Handler+0x4>

08002d08 <UsageFault_Handler>:
 8002d08:	b480      	push	{r7}
 8002d0a:	af00      	add	r7, sp, #0
 8002d0c:	e7fe      	b.n	8002d0c <UsageFault_Handler+0x4>

08002d0e <DebugMon_Handler>:
 8002d0e:	b480      	push	{r7}
 8002d10:	af00      	add	r7, sp, #0
 8002d12:	bf00      	nop
 8002d14:	46bd      	mov	sp, r7
 8002d16:	bc80      	pop	{r7}
 8002d18:	4770      	bx	lr
	...

08002d1c <DMA1_Channel1_IRQHandler>:
 8002d1c:	b580      	push	{r7, lr}
 8002d1e:	af00      	add	r7, sp, #0
 8002d20:	4802      	ldr	r0, [pc, #8]	; (8002d2c <DMA1_Channel1_IRQHandler+0x10>)
 8002d22:	f000 fdad 	bl	8003880 <HAL_DMA_IRQHandler>
 8002d26:	bf00      	nop
 8002d28:	bd80      	pop	{r7, pc}
 8002d2a:	bf00      	nop
 8002d2c:	20000fa0 	.word	0x20000fa0

08002d30 <ADC1_2_IRQHandler>:
 8002d30:	b580      	push	{r7, lr}
 8002d32:	af00      	add	r7, sp, #0
 8002d34:	4802      	ldr	r0, [pc, #8]	; (8002d40 <ADC1_2_IRQHandler+0x10>)
 8002d36:	f000 f9a1 	bl	800307c <HAL_ADC_IRQHandler>
 8002d3a:	bf00      	nop
 8002d3c:	bd80      	pop	{r7, pc}
 8002d3e:	bf00      	nop
 8002d40:	20000f70 	.word	0x20000f70

08002d44 <EXTI9_5_IRQHandler>:
 8002d44:	b580      	push	{r7, lr}
 8002d46:	af00      	add	r7, sp, #0
 8002d48:	2040      	movs	r0, #64	; 0x40
 8002d4a:	f001 f83b 	bl	8003dc4 <HAL_GPIO_EXTI_IRQHandler>
 8002d4e:	2080      	movs	r0, #128	; 0x80
 8002d50:	f001 f838 	bl	8003dc4 <HAL_GPIO_EXTI_IRQHandler>
 8002d54:	f44f 7080 	mov.w	r0, #256	; 0x100
 8002d58:	f001 f834 	bl	8003dc4 <HAL_GPIO_EXTI_IRQHandler>
 8002d5c:	f44f 7000 	mov.w	r0, #512	; 0x200
 8002d60:	f001 f830 	bl	8003dc4 <HAL_GPIO_EXTI_IRQHandler>
 8002d64:	bf00      	nop
 8002d66:	bd80      	pop	{r7, pc}

08002d68 <TIM2_IRQHandler>:
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	af00      	add	r7, sp, #0
 8002d6c:	4802      	ldr	r0, [pc, #8]	; (8002d78 <TIM2_IRQHandler+0x10>)
 8002d6e:	f001 fedd 	bl	8004b2c <HAL_TIM_IRQHandler>
 8002d72:	bf00      	nop
 8002d74:	bd80      	pop	{r7, pc}
 8002d76:	bf00      	nop
 8002d78:	2000102c 	.word	0x2000102c

08002d7c <TIM4_IRQHandler>:
 8002d7c:	b580      	push	{r7, lr}
 8002d7e:	af00      	add	r7, sp, #0
 8002d80:	4802      	ldr	r0, [pc, #8]	; (8002d8c <TIM4_IRQHandler+0x10>)
 8002d82:	f001 fed3 	bl	8004b2c <HAL_TIM_IRQHandler>
 8002d86:	bf00      	nop
 8002d88:	bd80      	pop	{r7, pc}
 8002d8a:	bf00      	nop
 8002d8c:	20001080 	.word	0x20001080

08002d90 <USART3_IRQHandler>:
 8002d90:	b580      	push	{r7, lr}
 8002d92:	af00      	add	r7, sp, #0
 8002d94:	4802      	ldr	r0, [pc, #8]	; (8002da0 <USART3_IRQHandler+0x10>)
 8002d96:	f002 fe07 	bl	80059a8 <HAL_UART_IRQHandler>
 8002d9a:	bf00      	nop
 8002d9c:	bd80      	pop	{r7, pc}
 8002d9e:	bf00      	nop
 8002da0:	20000f28 	.word	0x20000f28

08002da4 <_sbrk>:
 8002da4:	b580      	push	{r7, lr}
 8002da6:	b086      	sub	sp, #24
 8002da8:	af00      	add	r7, sp, #0
 8002daa:	6078      	str	r0, [r7, #4]
 8002dac:	4a14      	ldr	r2, [pc, #80]	; (8002e00 <_sbrk+0x5c>)
 8002dae:	4b15      	ldr	r3, [pc, #84]	; (8002e04 <_sbrk+0x60>)
 8002db0:	1ad3      	subs	r3, r2, r3
 8002db2:	617b      	str	r3, [r7, #20]
 8002db4:	697b      	ldr	r3, [r7, #20]
 8002db6:	613b      	str	r3, [r7, #16]
 8002db8:	4b13      	ldr	r3, [pc, #76]	; (8002e08 <_sbrk+0x64>)
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d102      	bne.n	8002dc6 <_sbrk+0x22>
 8002dc0:	4b11      	ldr	r3, [pc, #68]	; (8002e08 <_sbrk+0x64>)
 8002dc2:	4a12      	ldr	r2, [pc, #72]	; (8002e0c <_sbrk+0x68>)
 8002dc4:	601a      	str	r2, [r3, #0]
 8002dc6:	4b10      	ldr	r3, [pc, #64]	; (8002e08 <_sbrk+0x64>)
 8002dc8:	681a      	ldr	r2, [r3, #0]
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	4413      	add	r3, r2
 8002dce:	693a      	ldr	r2, [r7, #16]
 8002dd0:	429a      	cmp	r2, r3
 8002dd2:	d207      	bcs.n	8002de4 <_sbrk+0x40>
 8002dd4:	f006 fcd6 	bl	8009784 <__errno>
 8002dd8:	4603      	mov	r3, r0
 8002dda:	220c      	movs	r2, #12
 8002ddc:	601a      	str	r2, [r3, #0]
 8002dde:	f04f 33ff 	mov.w	r3, #4294967295
 8002de2:	e009      	b.n	8002df8 <_sbrk+0x54>
 8002de4:	4b08      	ldr	r3, [pc, #32]	; (8002e08 <_sbrk+0x64>)
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	60fb      	str	r3, [r7, #12]
 8002dea:	4b07      	ldr	r3, [pc, #28]	; (8002e08 <_sbrk+0x64>)
 8002dec:	681a      	ldr	r2, [r3, #0]
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	4413      	add	r3, r2
 8002df2:	4a05      	ldr	r2, [pc, #20]	; (8002e08 <_sbrk+0x64>)
 8002df4:	6013      	str	r3, [r2, #0]
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	4618      	mov	r0, r3
 8002dfa:	3718      	adds	r7, #24
 8002dfc:	46bd      	mov	sp, r7
 8002dfe:	bd80      	pop	{r7, pc}
 8002e00:	20005000 	.word	0x20005000
 8002e04:	00000400 	.word	0x00000400
 8002e08:	200000dc 	.word	0x200000dc
 8002e0c:	20001120 	.word	0x20001120

08002e10 <SystemInit>:
 8002e10:	b480      	push	{r7}
 8002e12:	af00      	add	r7, sp, #0
 8002e14:	bf00      	nop
 8002e16:	46bd      	mov	sp, r7
 8002e18:	bc80      	pop	{r7}
 8002e1a:	4770      	bx	lr

08002e1c <Reset_Handler>:
 8002e1c:	480c      	ldr	r0, [pc, #48]	; (8002e50 <LoopFillZerobss+0x12>)
 8002e1e:	490d      	ldr	r1, [pc, #52]	; (8002e54 <LoopFillZerobss+0x16>)
 8002e20:	4a0d      	ldr	r2, [pc, #52]	; (8002e58 <LoopFillZerobss+0x1a>)
 8002e22:	2300      	movs	r3, #0
 8002e24:	e002      	b.n	8002e2c <LoopCopyDataInit>

08002e26 <CopyDataInit>:
 8002e26:	58d4      	ldr	r4, [r2, r3]
 8002e28:	50c4      	str	r4, [r0, r3]
 8002e2a:	3304      	adds	r3, #4

08002e2c <LoopCopyDataInit>:
 8002e2c:	18c4      	adds	r4, r0, r3
 8002e2e:	428c      	cmp	r4, r1
 8002e30:	d3f9      	bcc.n	8002e26 <CopyDataInit>
 8002e32:	4a0a      	ldr	r2, [pc, #40]	; (8002e5c <LoopFillZerobss+0x1e>)
 8002e34:	4c0a      	ldr	r4, [pc, #40]	; (8002e60 <LoopFillZerobss+0x22>)
 8002e36:	2300      	movs	r3, #0
 8002e38:	e001      	b.n	8002e3e <LoopFillZerobss>

08002e3a <FillZerobss>:
 8002e3a:	6013      	str	r3, [r2, #0]
 8002e3c:	3204      	adds	r2, #4

08002e3e <LoopFillZerobss>:
 8002e3e:	42a2      	cmp	r2, r4
 8002e40:	d3fb      	bcc.n	8002e3a <FillZerobss>
 8002e42:	f7ff ffe5 	bl	8002e10 <SystemInit>
 8002e46:	f006 fca3 	bl	8009790 <__libc_init_array>
 8002e4a:	f7ff f9a1 	bl	8002190 <main>
 8002e4e:	4770      	bx	lr
 8002e50:	20000000 	.word	0x20000000
 8002e54:	200000a0 	.word	0x200000a0
 8002e58:	0800a2e0 	.word	0x0800a2e0
 8002e5c:	200000a0 	.word	0x200000a0
 8002e60:	2000111c 	.word	0x2000111c

08002e64 <CAN1_RX1_IRQHandler>:
 8002e64:	e7fe      	b.n	8002e64 <CAN1_RX1_IRQHandler>
	...

08002e68 <HAL_Init>:
 8002e68:	b580      	push	{r7, lr}
 8002e6a:	af00      	add	r7, sp, #0
 8002e6c:	4b08      	ldr	r3, [pc, #32]	; (8002e90 <HAL_Init+0x28>)
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	4a07      	ldr	r2, [pc, #28]	; (8002e90 <HAL_Init+0x28>)
 8002e72:	f043 0310 	orr.w	r3, r3, #16
 8002e76:	6013      	str	r3, [r2, #0]
 8002e78:	2003      	movs	r0, #3
 8002e7a:	f000 fbc1 	bl	8003600 <HAL_NVIC_SetPriorityGrouping>
 8002e7e:	200f      	movs	r0, #15
 8002e80:	f7ff fede 	bl	8002c40 <HAL_InitTick>
 8002e84:	f7ff fd74 	bl	8002970 <HAL_MspInit>
 8002e88:	2300      	movs	r3, #0
 8002e8a:	4618      	mov	r0, r3
 8002e8c:	bd80      	pop	{r7, pc}
 8002e8e:	bf00      	nop
 8002e90:	40022000 	.word	0x40022000

08002e94 <HAL_IncTick>:
 8002e94:	b480      	push	{r7}
 8002e96:	af00      	add	r7, sp, #0
 8002e98:	4b05      	ldr	r3, [pc, #20]	; (8002eb0 <HAL_IncTick+0x1c>)
 8002e9a:	781b      	ldrb	r3, [r3, #0]
 8002e9c:	461a      	mov	r2, r3
 8002e9e:	4b05      	ldr	r3, [pc, #20]	; (8002eb4 <HAL_IncTick+0x20>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	4413      	add	r3, r2
 8002ea4:	4a03      	ldr	r2, [pc, #12]	; (8002eb4 <HAL_IncTick+0x20>)
 8002ea6:	6013      	str	r3, [r2, #0]
 8002ea8:	bf00      	nop
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	bc80      	pop	{r7}
 8002eae:	4770      	bx	lr
 8002eb0:	20000034 	.word	0x20000034
 8002eb4:	200010c8 	.word	0x200010c8

08002eb8 <HAL_GetTick>:
 8002eb8:	b480      	push	{r7}
 8002eba:	af00      	add	r7, sp, #0
 8002ebc:	4b02      	ldr	r3, [pc, #8]	; (8002ec8 <HAL_GetTick+0x10>)
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	46bd      	mov	sp, r7
 8002ec4:	bc80      	pop	{r7}
 8002ec6:	4770      	bx	lr
 8002ec8:	200010c8 	.word	0x200010c8

08002ecc <HAL_ADC_Init>:
 8002ecc:	b580      	push	{r7, lr}
 8002ece:	b086      	sub	sp, #24
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
 8002ed4:	2300      	movs	r3, #0
 8002ed6:	75fb      	strb	r3, [r7, #23]
 8002ed8:	2300      	movs	r3, #0
 8002eda:	613b      	str	r3, [r7, #16]
 8002edc:	2300      	movs	r3, #0
 8002ede:	60bb      	str	r3, [r7, #8]
 8002ee0:	2300      	movs	r3, #0
 8002ee2:	60fb      	str	r3, [r7, #12]
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d101      	bne.n	8002eee <HAL_ADC_Init+0x22>
 8002eea:	2301      	movs	r3, #1
 8002eec:	e0be      	b.n	800306c <HAL_ADC_Init+0x1a0>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	689b      	ldr	r3, [r3, #8]
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ef8:	2b00      	cmp	r3, #0
 8002efa:	d109      	bne.n	8002f10 <HAL_ADC_Init+0x44>
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	2200      	movs	r2, #0
 8002f00:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	2200      	movs	r2, #0
 8002f06:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002f0a:	6878      	ldr	r0, [r7, #4]
 8002f0c:	f7ff fd68 	bl	80029e0 <HAL_ADC_MspInit>
 8002f10:	6878      	ldr	r0, [r7, #4]
 8002f12:	f000 fa81 	bl	8003418 <ADC_ConversionStop_Disable>
 8002f16:	4603      	mov	r3, r0
 8002f18:	75fb      	strb	r3, [r7, #23]
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f1e:	f003 0310 	and.w	r3, r3, #16
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	f040 8099 	bne.w	800305a <HAL_ADC_Init+0x18e>
 8002f28:	7dfb      	ldrb	r3, [r7, #23]
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	f040 8095 	bne.w	800305a <HAL_ADC_Init+0x18e>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f34:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002f38:	f023 0302 	bic.w	r3, r3, #2
 8002f3c:	f043 0202 	orr.w	r2, r3, #2
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	629a      	str	r2, [r3, #40]	; 0x28
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	685a      	ldr	r2, [r3, #4]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	69db      	ldr	r3, [r3, #28]
 8002f4c:	431a      	orrs	r2, r3
 8002f4e:	687b      	ldr	r3, [r7, #4]
 8002f50:	7b1b      	ldrb	r3, [r3, #12]
 8002f52:	005b      	lsls	r3, r3, #1
 8002f54:	4313      	orrs	r3, r2
 8002f56:	68ba      	ldr	r2, [r7, #8]
 8002f58:	4313      	orrs	r3, r2
 8002f5a:	60bb      	str	r3, [r7, #8]
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	689b      	ldr	r3, [r3, #8]
 8002f60:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002f64:	d003      	beq.n	8002f6e <HAL_ADC_Init+0xa2>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	689b      	ldr	r3, [r3, #8]
 8002f6a:	2b01      	cmp	r3, #1
 8002f6c:	d102      	bne.n	8002f74 <HAL_ADC_Init+0xa8>
 8002f6e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002f72:	e000      	b.n	8002f76 <HAL_ADC_Init+0xaa>
 8002f74:	2300      	movs	r3, #0
 8002f76:	693a      	ldr	r2, [r7, #16]
 8002f78:	4313      	orrs	r3, r2
 8002f7a:	613b      	str	r3, [r7, #16]
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	7d1b      	ldrb	r3, [r3, #20]
 8002f80:	2b01      	cmp	r3, #1
 8002f82:	d119      	bne.n	8002fb8 <HAL_ADC_Init+0xec>
 8002f84:	687b      	ldr	r3, [r7, #4]
 8002f86:	7b1b      	ldrb	r3, [r3, #12]
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d109      	bne.n	8002fa0 <HAL_ADC_Init+0xd4>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	699b      	ldr	r3, [r3, #24]
 8002f90:	3b01      	subs	r3, #1
 8002f92:	035a      	lsls	r2, r3, #13
 8002f94:	693b      	ldr	r3, [r7, #16]
 8002f96:	4313      	orrs	r3, r2
 8002f98:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002f9c:	613b      	str	r3, [r7, #16]
 8002f9e:	e00b      	b.n	8002fb8 <HAL_ADC_Init+0xec>
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002fa4:	f043 0220 	orr.w	r2, r3, #32
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	629a      	str	r2, [r3, #40]	; 0x28
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002fb0:	f043 0201 	orr.w	r2, r3, #1
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	62da      	str	r2, [r3, #44]	; 0x2c
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	685b      	ldr	r3, [r3, #4]
 8002fbe:	f423 4169 	bic.w	r1, r3, #59648	; 0xe900
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	693a      	ldr	r2, [r7, #16]
 8002fc8:	430a      	orrs	r2, r1
 8002fca:	605a      	str	r2, [r3, #4]
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	689a      	ldr	r2, [r3, #8]
 8002fd2:	4b28      	ldr	r3, [pc, #160]	; (8003074 <HAL_ADC_Init+0x1a8>)
 8002fd4:	4013      	ands	r3, r2
 8002fd6:	687a      	ldr	r2, [r7, #4]
 8002fd8:	6812      	ldr	r2, [r2, #0]
 8002fda:	68b9      	ldr	r1, [r7, #8]
 8002fdc:	430b      	orrs	r3, r1
 8002fde:	6093      	str	r3, [r2, #8]
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	689b      	ldr	r3, [r3, #8]
 8002fe4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002fe8:	d003      	beq.n	8002ff2 <HAL_ADC_Init+0x126>
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	689b      	ldr	r3, [r3, #8]
 8002fee:	2b01      	cmp	r3, #1
 8002ff0:	d104      	bne.n	8002ffc <HAL_ADC_Init+0x130>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	691b      	ldr	r3, [r3, #16]
 8002ff6:	3b01      	subs	r3, #1
 8002ff8:	051b      	lsls	r3, r3, #20
 8002ffa:	60fb      	str	r3, [r7, #12]
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003002:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	68fa      	ldr	r2, [r7, #12]
 800300c:	430a      	orrs	r2, r1
 800300e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	689a      	ldr	r2, [r3, #8]
 8003016:	4b18      	ldr	r3, [pc, #96]	; (8003078 <HAL_ADC_Init+0x1ac>)
 8003018:	4013      	ands	r3, r2
 800301a:	68ba      	ldr	r2, [r7, #8]
 800301c:	429a      	cmp	r2, r3
 800301e:	d10b      	bne.n	8003038 <HAL_ADC_Init+0x16c>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	2200      	movs	r2, #0
 8003024:	62da      	str	r2, [r3, #44]	; 0x2c
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800302a:	f023 0303 	bic.w	r3, r3, #3
 800302e:	f043 0201 	orr.w	r2, r3, #1
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	629a      	str	r2, [r3, #40]	; 0x28
 8003036:	e018      	b.n	800306a <HAL_ADC_Init+0x19e>
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800303c:	f023 0312 	bic.w	r3, r3, #18
 8003040:	f043 0210 	orr.w	r2, r3, #16
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	629a      	str	r2, [r3, #40]	; 0x28
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800304c:	f043 0201 	orr.w	r2, r3, #1
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	62da      	str	r2, [r3, #44]	; 0x2c
 8003054:	2301      	movs	r3, #1
 8003056:	75fb      	strb	r3, [r7, #23]
 8003058:	e007      	b.n	800306a <HAL_ADC_Init+0x19e>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800305e:	f043 0210 	orr.w	r2, r3, #16
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	629a      	str	r2, [r3, #40]	; 0x28
 8003066:	2301      	movs	r3, #1
 8003068:	75fb      	strb	r3, [r7, #23]
 800306a:	7dfb      	ldrb	r3, [r7, #23]
 800306c:	4618      	mov	r0, r3
 800306e:	3718      	adds	r7, #24
 8003070:	46bd      	mov	sp, r7
 8003072:	bd80      	pop	{r7, pc}
 8003074:	ffe1f7fd 	.word	0xffe1f7fd
 8003078:	ff1f0efe 	.word	0xff1f0efe

0800307c <HAL_ADC_IRQHandler>:
 800307c:	b580      	push	{r7, lr}
 800307e:	b082      	sub	sp, #8
 8003080:	af00      	add	r7, sp, #0
 8003082:	6078      	str	r0, [r7, #4]
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	685b      	ldr	r3, [r3, #4]
 800308a:	f003 0320 	and.w	r3, r3, #32
 800308e:	2b20      	cmp	r3, #32
 8003090:	d140      	bne.n	8003114 <HAL_ADC_IRQHandler+0x98>
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	f003 0302 	and.w	r3, r3, #2
 800309c:	2b02      	cmp	r3, #2
 800309e:	d139      	bne.n	8003114 <HAL_ADC_IRQHandler+0x98>
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030a4:	f003 0310 	and.w	r3, r3, #16
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	d105      	bne.n	80030b8 <HAL_ADC_IRQHandler+0x3c>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030b0:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	629a      	str	r2, [r3, #40]	; 0x28
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	689b      	ldr	r3, [r3, #8]
 80030be:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 80030c2:	f5b3 2f60 	cmp.w	r3, #917504	; 0xe0000
 80030c6:	d11d      	bne.n	8003104 <HAL_ADC_IRQHandler+0x88>
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	7b1b      	ldrb	r3, [r3, #12]
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d119      	bne.n	8003104 <HAL_ADC_IRQHandler+0x88>
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	685a      	ldr	r2, [r3, #4]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	681b      	ldr	r3, [r3, #0]
 80030da:	f022 0220 	bic.w	r2, r2, #32
 80030de:	605a      	str	r2, [r3, #4]
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030e4:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	629a      	str	r2, [r3, #40]	; 0x28
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030f0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d105      	bne.n	8003104 <HAL_ADC_IRQHandler+0x88>
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030fc:	f043 0201 	orr.w	r2, r3, #1
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	629a      	str	r2, [r3, #40]	; 0x28
 8003104:	6878      	ldr	r0, [r7, #4]
 8003106:	f000 f87c 	bl	8003202 <HAL_ADC_ConvCpltCallback>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	f06f 0212 	mvn.w	r2, #18
 8003112:	601a      	str	r2, [r3, #0]
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	685b      	ldr	r3, [r3, #4]
 800311a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800311e:	2b80      	cmp	r3, #128	; 0x80
 8003120:	d14f      	bne.n	80031c2 <HAL_ADC_IRQHandler+0x146>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	f003 0304 	and.w	r3, r3, #4
 800312c:	2b04      	cmp	r3, #4
 800312e:	d148      	bne.n	80031c2 <HAL_ADC_IRQHandler+0x146>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003134:	f003 0310 	and.w	r3, r3, #16
 8003138:	2b00      	cmp	r3, #0
 800313a:	d105      	bne.n	8003148 <HAL_ADC_IRQHandler+0xcc>
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003140:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	629a      	str	r2, [r3, #40]	; 0x28
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	689b      	ldr	r3, [r3, #8]
 800314e:	f403 43e0 	and.w	r3, r3, #28672	; 0x7000
 8003152:	f5b3 4fe0 	cmp.w	r3, #28672	; 0x7000
 8003156:	d012      	beq.n	800317e <HAL_ADC_IRQHandler+0x102>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	685b      	ldr	r3, [r3, #4]
 800315e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003162:	2b00      	cmp	r3, #0
 8003164:	d125      	bne.n	80031b2 <HAL_ADC_IRQHandler+0x136>
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	689b      	ldr	r3, [r3, #8]
 800316c:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
 8003170:	f5b3 2f60 	cmp.w	r3, #917504	; 0xe0000
 8003174:	d11d      	bne.n	80031b2 <HAL_ADC_IRQHandler+0x136>
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	7b1b      	ldrb	r3, [r3, #12]
 800317a:	2b00      	cmp	r3, #0
 800317c:	d119      	bne.n	80031b2 <HAL_ADC_IRQHandler+0x136>
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	685a      	ldr	r2, [r3, #4]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800318c:	605a      	str	r2, [r3, #4]
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003192:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	629a      	str	r2, [r3, #40]	; 0x28
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800319e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d105      	bne.n	80031b2 <HAL_ADC_IRQHandler+0x136>
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031aa:	f043 0201 	orr.w	r2, r3, #1
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	629a      	str	r2, [r3, #40]	; 0x28
 80031b2:	6878      	ldr	r0, [r7, #4]
 80031b4:	f000 f971 	bl	800349a <HAL_ADCEx_InjectedConvCpltCallback>
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	f06f 020c 	mvn.w	r2, #12
 80031c0:	601a      	str	r2, [r3, #0]
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	685b      	ldr	r3, [r3, #4]
 80031c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80031cc:	2b40      	cmp	r3, #64	; 0x40
 80031ce:	d114      	bne.n	80031fa <HAL_ADC_IRQHandler+0x17e>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	f003 0301 	and.w	r3, r3, #1
 80031da:	2b01      	cmp	r3, #1
 80031dc:	d10d      	bne.n	80031fa <HAL_ADC_IRQHandler+0x17e>
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031e2:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	629a      	str	r2, [r3, #40]	; 0x28
 80031ea:	6878      	ldr	r0, [r7, #4]
 80031ec:	f000 f812 	bl	8003214 <HAL_ADC_LevelOutOfWindowCallback>
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	f06f 0201 	mvn.w	r2, #1
 80031f8:	601a      	str	r2, [r3, #0]
 80031fa:	bf00      	nop
 80031fc:	3708      	adds	r7, #8
 80031fe:	46bd      	mov	sp, r7
 8003200:	bd80      	pop	{r7, pc}

08003202 <HAL_ADC_ConvCpltCallback>:
 8003202:	b480      	push	{r7}
 8003204:	b083      	sub	sp, #12
 8003206:	af00      	add	r7, sp, #0
 8003208:	6078      	str	r0, [r7, #4]
 800320a:	bf00      	nop
 800320c:	370c      	adds	r7, #12
 800320e:	46bd      	mov	sp, r7
 8003210:	bc80      	pop	{r7}
 8003212:	4770      	bx	lr

08003214 <HAL_ADC_LevelOutOfWindowCallback>:
 8003214:	b480      	push	{r7}
 8003216:	b083      	sub	sp, #12
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
 800321c:	bf00      	nop
 800321e:	370c      	adds	r7, #12
 8003220:	46bd      	mov	sp, r7
 8003222:	bc80      	pop	{r7}
 8003224:	4770      	bx	lr
	...

08003228 <HAL_ADC_ConfigChannel>:
 8003228:	b480      	push	{r7}
 800322a:	b085      	sub	sp, #20
 800322c:	af00      	add	r7, sp, #0
 800322e:	6078      	str	r0, [r7, #4]
 8003230:	6039      	str	r1, [r7, #0]
 8003232:	2300      	movs	r3, #0
 8003234:	73fb      	strb	r3, [r7, #15]
 8003236:	2300      	movs	r3, #0
 8003238:	60bb      	str	r3, [r7, #8]
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8003240:	2b01      	cmp	r3, #1
 8003242:	d101      	bne.n	8003248 <HAL_ADC_ConfigChannel+0x20>
 8003244:	2302      	movs	r3, #2
 8003246:	e0dc      	b.n	8003402 <HAL_ADC_ConfigChannel+0x1da>
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	2201      	movs	r2, #1
 800324c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003250:	683b      	ldr	r3, [r7, #0]
 8003252:	685b      	ldr	r3, [r3, #4]
 8003254:	2b06      	cmp	r3, #6
 8003256:	d81c      	bhi.n	8003292 <HAL_ADC_ConfigChannel+0x6a>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800325e:	683b      	ldr	r3, [r7, #0]
 8003260:	685a      	ldr	r2, [r3, #4]
 8003262:	4613      	mov	r3, r2
 8003264:	009b      	lsls	r3, r3, #2
 8003266:	4413      	add	r3, r2
 8003268:	3b05      	subs	r3, #5
 800326a:	221f      	movs	r2, #31
 800326c:	fa02 f303 	lsl.w	r3, r2, r3
 8003270:	43db      	mvns	r3, r3
 8003272:	4019      	ands	r1, r3
 8003274:	683b      	ldr	r3, [r7, #0]
 8003276:	6818      	ldr	r0, [r3, #0]
 8003278:	683b      	ldr	r3, [r7, #0]
 800327a:	685a      	ldr	r2, [r3, #4]
 800327c:	4613      	mov	r3, r2
 800327e:	009b      	lsls	r3, r3, #2
 8003280:	4413      	add	r3, r2
 8003282:	3b05      	subs	r3, #5
 8003284:	fa00 f203 	lsl.w	r2, r0, r3
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	430a      	orrs	r2, r1
 800328e:	635a      	str	r2, [r3, #52]	; 0x34
 8003290:	e03c      	b.n	800330c <HAL_ADC_ConfigChannel+0xe4>
 8003292:	683b      	ldr	r3, [r7, #0]
 8003294:	685b      	ldr	r3, [r3, #4]
 8003296:	2b0c      	cmp	r3, #12
 8003298:	d81c      	bhi.n	80032d4 <HAL_ADC_ConfigChannel+0xac>
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	681b      	ldr	r3, [r3, #0]
 800329e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80032a0:	683b      	ldr	r3, [r7, #0]
 80032a2:	685a      	ldr	r2, [r3, #4]
 80032a4:	4613      	mov	r3, r2
 80032a6:	009b      	lsls	r3, r3, #2
 80032a8:	4413      	add	r3, r2
 80032aa:	3b23      	subs	r3, #35	; 0x23
 80032ac:	221f      	movs	r2, #31
 80032ae:	fa02 f303 	lsl.w	r3, r2, r3
 80032b2:	43db      	mvns	r3, r3
 80032b4:	4019      	ands	r1, r3
 80032b6:	683b      	ldr	r3, [r7, #0]
 80032b8:	6818      	ldr	r0, [r3, #0]
 80032ba:	683b      	ldr	r3, [r7, #0]
 80032bc:	685a      	ldr	r2, [r3, #4]
 80032be:	4613      	mov	r3, r2
 80032c0:	009b      	lsls	r3, r3, #2
 80032c2:	4413      	add	r3, r2
 80032c4:	3b23      	subs	r3, #35	; 0x23
 80032c6:	fa00 f203 	lsl.w	r2, r0, r3
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	430a      	orrs	r2, r1
 80032d0:	631a      	str	r2, [r3, #48]	; 0x30
 80032d2:	e01b      	b.n	800330c <HAL_ADC_ConfigChannel+0xe4>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80032da:	683b      	ldr	r3, [r7, #0]
 80032dc:	685a      	ldr	r2, [r3, #4]
 80032de:	4613      	mov	r3, r2
 80032e0:	009b      	lsls	r3, r3, #2
 80032e2:	4413      	add	r3, r2
 80032e4:	3b41      	subs	r3, #65	; 0x41
 80032e6:	221f      	movs	r2, #31
 80032e8:	fa02 f303 	lsl.w	r3, r2, r3
 80032ec:	43db      	mvns	r3, r3
 80032ee:	4019      	ands	r1, r3
 80032f0:	683b      	ldr	r3, [r7, #0]
 80032f2:	6818      	ldr	r0, [r3, #0]
 80032f4:	683b      	ldr	r3, [r7, #0]
 80032f6:	685a      	ldr	r2, [r3, #4]
 80032f8:	4613      	mov	r3, r2
 80032fa:	009b      	lsls	r3, r3, #2
 80032fc:	4413      	add	r3, r2
 80032fe:	3b41      	subs	r3, #65	; 0x41
 8003300:	fa00 f203 	lsl.w	r2, r0, r3
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	430a      	orrs	r2, r1
 800330a:	62da      	str	r2, [r3, #44]	; 0x2c
 800330c:	683b      	ldr	r3, [r7, #0]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	2b09      	cmp	r3, #9
 8003312:	d91c      	bls.n	800334e <HAL_ADC_ConfigChannel+0x126>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	68d9      	ldr	r1, [r3, #12]
 800331a:	683b      	ldr	r3, [r7, #0]
 800331c:	681a      	ldr	r2, [r3, #0]
 800331e:	4613      	mov	r3, r2
 8003320:	005b      	lsls	r3, r3, #1
 8003322:	4413      	add	r3, r2
 8003324:	3b1e      	subs	r3, #30
 8003326:	2207      	movs	r2, #7
 8003328:	fa02 f303 	lsl.w	r3, r2, r3
 800332c:	43db      	mvns	r3, r3
 800332e:	4019      	ands	r1, r3
 8003330:	683b      	ldr	r3, [r7, #0]
 8003332:	6898      	ldr	r0, [r3, #8]
 8003334:	683b      	ldr	r3, [r7, #0]
 8003336:	681a      	ldr	r2, [r3, #0]
 8003338:	4613      	mov	r3, r2
 800333a:	005b      	lsls	r3, r3, #1
 800333c:	4413      	add	r3, r2
 800333e:	3b1e      	subs	r3, #30
 8003340:	fa00 f203 	lsl.w	r2, r0, r3
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	430a      	orrs	r2, r1
 800334a:	60da      	str	r2, [r3, #12]
 800334c:	e019      	b.n	8003382 <HAL_ADC_ConfigChannel+0x15a>
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	6919      	ldr	r1, [r3, #16]
 8003354:	683b      	ldr	r3, [r7, #0]
 8003356:	681a      	ldr	r2, [r3, #0]
 8003358:	4613      	mov	r3, r2
 800335a:	005b      	lsls	r3, r3, #1
 800335c:	4413      	add	r3, r2
 800335e:	2207      	movs	r2, #7
 8003360:	fa02 f303 	lsl.w	r3, r2, r3
 8003364:	43db      	mvns	r3, r3
 8003366:	4019      	ands	r1, r3
 8003368:	683b      	ldr	r3, [r7, #0]
 800336a:	6898      	ldr	r0, [r3, #8]
 800336c:	683b      	ldr	r3, [r7, #0]
 800336e:	681a      	ldr	r2, [r3, #0]
 8003370:	4613      	mov	r3, r2
 8003372:	005b      	lsls	r3, r3, #1
 8003374:	4413      	add	r3, r2
 8003376:	fa00 f203 	lsl.w	r2, r0, r3
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	430a      	orrs	r2, r1
 8003380:	611a      	str	r2, [r3, #16]
 8003382:	683b      	ldr	r3, [r7, #0]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	2b10      	cmp	r3, #16
 8003388:	d003      	beq.n	8003392 <HAL_ADC_ConfigChannel+0x16a>
 800338a:	683b      	ldr	r3, [r7, #0]
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	2b11      	cmp	r3, #17
 8003390:	d132      	bne.n	80033f8 <HAL_ADC_ConfigChannel+0x1d0>
